/*******************************************************************
  This file has been automatically generated by ispc
  DO NOT EDIT THIS FILE DIRECTLY
 *******************************************************************/

#include "precomp.h"

/* Provide Declarations */
#include <stdarg.h>
#include <setjmp.h>
#include <limits.h>
#include <stdlib.h>
#ifdef _MSC_VER
  #define NOMINMAX
  #include <windows.h>
#endif // _MSC_VER
#include <stdlib.h>
#include <stdint.h>
/* get a declaration for alloca */
#ifdef _MSC_VER
  #include <malloc.h>
  #define alloca _alloca
#else
  #include <alloca.h>
#endif

#undef ISPC_FAST_MATH

/* Basic Library Function Declarations */
extern "C" {
int puts(unsigned char *);
unsigned int putchar(unsigned int);
int fflush(void *);
int printf(const unsigned char *, ...);
uint8_t *memcpy(uint8_t *, uint8_t *, uint64_t );
uint8_t *memset(uint8_t *, uint8_t, uint64_t );
void memset_pattern16(void *, const void *, uint64_t );
}

#ifndef __GNUC__  /* Can only support "linkonce" vars with GCC */
#define __attribute__(X)
#endif

#if defined(__GNUC__) && defined(__APPLE_CC__)
#define __EXTERNAL_WEAK__ __attribute__((weak_import))
#elif defined(__GNUC__)
#define __EXTERNAL_WEAK__ __attribute__((weak))
#else
#define __EXTERNAL_WEAK__
#endif

#if defined(__GNUC__) && defined(__APPLE_CC__)
#define __ATTRIBUTE_WEAK__
#elif defined(__GNUC__)
#define __ATTRIBUTE_WEAK__ __attribute__((weak))
#else
#define __ATTRIBUTE_WEAK__
#endif

#if defined(__GNUC__)
#define __HIDDEN__ __attribute__((visibility("hidden")))
#endif

#if (defined(__GNUC__) || defined(__clang__)) && !defined(__INTEL_COMPILER)
#define LLVM_NAN(NanStr)   __builtin_nan(NanStr)   /* Double */
#define LLVM_NANF(NanStr)  __builtin_nanf(NanStr)  /* Float */
#define LLVM_NANS(NanStr)  __builtin_nans(NanStr)  /* Double */
#define LLVM_NANSF(NanStr) __builtin_nansf(NanStr) /* Float */
#define LLVM_INF           __builtin_inf()         /* Double */
#define LLVM_INFF          __builtin_inff()        /* Float */
//#define LLVM_PREFETCH(addr,rw,locality) __builtin_prefetch(addr,rw,locality)
//#define __ATTRIBUTE_CTOR__ __attribute__((constructor))
//#define __ATTRIBUTE_DTOR__ __attribute__((destructor))
#elif defined(_MSC_VER) || defined(__INTEL_COMPILER)
#include <limits>
#define LLVM_NAN(NanStr)   std::numeric_limits<double>::quiet_NaN()
#define LLVM_NANF(NanStr)  std::numeric_limits<float>::quiet_NaN()
#define LLVM_NANS(NanStr)  std::numeric_limits<double>::signaling_NaN()
#define LLVM_NANSF(NanStr) std::numeric_limits<float>::signaling_NaN()
#define LLVM_INF           std::numeric_limits<double>::infinity()
#define LLVM_INFF          std::numeric_limits<float>::infinity()
//#define LLVM_PREFETCH(addr,rw,locality)            /* PREFETCH */
//#define __ATTRIBUTE_CTOR__
//#define __ATTRIBUTE_DTOR__
#else
#error "Not MSVC, clang, or g++?"
#endif

#if (defined(__GNUC__) || defined(__clang__))
#define LLVM_ASM(X) __asm(X)
#endif

#if defined(__clang__) || defined(__INTEL_COMPILER) || (__GNUC__ < 4) /* Old GCCs, or compilers not GCC */ 
#define __builtin_stack_save() 0   /* not implemented */
#define __builtin_stack_restore(X) /* noop */
#endif

#define CODE_FOR_MAIN() /* Any target-specific code for main()*/

#ifndef __cplusplus
typedef unsigned char bool;
#endif


/* Support for floating point constants */
typedef uint64_t ConstantDoubleTy;
typedef uint32_t ConstantFloatTy;
typedef struct { unsigned long long f1; unsigned short f2; unsigned short pad[3]; } ConstantFP80Ty;
typedef struct { uint64_t f1, f2; } ConstantFP128Ty;


/* Global Declarations */


/* Helper union for bitcasts */
typedef union {
  unsigned int Int32;
  unsigned long long Int64;
  float Float;
  double Double;
} llvmBitCastUnion;

/* This is special class, designed for operations with long int.*/                       
namespace {                                                                                
template <int num_bits>                                                                    
struct iN {                                                                                
  int num[num_bits / (sizeof (int) * 8)];                                                  
                                                                                           
  iN () {}                                                                                 
                                                                                           
  iN (const char *val) {                                                                   
    if (val == NULL)                                                                       
      return;                                                                              
    int length = num_bits / (sizeof (int) * 8);                                            
    int val_len = 0;                                                                       
    for (val_len = 0; val[val_len]; (val_len)++);                                          
    for (int i = 0; (i < val_len && i < num_bits); i++)                                    
      num[i / (sizeof (int) * 8)] = (num[i / (sizeof (int) * 8)] << 1) | (val[i] - '0');   
  }                                                                                        
                                                                                           
  ~iN () {}                                                                                
                                                                                           
  iN operator >> (const iN rhs) {                                                          
    iN res;                                                                                
    int length = num_bits / (sizeof (int) * 8);                                            
    int cells_shift = rhs.num[0] / (sizeof(int) * 8);                                      
    int small_shift = rhs.num[0] % (sizeof(int) * 8);                                      
    for (int i = 0; i < (length - cells_shift); i++)                                       
      res.num[i] = this->num[cells_shift + i];                                             
    for (int i = 0; i < length - 1; i++) {                                                 
      res.num[i] = this->num[i] >> small_shift;                                            
      res.num[i]  = ((this->num[i + 1] << ((sizeof(int) * 8) - small_shift))) | res.num[i];
    }                                                                                      
    res.num[length - 1] = res.num[length - 1] >> small_shift;                              
    return res;                                                                            
  }                                                                                        
                                                                                           
  iN operator & (iN rhs) {                                                                 
    iN res;                                                                                
    int length = num_bits / (sizeof (int) * 8);                                            
    for (int i = 0; i < length; i++)                                                       
      res.num[i] = (this->num[i]) & (rhs.num[i]);                                          
    return res;                                                                            
  }                                                                                        
                                                                                           
  operator uint32_t() { return this->num[0]; }                                             
                                                                                           
  template <class T>                                                                       
  friend iN<num_bits> __cast_bits(iN<num_bits> to, T from) {                               
    for (int i = 0; i <64; i++)                                         
      to.num[i] = ((int*)(&from))[i];                                                      
    return to;                                                                             
  }                                                                                        
                                                                                           
  template <class T>                                                                       
  friend T __cast_bits(T to, iN<num_bits> from) {                                          
    for (int i = 0; i <64; i++)                                         
      ((int*)(&to))[i] = from.num[i];                                                      
    return to;                                                                             
  }                                                                                        
                                                                                           
  template <int ALIGN, class T>                                                            
  friend void __store(T *p, iN<num_bits> val) {                                            
    for (int i = 0; i <64; i++)                                         
      ((int*)p)[i] = val.num[i];                                                           
  }                                                                                        
};                                                                                         
};

/* Structure and array forward declarations */
struct l_v64_uniform_VertexInput;
struct l_v64_uniform_float3;
struct l_v64_uniform_VertexOutput;
struct l_v64_uniform_float4;
struct l_v64_uniform_Constants;
struct l_v64_uniform_matrix4x4;
struct l_v64_varying_float4;
struct l_v64_varying_VertexInput;
struct l_v64_varying_float3;
namespace {
  struct l_array_0;
  struct l_array_1;
};

/* Structure and array contents */
struct l_v64_uniform_float3 {
  static l_v64_uniform_float3 init(float v0, float v1, float v2, float v3) {
    l_v64_uniform_float3 ret;
    ret.field0 = v0;
    ret.field1 = v1;
    ret.field2 = v2;
    ret.field3 = v3;
    return ret;
  }
  float field0;
  float field1;
  float field2;
  float field3;
};

struct l_v64_uniform_VertexInput {
  static l_v64_uniform_VertexInput init(l_v64_uniform_float3 v0, l_v64_uniform_float3 v1) {
    l_v64_uniform_VertexInput ret;
    ret.field0 = v0;
    ret.field1 = v1;
    return ret;
  }
  l_v64_uniform_float3 field0;
  l_v64_uniform_float3 field1;
};

struct l_v64_uniform_float4 {
  static l_v64_uniform_float4 init(float v0, float v1, float v2, float v3) {
    l_v64_uniform_float4 ret;
    ret.field0 = v0;
    ret.field1 = v1;
    ret.field2 = v2;
    ret.field3 = v3;
    return ret;
  }
  float field0;
  float field1;
  float field2;
  float field3;
};

struct l_v64_uniform_VertexOutput {
  static l_v64_uniform_VertexOutput init(l_v64_uniform_float4 v0, l_v64_uniform_float3 v1) {
    l_v64_uniform_VertexOutput ret;
    ret.field0 = v0;
    ret.field1 = v1;
    return ret;
  }
  l_v64_uniform_float4 field0;
  l_v64_uniform_float3 field1;
};

namespace {
struct l_array_1 {
  static l_array_1 init(float v0, float v1, float v2, float v3) {
    l_array_1 ret;
    ret.array[0] = v0;
    ret.array[1] = v1;
    ret.array[2] = v2;
    ret.array[3] = v3;
    return ret;
  }
  float array[4];
} ;
}

namespace {
struct l_array_0 {
  static l_array_0 init(l_array_1 v0, l_array_1 v1, l_array_1 v2, l_array_1 v3) {
    l_array_0 ret;
    ret.array[0] = v0;
    ret.array[1] = v1;
    ret.array[2] = v2;
    ret.array[3] = v3;
    return ret;
  }
  l_array_1 array[4];
} ;
}

struct l_v64_uniform_matrix4x4 {
  static l_v64_uniform_matrix4x4 init(l_array_0 v0) {
    l_v64_uniform_matrix4x4 ret;
    ret.field0 = v0;
    return ret;
  }
  l_array_0 field0;
};

struct l_v64_uniform_Constants {
  static l_v64_uniform_Constants init(l_v64_uniform_matrix4x4 v0, l_v64_uniform_matrix4x4 v1, l_v64_uniform_matrix4x4 v2) {
    l_v64_uniform_Constants ret;
    ret.field0 = v0;
    ret.field1 = v1;
    ret.field2 = v2;
    return ret;
  }
  l_v64_uniform_matrix4x4 field0;
  l_v64_uniform_matrix4x4 field1;
  l_v64_uniform_matrix4x4 field2;
};

struct l_v64_varying_float4 {
  static l_v64_varying_float4 init(__vec64_f v0, __vec64_f v1, __vec64_f v2, __vec64_f v3) {
    l_v64_varying_float4 ret;
    ret.field0 = v0;
    ret.field1 = v1;
    ret.field2 = v2;
    ret.field3 = v3;
    return ret;
  }
  __vec64_f field0;
  __vec64_f field1;
  __vec64_f field2;
  __vec64_f field3;
};

struct l_v64_varying_float3 {
  static l_v64_varying_float3 init(__vec64_f v0, __vec64_f v1, __vec64_f v2, __vec64_f v3) {
    l_v64_varying_float3 ret;
    ret.field0 = v0;
    ret.field1 = v1;
    ret.field2 = v2;
    ret.field3 = v3;
    return ret;
  }
  __vec64_f field0;
  __vec64_f field1;
  __vec64_f field2;
  __vec64_f field3;
};

struct l_v64_varying_VertexInput {
  static l_v64_varying_VertexInput init(l_v64_varying_float3 v0, l_v64_varying_float3 v1) {
    l_v64_varying_VertexInput ret;
    ret.field0 = v0;
    ret.field1 = v1;
    return ret;
  }
  l_v64_varying_float3 field0;
  l_v64_varying_float3 field1;
};

namespace {
};


/* Function Declarations */
extern "C" {
void vertex_shader___un_3C_s_5B_unVertexInput_5D__3E_un_3C_s_5B_unVertexOutput_5D__3E_uniREFs_5B__c_unConstants_5D_(l_v64_uniform_VertexInput *input_, l_v64_uniform_VertexOutput *output_, uint32_t count_, l_v64_uniform_Constants *constants_, __vec64_i1 __mask_);
void vertex_shader(l_v64_uniform_VertexInput *input_, l_v64_uniform_VertexOutput *output_, uint32_t count_, l_v64_uniform_Constants *constants_);
}



/* Function Bodies */
template <typename A, typename B> static inline int llvm_fcmp_ord(A X, B Y) { return X == X && Y == Y; }
template <typename A, typename B> static inline int llvm_fcmp_uno(A X, B Y) { return X != X || Y != Y; }
template <typename A, typename B> static inline int llvm_fcmp_ueq(A X, B Y) { return X == Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_une(A X, B Y) { return X != Y; }
template <typename A, typename B> static inline int llvm_fcmp_ult(A X, B Y) { return X <  Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_ugt(A X, B Y) { return X >  Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_ule(A X, B Y) { return X <= Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_uge(A X, B Y) { return X >= Y || llvm_fcmp_uno(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_oeq(A X, B Y) { return X == Y ; }
template <typename A, typename B> static inline int llvm_fcmp_one(A X, B Y) { return X != Y && llvm_fcmp_ord(X, Y); }
template <typename A, typename B> static inline int llvm_fcmp_olt(A X, B Y) { return X <  Y ; }
template <typename A, typename B> static inline int llvm_fcmp_ogt(A X, B Y) { return X >  Y ; }
template <typename A, typename B> static inline int llvm_fcmp_ole(A X, B Y) { return X <= Y ; }
template <typename A, typename B> static inline int llvm_fcmp_oge(A X, B Y) { return X >= Y ; }
template <typename A> A *Memset(A *ptr, int count, size_t len) { return (A *)memset(ptr, count, len); }

static const int32_t __attribute__ ((aligned(64))) VectorConstant0[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u, 16u, 17u, 18u, 19u, 20u, 21u, 22u, 23u, 24u, 25u, 26u, 27u, 28u, 29u, 30u, 31u, 32u, 33u, 34u, 35u, 36u, 37u, 38u, 39u, 40u, 41u, 42u, 43u, 44u, 45u, 46u, 47u, 48u, 49u, 50u, 51u, 52u, 53u, 54u, 55u, 56u, 57u, 58u, 59u, 60u, 61u, 62u, 63u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant1[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u, 16u, 17u, 18u, 19u, 20u, 21u, 22u, 23u, 24u, 25u, 26u, 27u, 28u, 29u, 30u, 31u, 32u, 33u, 34u, 35u, 36u, 37u, 38u, 39u, 40u, 41u, 42u, 43u, 44u, 45u, 46u, 47u, 48u, 49u, 50u, 51u, 52u, 53u, 54u, 55u, 56u, 57u, 58u, 59u, 60u, 61u, 62u, 63u,  };

void vertex_shader___un_3C_s_5B_unVertexInput_5D__3E_un_3C_s_5B_unVertexOutput_5D__3E_uniREFs_5B__c_unConstants_5D_(l_v64_uniform_VertexInput *input_, l_v64_uniform_VertexOutput *output_, uint32_t count_, l_v64_uniform_Constants *constants_, __vec64_i1 __mask_) {
  l_v64_varying_float4 row0_2e_i1579_;    /* Address-exposed local */
  l_v64_varying_float4 row1_2e_i1580_;    /* Address-exposed local */
  l_v64_varying_float4 row2_2e_i1581_;    /* Address-exposed local */
  l_v64_varying_float4 row3_2e_i1582_;    /* Address-exposed local */
  l_v64_varying_float4 row0_2e_i1384_;    /* Address-exposed local */
  l_v64_varying_float4 row1_2e_i1385_;    /* Address-exposed local */
  l_v64_varying_float4 row2_2e_i1386_;    /* Address-exposed local */
  l_v64_varying_float4 row3_2e_i1387_;    /* Address-exposed local */
  l_v64_varying_float4 row0_2e_i1189_;    /* Address-exposed local */
  l_v64_varying_float4 row1_2e_i1190_;    /* Address-exposed local */
  l_v64_varying_float4 row2_2e_i1191_;    /* Address-exposed local */
  l_v64_varying_float4 row3_2e_i1192_;    /* Address-exposed local */
  l_v64_varying_VertexInput v_;    /* Address-exposed local */
  l_v64_varying_VertexInput v157_;    /* Address-exposed local */
  l_v64_varying_float4 wpos221_;    /* Address-exposed local */
  uint32_t aligned_end_;
  uint8_t *input_load_ptr2int_2void_;
  __vec64_f (*v8384_);
  __vec64_f (*v8788_);
  __vec64_f (*v9192_);
  float *m_load3_offset_offset_2e_i_;
  float *m_load78_offset_offset_2e_i_;
  float *m_load1213_offset_offset_2e_i_;
  float *m_load1718_offset_offset_2e_i_;
  float *m_load2223_offset_offset_2e_i_;
  float *m_load2728_offset_offset_2e_i_;
  float *m_load3233_offset_offset_2e_i_;
  float *m_load3738_offset_offset_2e_i_;
  float *m_load4243_offset_offset_2e_i_;
  float *m_load4748_offset_offset_2e_i_;
  float *m_load5253_offset_offset_2e_i_;
  float *m_load5758_offset_offset_2e_i_;
  float *m_load6263_offset_offset_2e_i_;
  float *m_load6768_offset_offset_2e_i_;
  float *m_load7273_offset_offset_2e_i_;
  float *m_load7778_offset_offset_2e_i_;
  float *m_load3_offset_offset_2e_i804_;
  float *m_load78_offset_offset_2e_i809_;
  float *m_load1213_offset_offset_2e_i814_;
  float *m_load1718_offset_offset_2e_i819_;
  float *m_load2223_offset_offset_2e_i824_;
  float *m_load2728_offset_offset_2e_i829_;
  float *m_load3233_offset_offset_2e_i834_;
  float *m_load3738_offset_offset_2e_i839_;
  float *m_load4243_offset_offset_2e_i844_;
  float *m_load4748_offset_offset_2e_i849_;
  float *m_load5253_offset_offset_2e_i854_;
  float *m_load5758_offset_offset_2e_i859_;
  float *m_load6263_offset_offset_2e_i864_;
  float *m_load6768_offset_offset_2e_i869_;
  float *m_load7273_offset_offset_2e_i874_;
  float *m_load7778_offset_offset_2e_i879_;
  float *m_load3_offset_offset_2e_i999_;
  float *m_load78_offset_offset_2e_i1004_;
  float *m_load1213_offset_offset_2e_i1009_;
  float *m_load1718_offset_offset_2e_i1014_;
  float *m_load2223_offset_offset_2e_i1019_;
  float *m_load2728_offset_offset_2e_i1024_;
  float *m_load3233_offset_offset_2e_i1029_;
  float *m_load3738_offset_offset_2e_i1034_;
  float *m_load4243_offset_offset_2e_i1039_;
  float *m_load4748_offset_offset_2e_i1044_;
  float *m_load5253_offset_offset_2e_i1049_;
  float *m_load5758_offset_offset_2e_i1054_;
  float *m_load6263_offset_offset_2e_i1059_;
  float *m_load6768_offset_offset_2e_i1064_;
  float *m_load7273_offset_offset_2e_i1069_;
  float *m_load7778_offset_offset_2e_i1074_;
  uint8_t *output_load_ptr2int_2void_;
  l_v64_varying_float3 *v127_;
  uint32_t counter_2e_16999_;
  uint32_t counter_2e_16999___PHI;
  __vec64_i32 counter_2e_16999_smear_;
  __vec64_i32 mul__index_load24_;
  __vec64_f input_load_offset_load296_;
  l_v64_varying_float3 set_value_;
  __vec64_i32 new_add_;
  __vec64_f input_load_offset_load39301_;
  l_v64_varying_float3 set_value40_;
  __vec64_i32 new_add308_;
  __vec64_f input_load_offset_load45309_;
  l_v64_varying_float3 set_value46_;
  __vec64_i32 new_add317_;
  __vec64_f input_load_offset_load51318_;
  l_v64_varying_float3 set_value52_;
  l_v64_varying_VertexInput set_value53_;
  __vec64_i32 new_add327_;
  __vec64_f input_load_offset_load62328_;
  l_v64_varying_float3 set_value63_;
  __vec64_i32 new_add338_;
  __vec64_f input_load_offset_load68339_;
  l_v64_varying_float3 set_value69_;
  __vec64_i32 new_add350_;
  __vec64_f input_load_offset_load74351_;
  l_v64_varying_float3 set_value75_;
  __vec64_i32 new_add363_;
  __vec64_f input_load_offset_load80364_;
  l_v64_varying_float3 set_value81_;
  l_v64_varying_VertexInput set_value82_;
  __vec64_f v8384_x_;
  __vec64_f v8788_y_;
  __vec64_f v9192_z_;
  float m_load3_offset_offset_load_2e_i_;
  __vec64_f m_load3_offset_offset_load_2e_i_smear_;
  float m_load78_offset_offset_load_2e_i_;
  __vec64_f m_load78_offset_offset_load_2e_i_smear_;
  float m_load1213_offset_offset_load_2e_i_;
  __vec64_f m_load1213_offset_offset_load_2e_i_smear_;
  float m_load1718_offset_offset_load_2e_i_;
  __vec64_f m_load1718_offset_offset_load_2e_i_smear_;
  float m_load2223_offset_offset_load_2e_i_;
  __vec64_f m_load2223_offset_offset_load_2e_i_smear_;
  float m_load2728_offset_offset_load_2e_i_;
  __vec64_f m_load2728_offset_offset_load_2e_i_smear_;
  float m_load3233_offset_offset_load_2e_i_;
  __vec64_f m_load3233_offset_offset_load_2e_i_smear_;
  float m_load3738_offset_offset_load_2e_i_;
  __vec64_f m_load3738_offset_offset_load_2e_i_smear_;
  float m_load4243_offset_offset_load_2e_i_;
  __vec64_f m_load4243_offset_offset_load_2e_i_smear_;
  float m_load4748_offset_offset_load_2e_i_;
  __vec64_f m_load4748_offset_offset_load_2e_i_smear_;
  float m_load5253_offset_offset_load_2e_i_;
  __vec64_f m_load5253_offset_offset_load_2e_i_smear_;
  float m_load5758_offset_offset_load_2e_i_;
  __vec64_f m_load5758_offset_offset_load_2e_i_smear_;
  float m_load6263_offset_offset_load_2e_i_;
  __vec64_f m_load6263_offset_offset_load_2e_i_smear_;
  float m_load6768_offset_offset_load_2e_i_;
  __vec64_f m_load6768_offset_offset_load_2e_i_smear_;
  float m_load7273_offset_offset_load_2e_i_;
  __vec64_f m_load7273_offset_offset_load_2e_i_smear_;
  float m_load7778_offset_offset_load_2e_i_;
  __vec64_f m_load7778_offset_offset_load_2e_i_smear_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i_;
  float m_load3_offset_offset_load_2e_i805_;
  __vec64_f m_load3_offset_offset_load_2e_i805_smear_;
  float m_load78_offset_offset_load_2e_i810_;
  __vec64_f m_load78_offset_offset_load_2e_i810_smear_;
  float m_load1213_offset_offset_load_2e_i815_;
  __vec64_f m_load1213_offset_offset_load_2e_i815_smear_;
  float m_load1718_offset_offset_load_2e_i820_;
  __vec64_f m_load1718_offset_offset_load_2e_i820_smear_;
  float m_load2223_offset_offset_load_2e_i825_;
  __vec64_f m_load2223_offset_offset_load_2e_i825_smear_;
  float m_load2728_offset_offset_load_2e_i830_;
  __vec64_f m_load2728_offset_offset_load_2e_i830_smear_;
  float m_load3233_offset_offset_load_2e_i835_;
  __vec64_f m_load3233_offset_offset_load_2e_i835_smear_;
  float m_load3738_offset_offset_load_2e_i840_;
  __vec64_f m_load3738_offset_offset_load_2e_i840_smear_;
  float m_load4243_offset_offset_load_2e_i845_;
  __vec64_f m_load4243_offset_offset_load_2e_i845_smear_;
  float m_load4748_offset_offset_load_2e_i850_;
  __vec64_f m_load4748_offset_offset_load_2e_i850_smear_;
  float m_load5253_offset_offset_load_2e_i855_;
  __vec64_f m_load5253_offset_offset_load_2e_i855_smear_;
  float m_load5758_offset_offset_load_2e_i860_;
  __vec64_f m_load5758_offset_offset_load_2e_i860_smear_;
  float m_load6263_offset_offset_load_2e_i865_;
  __vec64_f m_load6263_offset_offset_load_2e_i865_smear_;
  float m_load6768_offset_offset_load_2e_i870_;
  __vec64_f m_load6768_offset_offset_load_2e_i870_smear_;
  float m_load7273_offset_offset_load_2e_i875_;
  __vec64_f m_load7273_offset_offset_load_2e_i875_smear_;
  float m_load7778_offset_offset_load_2e_i880_;
  __vec64_f m_load7778_offset_offset_load_2e_i880_smear_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i911_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i937_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i963_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i989_;
  float m_load3_offset_offset_load_2e_i1000_;
  __vec64_f m_load3_offset_offset_load_2e_i1000_smear_;
  float m_load78_offset_offset_load_2e_i1005_;
  __vec64_f m_load78_offset_offset_load_2e_i1005_smear_;
  float m_load1213_offset_offset_load_2e_i1010_;
  __vec64_f m_load1213_offset_offset_load_2e_i1010_smear_;
  float m_load1718_offset_offset_load_2e_i1015_;
  __vec64_f m_load1718_offset_offset_load_2e_i1015_smear_;
  float m_load2223_offset_offset_load_2e_i1020_;
  __vec64_f m_load2223_offset_offset_load_2e_i1020_smear_;
  float m_load2728_offset_offset_load_2e_i1025_;
  __vec64_f m_load2728_offset_offset_load_2e_i1025_smear_;
  float m_load3233_offset_offset_load_2e_i1030_;
  __vec64_f m_load3233_offset_offset_load_2e_i1030_smear_;
  float m_load3738_offset_offset_load_2e_i1035_;
  __vec64_f m_load3738_offset_offset_load_2e_i1035_smear_;
  float m_load4243_offset_offset_load_2e_i1040_;
  __vec64_f m_load4243_offset_offset_load_2e_i1040_smear_;
  float m_load4748_offset_offset_load_2e_i1045_;
  __vec64_f m_load4748_offset_offset_load_2e_i1045_smear_;
  float m_load5253_offset_offset_load_2e_i1050_;
  __vec64_f m_load5253_offset_offset_load_2e_i1050_smear_;
  float m_load5758_offset_offset_load_2e_i1055_;
  __vec64_f m_load5758_offset_offset_load_2e_i1055_smear_;
  float m_load6263_offset_offset_load_2e_i1060_;
  __vec64_f m_load6263_offset_offset_load_2e_i1060_smear_;
  float m_load6768_offset_offset_load_2e_i1065_;
  __vec64_f m_load6768_offset_offset_load_2e_i1065_smear_;
  float m_load7273_offset_offset_load_2e_i1070_;
  __vec64_f m_load7273_offset_offset_load_2e_i1070_smear_;
  float m_load7778_offset_offset_load_2e_i1075_;
  __vec64_f m_load7778_offset_offset_load_2e_i1075_smear_;
  l_v64_varying_float3 v127_Color_;
  __vec64_f v127_Color_extract_0_;
  __vec64_f v127_Color_extract_1_;
  __vec64_f v127_Color_extract_2_;
  __vec64_f v127_Color_extract_3_;
  uint32_t new_counter_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec64_i32 counter_2e_1_2e_lcssa_smear_;
  __vec64_i32 iter_val149_;
  __vec64_i32 count_smear_;
  __vec64_i1 cmp152_;
  __vec64_i32 mul__index_load158_;
  uint8_t *input_load159_ptr2int_2void_;
  __vec64_f input_load159_offset_load510_;
  l_v64_varying_float3 set_value172_;
  __vec64_i32 new_add515_;
  __vec64_f input_load159_offset_load177516_;
  l_v64_varying_float3 set_value178_;
  __vec64_i32 new_add523_;
  __vec64_f input_load159_offset_load183524_;
  l_v64_varying_float3 set_value184_;
  __vec64_i32 new_add532_;
  __vec64_f input_load159_offset_load189533_;
  l_v64_varying_float3 set_value190_;
  l_v64_varying_VertexInput set_value191_;
  __vec64_i32 new_add542_;
  __vec64_f input_load159_offset_load200543_;
  l_v64_varying_float3 set_value201_;
  __vec64_i32 new_add553_;
  __vec64_f input_load159_offset_load206554_;
  l_v64_varying_float3 set_value207_;
  __vec64_i32 new_add565_;
  __vec64_f input_load159_offset_load212566_;
  l_v64_varying_float3 set_value213_;
  __vec64_i32 new_add578_;
  __vec64_f input_load159_offset_load218579_;
  l_v64_varying_float3 set_value219_;
  l_v64_varying_VertexInput set_value220_;
  __vec64_f v157223224_x_;
  __vec64_f (*element226_);
  __vec64_f v157227228_y_;
  __vec64_f (*element230_);
  __vec64_f v157231232_z_;
  __vec64_f (*element234_);
  float m_load3_offset_offset_load_2e_i1195_;
  __vec64_f m_load3_offset_offset_load_2e_i1195_smear_;
  __vec64_f (*element6_2e_i1198_);
  float m_load78_offset_offset_load_2e_i1200_;
  __vec64_f m_load78_offset_offset_load_2e_i1200_smear_;
  __vec64_f (*element11_2e_i1203_);
  float m_load1213_offset_offset_load_2e_i1205_;
  __vec64_f m_load1213_offset_offset_load_2e_i1205_smear_;
  __vec64_f (*element16_2e_i1208_);
  float m_load1718_offset_offset_load_2e_i1210_;
  __vec64_f m_load1718_offset_offset_load_2e_i1210_smear_;
  float m_load2223_offset_offset_load_2e_i1215_;
  __vec64_f m_load2223_offset_offset_load_2e_i1215_smear_;
  __vec64_f (*element26_2e_i1218_);
  float m_load2728_offset_offset_load_2e_i1220_;
  __vec64_f m_load2728_offset_offset_load_2e_i1220_smear_;
  __vec64_f (*element31_2e_i1223_);
  float m_load3233_offset_offset_load_2e_i1225_;
  __vec64_f m_load3233_offset_offset_load_2e_i1225_smear_;
  __vec64_f (*element36_2e_i1228_);
  float m_load3738_offset_offset_load_2e_i1230_;
  __vec64_f m_load3738_offset_offset_load_2e_i1230_smear_;
  float m_load4243_offset_offset_load_2e_i1235_;
  __vec64_f m_load4243_offset_offset_load_2e_i1235_smear_;
  __vec64_f (*element46_2e_i1238_);
  float m_load4748_offset_offset_load_2e_i1240_;
  __vec64_f m_load4748_offset_offset_load_2e_i1240_smear_;
  __vec64_f (*element51_2e_i1243_);
  float m_load5253_offset_offset_load_2e_i1245_;
  __vec64_f m_load5253_offset_offset_load_2e_i1245_smear_;
  __vec64_f (*element56_2e_i1248_);
  float m_load5758_offset_offset_load_2e_i1250_;
  __vec64_f m_load5758_offset_offset_load_2e_i1250_smear_;
  float m_load6263_offset_offset_load_2e_i1255_;
  __vec64_f m_load6263_offset_offset_load_2e_i1255_smear_;
  __vec64_f (*element66_2e_i1258_);
  float m_load6768_offset_offset_load_2e_i1260_;
  __vec64_f m_load6768_offset_offset_load_2e_i1260_smear_;
  __vec64_f (*element71_2e_i1263_);
  float m_load7273_offset_offset_load_2e_i1265_;
  __vec64_f m_load7273_offset_offset_load_2e_i1265_smear_;
  __vec64_f (*element76_2e_i1268_);
  float m_load7778_offset_offset_load_2e_i1270_;
  __vec64_f m_load7778_offset_offset_load_2e_i1270_smear_;
  __vec64_f ptr4862_masked_load_;
  uint8_t *v_load_ptr2int_2e_i1276_2void_;
  __vec64_f ptr4883_masked_load_;
  __vec64_f ptr4905_masked_load_;
  uint8_t *tmp__1_;
  __vec64_f ptr4927_masked_load_;
  __vec64_f ptr4949_masked_load_;
  uint8_t *tmp__2_;
  __vec64_f ptr4971_masked_load_;
  __vec64_f ptr4993_masked_load_;
  uint8_t *tmp__3_;
  __vec64_f ptr5015_masked_load_;
  __vec64_f ptr5036_masked_load_;
  __vec64_f ptr5080_masked_load_;
  __vec64_f ptr5124_masked_load_;
  __vec64_f ptr5168_masked_load_;
  __vec64_f ptr5211_masked_load_;
  __vec64_f ptr5255_masked_load_;
  __vec64_f ptr5299_masked_load_;
  __vec64_f ptr5343_masked_load_;
  __vec64_f ptr5386_masked_load_;
  __vec64_f ptr5430_masked_load_;
  __vec64_f ptr5474_masked_load_;
  __vec64_f ptr5518_masked_load_;
  l_v64_varying_float4 oldret768_;
  l_v64_varying_float4 oldret770_;
  l_v64_varying_float4 oldret772_;
  l_v64_varying_float4 oldret774_;
  float m_load3_offset_offset_load_2e_i1390_;
  __vec64_f m_load3_offset_offset_load_2e_i1390_smear_;
  __vec64_f (*element6_2e_i1393_);
  float m_load78_offset_offset_load_2e_i1395_;
  __vec64_f m_load78_offset_offset_load_2e_i1395_smear_;
  __vec64_f (*element11_2e_i1398_);
  float m_load1213_offset_offset_load_2e_i1400_;
  __vec64_f m_load1213_offset_offset_load_2e_i1400_smear_;
  __vec64_f (*element16_2e_i1403_);
  float m_load1718_offset_offset_load_2e_i1405_;
  __vec64_f m_load1718_offset_offset_load_2e_i1405_smear_;
  float m_load2223_offset_offset_load_2e_i1410_;
  __vec64_f m_load2223_offset_offset_load_2e_i1410_smear_;
  __vec64_f (*element26_2e_i1413_);
  float m_load2728_offset_offset_load_2e_i1415_;
  __vec64_f m_load2728_offset_offset_load_2e_i1415_smear_;
  __vec64_f (*element31_2e_i1418_);
  float m_load3233_offset_offset_load_2e_i1420_;
  __vec64_f m_load3233_offset_offset_load_2e_i1420_smear_;
  __vec64_f (*element36_2e_i1423_);
  float m_load3738_offset_offset_load_2e_i1425_;
  __vec64_f m_load3738_offset_offset_load_2e_i1425_smear_;
  float m_load4243_offset_offset_load_2e_i1430_;
  __vec64_f m_load4243_offset_offset_load_2e_i1430_smear_;
  __vec64_f (*element46_2e_i1433_);
  float m_load4748_offset_offset_load_2e_i1435_;
  __vec64_f m_load4748_offset_offset_load_2e_i1435_smear_;
  __vec64_f (*element51_2e_i1438_);
  float m_load5253_offset_offset_load_2e_i1440_;
  __vec64_f m_load5253_offset_offset_load_2e_i1440_smear_;
  __vec64_f (*element56_2e_i1443_);
  float m_load5758_offset_offset_load_2e_i1445_;
  __vec64_f m_load5758_offset_offset_load_2e_i1445_smear_;
  float m_load6263_offset_offset_load_2e_i1450_;
  __vec64_f m_load6263_offset_offset_load_2e_i1450_smear_;
  __vec64_f (*element66_2e_i1453_);
  float m_load6768_offset_offset_load_2e_i1455_;
  __vec64_f m_load6768_offset_offset_load_2e_i1455_smear_;
  __vec64_f (*element71_2e_i1458_);
  float m_load7273_offset_offset_load_2e_i1460_;
  __vec64_f m_load7273_offset_offset_load_2e_i1460_smear_;
  __vec64_f (*element76_2e_i1463_);
  float m_load7778_offset_offset_load_2e_i1465_;
  __vec64_f m_load7778_offset_offset_load_2e_i1465_smear_;
  __vec64_f ptr5561_masked_load_;
  __vec64_f ptr5582_masked_load_;
  __vec64_f ptr5604_masked_load_;
  __vec64_f ptr5626_masked_load_;
  __vec64_f ptr5648_masked_load_;
  __vec64_f ptr5670_masked_load_;
  __vec64_f ptr5692_masked_load_;
  __vec64_f ptr5714_masked_load_;
  __vec64_f ptr5735_masked_load_;
  __vec64_f ptr5779_masked_load_;
  __vec64_f ptr5823_masked_load_;
  __vec64_f ptr5867_masked_load_;
  __vec64_f ptr5910_masked_load_;
  __vec64_f ptr5954_masked_load_;
  __vec64_f ptr5998_masked_load_;
  __vec64_f ptr6042_masked_load_;
  __vec64_f ptr6085_masked_load_;
  __vec64_f ptr6129_masked_load_;
  __vec64_f ptr6173_masked_load_;
  __vec64_f ptr6217_masked_load_;
  l_v64_varying_float4 oldret760_;
  l_v64_varying_float4 oldret762_;
  l_v64_varying_float4 oldret764_;
  l_v64_varying_float4 oldret766_;
  float m_load3_offset_offset_load_2e_i1585_;
  __vec64_f m_load3_offset_offset_load_2e_i1585_smear_;
  __vec64_f (*element6_2e_i1588_);
  float m_load78_offset_offset_load_2e_i1590_;
  __vec64_f m_load78_offset_offset_load_2e_i1590_smear_;
  __vec64_f (*element11_2e_i1593_);
  float m_load1213_offset_offset_load_2e_i1595_;
  __vec64_f m_load1213_offset_offset_load_2e_i1595_smear_;
  __vec64_f (*element16_2e_i1598_);
  float m_load1718_offset_offset_load_2e_i1600_;
  __vec64_f m_load1718_offset_offset_load_2e_i1600_smear_;
  float m_load2223_offset_offset_load_2e_i1605_;
  __vec64_f m_load2223_offset_offset_load_2e_i1605_smear_;
  __vec64_f (*element26_2e_i1608_);
  float m_load2728_offset_offset_load_2e_i1610_;
  __vec64_f m_load2728_offset_offset_load_2e_i1610_smear_;
  __vec64_f (*element31_2e_i1613_);
  float m_load3233_offset_offset_load_2e_i1615_;
  __vec64_f m_load3233_offset_offset_load_2e_i1615_smear_;
  __vec64_f (*element36_2e_i1618_);
  float m_load3738_offset_offset_load_2e_i1620_;
  __vec64_f m_load3738_offset_offset_load_2e_i1620_smear_;
  float m_load4243_offset_offset_load_2e_i1625_;
  __vec64_f m_load4243_offset_offset_load_2e_i1625_smear_;
  __vec64_f (*element46_2e_i1628_);
  float m_load4748_offset_offset_load_2e_i1630_;
  __vec64_f m_load4748_offset_offset_load_2e_i1630_smear_;
  __vec64_f (*element51_2e_i1633_);
  float m_load5253_offset_offset_load_2e_i1635_;
  __vec64_f m_load5253_offset_offset_load_2e_i1635_smear_;
  __vec64_f (*element56_2e_i1638_);
  float m_load5758_offset_offset_load_2e_i1640_;
  __vec64_f m_load5758_offset_offset_load_2e_i1640_smear_;
  float m_load6263_offset_offset_load_2e_i1645_;
  __vec64_f m_load6263_offset_offset_load_2e_i1645_smear_;
  __vec64_f (*element66_2e_i1648_);
  float m_load6768_offset_offset_load_2e_i1650_;
  __vec64_f m_load6768_offset_offset_load_2e_i1650_smear_;
  __vec64_f (*element71_2e_i1653_);
  float m_load7273_offset_offset_load_2e_i1655_;
  __vec64_f m_load7273_offset_offset_load_2e_i1655_smear_;
  __vec64_f (*element76_2e_i1658_);
  float m_load7778_offset_offset_load_2e_i1660_;
  __vec64_f m_load7778_offset_offset_load_2e_i1660_smear_;
  __vec64_f ptr6260_masked_load_;
  __vec64_f ptr6281_masked_load_;
  __vec64_f ptr6303_masked_load_;
  __vec64_f ptr6325_masked_load_;
  __vec64_f ptr6347_masked_load_;
  __vec64_f ptr6369_masked_load_;
  __vec64_f ptr6391_masked_load_;
  __vec64_f ptr6413_masked_load_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i1691_;
  __vec64_f ptr6434_masked_load_;
  __vec64_f ptr6478_masked_load_;
  __vec64_f ptr6522_masked_load_;
  __vec64_f ptr6566_masked_load_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i1717_;
  __vec64_f ptr6609_masked_load_;
  __vec64_f ptr6653_masked_load_;
  __vec64_f ptr6697_masked_load_;
  __vec64_f ptr6741_masked_load_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i1743_;
  __vec64_f ptr6784_masked_load_;
  __vec64_f ptr6828_masked_load_;
  __vec64_f ptr6872_masked_load_;
  __vec64_f ptr6916_masked_load_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i1769_;
  l_v64_varying_float4 oldret_;
  l_v64_varying_float4 oldret754_;
  l_v64_varying_float4 oldret756_;
  l_v64_varying_float4 oldret758_;
  uint8_t *output_load251_ptr2int_2void_;
  l_v64_varying_float3 v157271_Color_;
  __vec64_f v157271_Color_extract_0_;
  __vec64_f v157271_Color_extract_1_;
  __vec64_f v157271_Color_extract_2_;
  __vec64_f v157271_Color_extract_3_;

  aligned_end_ = ((uint32_t )(((uint32_t )count_) - ((uint32_t )(((int32_t )(((int32_t )count_) % ((int32_t )64u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  input_load_ptr2int_2void_ = ((uint8_t *)input_);
  v8384_ = (&v_.field0.field0);
  v8788_ = (&v_.field0.field1);
  v9192_ = (&v_.field0.field2);
  m_load3_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )0ull)].array[((int64_t )0ull)]);
  m_load78_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )1ull)].array[((int64_t )0ull)]);
  m_load1213_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )2ull)].array[((int64_t )0ull)]);
  m_load1718_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )3ull)].array[((int64_t )0ull)]);
  m_load2223_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )0ull)].array[((int64_t )1ull)]);
  m_load2728_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )1ull)].array[((int64_t )1ull)]);
  m_load3233_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )2ull)].array[((int64_t )1ull)]);
  m_load3738_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )3ull)].array[((int64_t )1ull)]);
  m_load4243_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )0ull)].array[((int64_t )2ull)]);
  m_load4748_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )1ull)].array[((int64_t )2ull)]);
  m_load5253_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )2ull)].array[((int64_t )2ull)]);
  m_load5758_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )3ull)].array[((int64_t )2ull)]);
  m_load6263_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )0ull)].array[((int64_t )3ull)]);
  m_load6768_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )1ull)].array[((int64_t )3ull)]);
  m_load7273_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )2ull)].array[((int64_t )3ull)]);
  m_load7778_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )3ull)].array[((int64_t )3ull)]);
  m_load3_offset_offset_2e_i804_ = (&constants_->field1.field0.array[((int64_t )0ull)].array[((int64_t )0ull)]);
  m_load78_offset_offset_2e_i809_ = (&constants_->field1.field0.array[((int64_t )1ull)].array[((int64_t )0ull)]);
  m_load1213_offset_offset_2e_i814_ = (&constants_->field1.field0.array[((int64_t )2ull)].array[((int64_t )0ull)]);
  m_load1718_offset_offset_2e_i819_ = (&constants_->field1.field0.array[((int64_t )3ull)].array[((int64_t )0ull)]);
  m_load2223_offset_offset_2e_i824_ = (&constants_->field1.field0.array[((int64_t )0ull)].array[((int64_t )1ull)]);
  m_load2728_offset_offset_2e_i829_ = (&constants_->field1.field0.array[((int64_t )1ull)].array[((int64_t )1ull)]);
  m_load3233_offset_offset_2e_i834_ = (&constants_->field1.field0.array[((int64_t )2ull)].array[((int64_t )1ull)]);
  m_load3738_offset_offset_2e_i839_ = (&constants_->field1.field0.array[((int64_t )3ull)].array[((int64_t )1ull)]);
  m_load4243_offset_offset_2e_i844_ = (&constants_->field1.field0.array[((int64_t )0ull)].array[((int64_t )2ull)]);
  m_load4748_offset_offset_2e_i849_ = (&constants_->field1.field0.array[((int64_t )1ull)].array[((int64_t )2ull)]);
  m_load5253_offset_offset_2e_i854_ = (&constants_->field1.field0.array[((int64_t )2ull)].array[((int64_t )2ull)]);
  m_load5758_offset_offset_2e_i859_ = (&constants_->field1.field0.array[((int64_t )3ull)].array[((int64_t )2ull)]);
  m_load6263_offset_offset_2e_i864_ = (&constants_->field1.field0.array[((int64_t )0ull)].array[((int64_t )3ull)]);
  m_load6768_offset_offset_2e_i869_ = (&constants_->field1.field0.array[((int64_t )1ull)].array[((int64_t )3ull)]);
  m_load7273_offset_offset_2e_i874_ = (&constants_->field1.field0.array[((int64_t )2ull)].array[((int64_t )3ull)]);
  m_load7778_offset_offset_2e_i879_ = (&constants_->field1.field0.array[((int64_t )3ull)].array[((int64_t )3ull)]);
  m_load3_offset_offset_2e_i999_ = (&constants_->field2.field0.array[((int64_t )0ull)].array[((int64_t )0ull)]);
  m_load78_offset_offset_2e_i1004_ = (&constants_->field2.field0.array[((int64_t )1ull)].array[((int64_t )0ull)]);
  m_load1213_offset_offset_2e_i1009_ = (&constants_->field2.field0.array[((int64_t )2ull)].array[((int64_t )0ull)]);
  m_load1718_offset_offset_2e_i1014_ = (&constants_->field2.field0.array[((int64_t )3ull)].array[((int64_t )0ull)]);
  m_load2223_offset_offset_2e_i1019_ = (&constants_->field2.field0.array[((int64_t )0ull)].array[((int64_t )1ull)]);
  m_load2728_offset_offset_2e_i1024_ = (&constants_->field2.field0.array[((int64_t )1ull)].array[((int64_t )1ull)]);
  m_load3233_offset_offset_2e_i1029_ = (&constants_->field2.field0.array[((int64_t )2ull)].array[((int64_t )1ull)]);
  m_load3738_offset_offset_2e_i1034_ = (&constants_->field2.field0.array[((int64_t )3ull)].array[((int64_t )1ull)]);
  m_load4243_offset_offset_2e_i1039_ = (&constants_->field2.field0.array[((int64_t )0ull)].array[((int64_t )2ull)]);
  m_load4748_offset_offset_2e_i1044_ = (&constants_->field2.field0.array[((int64_t )1ull)].array[((int64_t )2ull)]);
  m_load5253_offset_offset_2e_i1049_ = (&constants_->field2.field0.array[((int64_t )2ull)].array[((int64_t )2ull)]);
  m_load5758_offset_offset_2e_i1054_ = (&constants_->field2.field0.array[((int64_t )3ull)].array[((int64_t )2ull)]);
  m_load6263_offset_offset_2e_i1059_ = (&constants_->field2.field0.array[((int64_t )0ull)].array[((int64_t )3ull)]);
  m_load6768_offset_offset_2e_i1064_ = (&constants_->field2.field0.array[((int64_t )1ull)].array[((int64_t )3ull)]);
  m_load7273_offset_offset_2e_i1069_ = (&constants_->field2.field0.array[((int64_t )2ull)].array[((int64_t )3ull)]);
  m_load7778_offset_offset_2e_i1074_ = (&constants_->field2.field0.array[((int64_t )3ull)].array[((int64_t )3ull)]);
  output_load_ptr2int_2void_ = ((uint8_t *)output_);
  v127_ = (&v_.field1);
  counter_2e_16999___PHI = 0u;   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_16999_ = counter_2e_16999___PHI;
  counter_2e_16999_smear_ = __smear_i32<__vec64_i32>(counter_2e_16999_);
  mul__index_load24_ = __shl((__add(counter_2e_16999_smear_, __load<64>((const __vec64_i32  *)(VectorConstant1)))), 5u);
  input_load_offset_load296_ = __gather_base_offsets32_float(input_load_ptr2int_2void_, 1u, mul__index_load24_, __smear_i1<__vec64_i1>(1));
  set_value_ = l_v64_varying_float3 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>());
  set_value_.field0 = input_load_offset_load296_;
  new_add_ = __add(mul__index_load24_, __smear_i32<__vec64_i32>(4u));
  input_load_offset_load39301_ = __gather_base_offsets32_float(input_load_ptr2int_2void_, 1u, new_add_, __smear_i1<__vec64_i1>(1));
  set_value40_ = set_value_;
  set_value40_.field1 = input_load_offset_load39301_;
  new_add308_ = __add(mul__index_load24_, __smear_i32<__vec64_i32>(8u));
  input_load_offset_load45309_ = __gather_base_offsets32_float(input_load_ptr2int_2void_, 1u, new_add308_, __smear_i1<__vec64_i1>(1));
  set_value46_ = set_value40_;
  set_value46_.field2 = input_load_offset_load45309_;
  new_add317_ = __add(mul__index_load24_, __smear_i32<__vec64_i32>(12u));
  input_load_offset_load51318_ = __gather_base_offsets32_float(input_load_ptr2int_2void_, 1u, new_add317_, __smear_i1<__vec64_i1>(1));
  set_value52_ = set_value46_;
  set_value52_.field3 = input_load_offset_load51318_;
  set_value53_ = l_v64_varying_VertexInput ::init( l_v64_varying_float3 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>()), l_v64_varying_float3 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>()));
  set_value53_.field0 = set_value52_;
  new_add327_ = __add(mul__index_load24_, __smear_i32<__vec64_i32>(16u));
  input_load_offset_load62328_ = __gather_base_offsets32_float(input_load_ptr2int_2void_, 1u, new_add327_, __smear_i1<__vec64_i1>(1));
  set_value63_ = l_v64_varying_float3 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>());
  set_value63_.field0 = input_load_offset_load62328_;
  new_add338_ = __add(mul__index_load24_, __smear_i32<__vec64_i32>(20u));
  input_load_offset_load68339_ = __gather_base_offsets32_float(input_load_ptr2int_2void_, 1u, new_add338_, __smear_i1<__vec64_i1>(1));
  set_value69_ = set_value63_;
  set_value69_.field1 = input_load_offset_load68339_;
  new_add350_ = __add(mul__index_load24_, __smear_i32<__vec64_i32>(24u));
  input_load_offset_load74351_ = __gather_base_offsets32_float(input_load_ptr2int_2void_, 1u, new_add350_, __smear_i1<__vec64_i1>(1));
  set_value75_ = set_value69_;
  set_value75_.field2 = input_load_offset_load74351_;
  new_add363_ = __add(mul__index_load24_, __smear_i32<__vec64_i32>(28u));
  input_load_offset_load80364_ = __gather_base_offsets32_float(input_load_ptr2int_2void_, 1u, new_add363_, __smear_i1<__vec64_i1>(1));
  set_value81_ = set_value75_;
  set_value81_.field3 = input_load_offset_load80364_;
  set_value82_ = set_value53_;
  set_value82_.field1 = set_value81_;
  *(&v_) = set_value82_;
  v8384_x_ = __load<256>(v8384_);
  v8788_y_ = __load<256>(v8788_);
  v9192_z_ = __load<256>(v9192_);
  m_load3_offset_offset_load_2e_i_ = *m_load3_offset_offset_2e_i_;
  m_load3_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load3_offset_offset_load_2e_i_);
  m_load78_offset_offset_load_2e_i_ = *m_load78_offset_offset_2e_i_;
  m_load78_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load78_offset_offset_load_2e_i_);
  m_load1213_offset_offset_load_2e_i_ = *m_load1213_offset_offset_2e_i_;
  m_load1213_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load1213_offset_offset_load_2e_i_);
  m_load1718_offset_offset_load_2e_i_ = *m_load1718_offset_offset_2e_i_;
  m_load1718_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load1718_offset_offset_load_2e_i_);
  m_load2223_offset_offset_load_2e_i_ = *m_load2223_offset_offset_2e_i_;
  m_load2223_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load2223_offset_offset_load_2e_i_);
  m_load2728_offset_offset_load_2e_i_ = *m_load2728_offset_offset_2e_i_;
  m_load2728_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load2728_offset_offset_load_2e_i_);
  m_load3233_offset_offset_load_2e_i_ = *m_load3233_offset_offset_2e_i_;
  m_load3233_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load3233_offset_offset_load_2e_i_);
  m_load3738_offset_offset_load_2e_i_ = *m_load3738_offset_offset_2e_i_;
  m_load3738_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load3738_offset_offset_load_2e_i_);
  m_load4243_offset_offset_load_2e_i_ = *m_load4243_offset_offset_2e_i_;
  m_load4243_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load4243_offset_offset_load_2e_i_);
  m_load4748_offset_offset_load_2e_i_ = *m_load4748_offset_offset_2e_i_;
  m_load4748_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load4748_offset_offset_load_2e_i_);
  m_load5253_offset_offset_load_2e_i_ = *m_load5253_offset_offset_2e_i_;
  m_load5253_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load5253_offset_offset_load_2e_i_);
  m_load5758_offset_offset_load_2e_i_ = *m_load5758_offset_offset_2e_i_;
  m_load5758_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load5758_offset_offset_load_2e_i_);
  m_load6263_offset_offset_load_2e_i_ = *m_load6263_offset_offset_2e_i_;
  m_load6263_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load6263_offset_offset_load_2e_i_);
  m_load6768_offset_offset_load_2e_i_ = *m_load6768_offset_offset_2e_i_;
  m_load6768_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load6768_offset_offset_load_2e_i_);
  m_load7273_offset_offset_load_2e_i_ = *m_load7273_offset_offset_2e_i_;
  m_load7273_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load7273_offset_offset_load_2e_i_);
  m_load7778_offset_offset_load_2e_i_ = *m_load7778_offset_offset_2e_i_;
  m_load7778_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load7778_offset_offset_load_2e_i_);
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i_ = __add(m_load1718_offset_offset_load_2e_i_smear_, (__add((__add((__mul(v8384_x_, m_load3_offset_offset_load_2e_i_smear_)), (__mul(v8788_y_, m_load78_offset_offset_load_2e_i_smear_)))), (__mul(v9192_z_, m_load1213_offset_offset_load_2e_i_smear_)))));
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i_ = __add(m_load3738_offset_offset_load_2e_i_smear_, (__add((__add((__mul(v8384_x_, m_load2223_offset_offset_load_2e_i_smear_)), (__mul(v8788_y_, m_load2728_offset_offset_load_2e_i_smear_)))), (__mul(v9192_z_, m_load3233_offset_offset_load_2e_i_smear_)))));
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i_ = __add(m_load5758_offset_offset_load_2e_i_smear_, (__add((__add((__mul(v8384_x_, m_load4243_offset_offset_load_2e_i_smear_)), (__mul(v8788_y_, m_load4748_offset_offset_load_2e_i_smear_)))), (__mul(v9192_z_, m_load5253_offset_offset_load_2e_i_smear_)))));
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i_ = __add(m_load7778_offset_offset_load_2e_i_smear_, (__add((__add((__mul(v8384_x_, m_load6263_offset_offset_load_2e_i_smear_)), (__mul(v8788_y_, m_load6768_offset_offset_load_2e_i_smear_)))), (__mul(v9192_z_, m_load7273_offset_offset_load_2e_i_smear_)))));
  m_load3_offset_offset_load_2e_i805_ = *m_load3_offset_offset_2e_i804_;
  m_load3_offset_offset_load_2e_i805_smear_ = __smear_float<__vec64_f>(m_load3_offset_offset_load_2e_i805_);
  m_load78_offset_offset_load_2e_i810_ = *m_load78_offset_offset_2e_i809_;
  m_load78_offset_offset_load_2e_i810_smear_ = __smear_float<__vec64_f>(m_load78_offset_offset_load_2e_i810_);
  m_load1213_offset_offset_load_2e_i815_ = *m_load1213_offset_offset_2e_i814_;
  m_load1213_offset_offset_load_2e_i815_smear_ = __smear_float<__vec64_f>(m_load1213_offset_offset_load_2e_i815_);
  m_load1718_offset_offset_load_2e_i820_ = *m_load1718_offset_offset_2e_i819_;
  m_load1718_offset_offset_load_2e_i820_smear_ = __smear_float<__vec64_f>(m_load1718_offset_offset_load_2e_i820_);
  m_load2223_offset_offset_load_2e_i825_ = *m_load2223_offset_offset_2e_i824_;
  m_load2223_offset_offset_load_2e_i825_smear_ = __smear_float<__vec64_f>(m_load2223_offset_offset_load_2e_i825_);
  m_load2728_offset_offset_load_2e_i830_ = *m_load2728_offset_offset_2e_i829_;
  m_load2728_offset_offset_load_2e_i830_smear_ = __smear_float<__vec64_f>(m_load2728_offset_offset_load_2e_i830_);
  m_load3233_offset_offset_load_2e_i835_ = *m_load3233_offset_offset_2e_i834_;
  m_load3233_offset_offset_load_2e_i835_smear_ = __smear_float<__vec64_f>(m_load3233_offset_offset_load_2e_i835_);
  m_load3738_offset_offset_load_2e_i840_ = *m_load3738_offset_offset_2e_i839_;
  m_load3738_offset_offset_load_2e_i840_smear_ = __smear_float<__vec64_f>(m_load3738_offset_offset_load_2e_i840_);
  m_load4243_offset_offset_load_2e_i845_ = *m_load4243_offset_offset_2e_i844_;
  m_load4243_offset_offset_load_2e_i845_smear_ = __smear_float<__vec64_f>(m_load4243_offset_offset_load_2e_i845_);
  m_load4748_offset_offset_load_2e_i850_ = *m_load4748_offset_offset_2e_i849_;
  m_load4748_offset_offset_load_2e_i850_smear_ = __smear_float<__vec64_f>(m_load4748_offset_offset_load_2e_i850_);
  m_load5253_offset_offset_load_2e_i855_ = *m_load5253_offset_offset_2e_i854_;
  m_load5253_offset_offset_load_2e_i855_smear_ = __smear_float<__vec64_f>(m_load5253_offset_offset_load_2e_i855_);
  m_load5758_offset_offset_load_2e_i860_ = *m_load5758_offset_offset_2e_i859_;
  m_load5758_offset_offset_load_2e_i860_smear_ = __smear_float<__vec64_f>(m_load5758_offset_offset_load_2e_i860_);
  m_load6263_offset_offset_load_2e_i865_ = *m_load6263_offset_offset_2e_i864_;
  m_load6263_offset_offset_load_2e_i865_smear_ = __smear_float<__vec64_f>(m_load6263_offset_offset_load_2e_i865_);
  m_load6768_offset_offset_load_2e_i870_ = *m_load6768_offset_offset_2e_i869_;
  m_load6768_offset_offset_load_2e_i870_smear_ = __smear_float<__vec64_f>(m_load6768_offset_offset_load_2e_i870_);
  m_load7273_offset_offset_load_2e_i875_ = *m_load7273_offset_offset_2e_i874_;
  m_load7273_offset_offset_load_2e_i875_smear_ = __smear_float<__vec64_f>(m_load7273_offset_offset_load_2e_i875_);
  m_load7778_offset_offset_load_2e_i880_ = *m_load7778_offset_offset_2e_i879_;
  m_load7778_offset_offset_load_2e_i880_smear_ = __smear_float<__vec64_f>(m_load7778_offset_offset_load_2e_i880_);
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i911_ = __add((__add((__add((__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i_, m_load3_offset_offset_load_2e_i805_smear_)), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i_, m_load78_offset_offset_load_2e_i810_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i_, m_load1213_offset_offset_load_2e_i815_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i_, m_load1718_offset_offset_load_2e_i820_smear_)));
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i937_ = __add((__add((__add((__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i_, m_load2223_offset_offset_load_2e_i825_smear_)), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i_, m_load2728_offset_offset_load_2e_i830_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i_, m_load3233_offset_offset_load_2e_i835_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i_, m_load3738_offset_offset_load_2e_i840_smear_)));
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i963_ = __add((__add((__add((__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i_, m_load4243_offset_offset_load_2e_i845_smear_)), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i_, m_load4748_offset_offset_load_2e_i850_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i_, m_load5253_offset_offset_load_2e_i855_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i_, m_load5758_offset_offset_load_2e_i860_smear_)));
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i989_ = __add((__add((__add((__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i_, m_load6263_offset_offset_load_2e_i865_smear_)), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i_, m_load6768_offset_offset_load_2e_i870_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i_, m_load7273_offset_offset_load_2e_i875_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i_, m_load7778_offset_offset_load_2e_i880_smear_)));
  m_load3_offset_offset_load_2e_i1000_ = *m_load3_offset_offset_2e_i999_;
  m_load3_offset_offset_load_2e_i1000_smear_ = __smear_float<__vec64_f>(m_load3_offset_offset_load_2e_i1000_);
  m_load78_offset_offset_load_2e_i1005_ = *m_load78_offset_offset_2e_i1004_;
  m_load78_offset_offset_load_2e_i1005_smear_ = __smear_float<__vec64_f>(m_load78_offset_offset_load_2e_i1005_);
  m_load1213_offset_offset_load_2e_i1010_ = *m_load1213_offset_offset_2e_i1009_;
  m_load1213_offset_offset_load_2e_i1010_smear_ = __smear_float<__vec64_f>(m_load1213_offset_offset_load_2e_i1010_);
  m_load1718_offset_offset_load_2e_i1015_ = *m_load1718_offset_offset_2e_i1014_;
  m_load1718_offset_offset_load_2e_i1015_smear_ = __smear_float<__vec64_f>(m_load1718_offset_offset_load_2e_i1015_);
  m_load2223_offset_offset_load_2e_i1020_ = *m_load2223_offset_offset_2e_i1019_;
  m_load2223_offset_offset_load_2e_i1020_smear_ = __smear_float<__vec64_f>(m_load2223_offset_offset_load_2e_i1020_);
  m_load2728_offset_offset_load_2e_i1025_ = *m_load2728_offset_offset_2e_i1024_;
  m_load2728_offset_offset_load_2e_i1025_smear_ = __smear_float<__vec64_f>(m_load2728_offset_offset_load_2e_i1025_);
  m_load3233_offset_offset_load_2e_i1030_ = *m_load3233_offset_offset_2e_i1029_;
  m_load3233_offset_offset_load_2e_i1030_smear_ = __smear_float<__vec64_f>(m_load3233_offset_offset_load_2e_i1030_);
  m_load3738_offset_offset_load_2e_i1035_ = *m_load3738_offset_offset_2e_i1034_;
  m_load3738_offset_offset_load_2e_i1035_smear_ = __smear_float<__vec64_f>(m_load3738_offset_offset_load_2e_i1035_);
  m_load4243_offset_offset_load_2e_i1040_ = *m_load4243_offset_offset_2e_i1039_;
  m_load4243_offset_offset_load_2e_i1040_smear_ = __smear_float<__vec64_f>(m_load4243_offset_offset_load_2e_i1040_);
  m_load4748_offset_offset_load_2e_i1045_ = *m_load4748_offset_offset_2e_i1044_;
  m_load4748_offset_offset_load_2e_i1045_smear_ = __smear_float<__vec64_f>(m_load4748_offset_offset_load_2e_i1045_);
  m_load5253_offset_offset_load_2e_i1050_ = *m_load5253_offset_offset_2e_i1049_;
  m_load5253_offset_offset_load_2e_i1050_smear_ = __smear_float<__vec64_f>(m_load5253_offset_offset_load_2e_i1050_);
  m_load5758_offset_offset_load_2e_i1055_ = *m_load5758_offset_offset_2e_i1054_;
  m_load5758_offset_offset_load_2e_i1055_smear_ = __smear_float<__vec64_f>(m_load5758_offset_offset_load_2e_i1055_);
  m_load6263_offset_offset_load_2e_i1060_ = *m_load6263_offset_offset_2e_i1059_;
  m_load6263_offset_offset_load_2e_i1060_smear_ = __smear_float<__vec64_f>(m_load6263_offset_offset_load_2e_i1060_);
  m_load6768_offset_offset_load_2e_i1065_ = *m_load6768_offset_offset_2e_i1064_;
  m_load6768_offset_offset_load_2e_i1065_smear_ = __smear_float<__vec64_f>(m_load6768_offset_offset_load_2e_i1065_);
  m_load7273_offset_offset_load_2e_i1070_ = *m_load7273_offset_offset_2e_i1069_;
  m_load7273_offset_offset_load_2e_i1070_smear_ = __smear_float<__vec64_f>(m_load7273_offset_offset_load_2e_i1070_);
  m_load7778_offset_offset_load_2e_i1075_ = *m_load7778_offset_offset_2e_i1074_;
  m_load7778_offset_offset_load_2e_i1075_smear_ = __smear_float<__vec64_f>(m_load7778_offset_offset_load_2e_i1075_);
  __scatter_base_offsets32_float(output_load_ptr2int_2void_, 1u, mul__index_load24_, (__add((__add((__add((__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i911_, m_load3_offset_offset_load_2e_i1000_smear_)), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i937_, m_load78_offset_offset_load_2e_i1005_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i963_, m_load1213_offset_offset_load_2e_i1010_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i989_, m_load1718_offset_offset_load_2e_i1015_smear_)))), __smear_i1<__vec64_i1>(1));
  __scatter_base_offsets32_float(output_load_ptr2int_2void_, 1u, new_add_, (__add((__add((__add((__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i911_, m_load2223_offset_offset_load_2e_i1020_smear_)), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i937_, m_load2728_offset_offset_load_2e_i1025_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i963_, m_load3233_offset_offset_load_2e_i1030_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i989_, m_load3738_offset_offset_load_2e_i1035_smear_)))), __smear_i1<__vec64_i1>(1));
  __scatter_base_offsets32_float(output_load_ptr2int_2void_, 1u, new_add308_, (__add((__add((__add((__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i911_, m_load4243_offset_offset_load_2e_i1040_smear_)), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i937_, m_load4748_offset_offset_load_2e_i1045_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i963_, m_load5253_offset_offset_load_2e_i1050_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i989_, m_load5758_offset_offset_load_2e_i1055_smear_)))), __smear_i1<__vec64_i1>(1));
  __scatter_base_offsets32_float(output_load_ptr2int_2void_, 1u, new_add317_, (__add((__add((__add((__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i911_, m_load6263_offset_offset_load_2e_i1060_smear_)), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i937_, m_load6768_offset_offset_load_2e_i1065_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i963_, m_load7273_offset_offset_load_2e_i1070_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i989_, m_load7778_offset_offset_load_2e_i1075_smear_)))), __smear_i1<__vec64_i1>(1));
  v127_Color_ = *v127_;
  v127_Color_extract_0_ = (v127_Color_.field0);
  __scatter_base_offsets32_float(output_load_ptr2int_2void_, 1u, new_add327_, v127_Color_extract_0_, __smear_i1<__vec64_i1>(1));
  v127_Color_extract_1_ = (v127_Color_.field1);
  __scatter_base_offsets32_float(output_load_ptr2int_2void_, 1u, new_add338_, v127_Color_extract_1_, __smear_i1<__vec64_i1>(1));
  v127_Color_extract_2_ = (v127_Color_.field2);
  __scatter_base_offsets32_float(output_load_ptr2int_2void_, 1u, new_add350_, v127_Color_extract_2_, __smear_i1<__vec64_i1>(1));
  v127_Color_extract_3_ = (v127_Color_.field3);
  __scatter_base_offsets32_float(output_load_ptr2int_2void_, 1u, new_add363_, v127_Color_extract_3_, __smear_i1<__vec64_i1>(1));
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_16999_) + ((uint32_t )64u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_16999___PHI = new_counter_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )count_))) {
    goto partial_inner_only_label;
  } else {
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec64_i32>(counter_2e_1_2e_lcssa_);
  iter_val149_ = __add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec64_i32  *)(VectorConstant1)));
  count_smear_ = __smear_i32<__vec64_i32>(count_);
  cmp152_ = __signed_less_than_i32(iter_val149_, count_smear_);
  mul__index_load158_ = __shl(iter_val149_, 5u);
  input_load159_ptr2int_2void_ = ((uint8_t *)input_);
  input_load159_offset_load510_ = __gather_base_offsets32_float(input_load159_ptr2int_2void_, 1u, mul__index_load158_, cmp152_);
  set_value172_ = l_v64_varying_float3 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>());
  set_value172_.field0 = input_load159_offset_load510_;
  new_add515_ = __add(mul__index_load158_, __smear_i32<__vec64_i32>(4u));
  input_load159_offset_load177516_ = __gather_base_offsets32_float(input_load159_ptr2int_2void_, 1u, new_add515_, cmp152_);
  set_value178_ = set_value172_;
  set_value178_.field1 = input_load159_offset_load177516_;
  new_add523_ = __add(mul__index_load158_, __smear_i32<__vec64_i32>(8u));
  input_load159_offset_load183524_ = __gather_base_offsets32_float(input_load159_ptr2int_2void_, 1u, new_add523_, cmp152_);
  set_value184_ = set_value178_;
  set_value184_.field2 = input_load159_offset_load183524_;
  new_add532_ = __add(mul__index_load158_, __smear_i32<__vec64_i32>(12u));
  input_load159_offset_load189533_ = __gather_base_offsets32_float(input_load159_ptr2int_2void_, 1u, new_add532_, cmp152_);
  set_value190_ = set_value184_;
  set_value190_.field3 = input_load159_offset_load189533_;
  set_value191_ = l_v64_varying_VertexInput ::init( l_v64_varying_float3 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>()), l_v64_varying_float3 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>()));
  set_value191_.field0 = set_value190_;
  new_add542_ = __add(mul__index_load158_, __smear_i32<__vec64_i32>(16u));
  input_load159_offset_load200543_ = __gather_base_offsets32_float(input_load159_ptr2int_2void_, 1u, new_add542_, cmp152_);
  set_value201_ = l_v64_varying_float3 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>());
  set_value201_.field0 = input_load159_offset_load200543_;
  new_add553_ = __add(mul__index_load158_, __smear_i32<__vec64_i32>(20u));
  input_load159_offset_load206554_ = __gather_base_offsets32_float(input_load159_ptr2int_2void_, 1u, new_add553_, cmp152_);
  set_value207_ = set_value201_;
  set_value207_.field1 = input_load159_offset_load206554_;
  new_add565_ = __add(mul__index_load158_, __smear_i32<__vec64_i32>(24u));
  input_load159_offset_load212566_ = __gather_base_offsets32_float(input_load159_ptr2int_2void_, 1u, new_add565_, cmp152_);
  set_value213_ = set_value207_;
  set_value213_.field2 = input_load159_offset_load212566_;
  new_add578_ = __add(mul__index_load158_, __smear_i32<__vec64_i32>(28u));
  input_load159_offset_load218579_ = __gather_base_offsets32_float(input_load159_ptr2int_2void_, 1u, new_add578_, cmp152_);
  set_value219_ = set_value213_;
  set_value219_.field3 = input_load159_offset_load218579_;
  set_value220_ = set_value191_;
  set_value220_.field1 = set_value219_;
  *(&v157_) = set_value220_;
  v157223224_x_ = __load<256>(((&v157_.field0.field0)));
  __store<256>(((&wpos221_.field0)), v157223224_x_);
  element226_ = (&wpos221_.field1);
  v157227228_y_ = __load<256>(((&v157_.field0.field1)));
  __store<256>(element226_, v157227228_y_);
  element230_ = (&wpos221_.field2);
  v157231232_z_ = __load<256>(((&v157_.field0.field2)));
  __store<256>(element230_, v157231232_z_);
  element234_ = (&wpos221_.field3);
  __store<256>(element234_, __smear_float<__vec64_f>(1.000000e+00));
  m_load3_offset_offset_load_2e_i1195_ = *((&constants_->field0.field0.array[((int64_t )0ull)].array[((int64_t )0ull)]));
  m_load3_offset_offset_load_2e_i1195_smear_ = __smear_float<__vec64_f>(m_load3_offset_offset_load_2e_i1195_);
  __store<256>(((&row0_2e_i1189_.field0)), m_load3_offset_offset_load_2e_i1195_smear_);
  element6_2e_i1198_ = (&row0_2e_i1189_.field1);
  m_load78_offset_offset_load_2e_i1200_ = *((&constants_->field0.field0.array[((int64_t )1ull)].array[((int64_t )0ull)]));
  m_load78_offset_offset_load_2e_i1200_smear_ = __smear_float<__vec64_f>(m_load78_offset_offset_load_2e_i1200_);
  __store<256>(element6_2e_i1198_, m_load78_offset_offset_load_2e_i1200_smear_);
  element11_2e_i1203_ = (&row0_2e_i1189_.field2);
  m_load1213_offset_offset_load_2e_i1205_ = *((&constants_->field0.field0.array[((int64_t )2ull)].array[((int64_t )0ull)]));
  m_load1213_offset_offset_load_2e_i1205_smear_ = __smear_float<__vec64_f>(m_load1213_offset_offset_load_2e_i1205_);
  __store<256>(element11_2e_i1203_, m_load1213_offset_offset_load_2e_i1205_smear_);
  element16_2e_i1208_ = (&row0_2e_i1189_.field3);
  m_load1718_offset_offset_load_2e_i1210_ = *((&constants_->field0.field0.array[((int64_t )3ull)].array[((int64_t )0ull)]));
  m_load1718_offset_offset_load_2e_i1210_smear_ = __smear_float<__vec64_f>(m_load1718_offset_offset_load_2e_i1210_);
  __store<256>(element16_2e_i1208_, m_load1718_offset_offset_load_2e_i1210_smear_);
  m_load2223_offset_offset_load_2e_i1215_ = *((&constants_->field0.field0.array[((int64_t )0ull)].array[((int64_t )1ull)]));
  m_load2223_offset_offset_load_2e_i1215_smear_ = __smear_float<__vec64_f>(m_load2223_offset_offset_load_2e_i1215_);
  __store<256>(((&row1_2e_i1190_.field0)), m_load2223_offset_offset_load_2e_i1215_smear_);
  element26_2e_i1218_ = (&row1_2e_i1190_.field1);
  m_load2728_offset_offset_load_2e_i1220_ = *((&constants_->field0.field0.array[((int64_t )1ull)].array[((int64_t )1ull)]));
  m_load2728_offset_offset_load_2e_i1220_smear_ = __smear_float<__vec64_f>(m_load2728_offset_offset_load_2e_i1220_);
  __store<256>(element26_2e_i1218_, m_load2728_offset_offset_load_2e_i1220_smear_);
  element31_2e_i1223_ = (&row1_2e_i1190_.field2);
  m_load3233_offset_offset_load_2e_i1225_ = *((&constants_->field0.field0.array[((int64_t )2ull)].array[((int64_t )1ull)]));
  m_load3233_offset_offset_load_2e_i1225_smear_ = __smear_float<__vec64_f>(m_load3233_offset_offset_load_2e_i1225_);
  __store<256>(element31_2e_i1223_, m_load3233_offset_offset_load_2e_i1225_smear_);
  element36_2e_i1228_ = (&row1_2e_i1190_.field3);
  m_load3738_offset_offset_load_2e_i1230_ = *((&constants_->field0.field0.array[((int64_t )3ull)].array[((int64_t )1ull)]));
  m_load3738_offset_offset_load_2e_i1230_smear_ = __smear_float<__vec64_f>(m_load3738_offset_offset_load_2e_i1230_);
  __store<256>(element36_2e_i1228_, m_load3738_offset_offset_load_2e_i1230_smear_);
  m_load4243_offset_offset_load_2e_i1235_ = *((&constants_->field0.field0.array[((int64_t )0ull)].array[((int64_t )2ull)]));
  m_load4243_offset_offset_load_2e_i1235_smear_ = __smear_float<__vec64_f>(m_load4243_offset_offset_load_2e_i1235_);
  __store<256>(((&row2_2e_i1191_.field0)), m_load4243_offset_offset_load_2e_i1235_smear_);
  element46_2e_i1238_ = (&row2_2e_i1191_.field1);
  m_load4748_offset_offset_load_2e_i1240_ = *((&constants_->field0.field0.array[((int64_t )1ull)].array[((int64_t )2ull)]));
  m_load4748_offset_offset_load_2e_i1240_smear_ = __smear_float<__vec64_f>(m_load4748_offset_offset_load_2e_i1240_);
  __store<256>(element46_2e_i1238_, m_load4748_offset_offset_load_2e_i1240_smear_);
  element51_2e_i1243_ = (&row2_2e_i1191_.field2);
  m_load5253_offset_offset_load_2e_i1245_ = *((&constants_->field0.field0.array[((int64_t )2ull)].array[((int64_t )2ull)]));
  m_load5253_offset_offset_load_2e_i1245_smear_ = __smear_float<__vec64_f>(m_load5253_offset_offset_load_2e_i1245_);
  __store<256>(element51_2e_i1243_, m_load5253_offset_offset_load_2e_i1245_smear_);
  element56_2e_i1248_ = (&row2_2e_i1191_.field3);
  m_load5758_offset_offset_load_2e_i1250_ = *((&constants_->field0.field0.array[((int64_t )3ull)].array[((int64_t )2ull)]));
  m_load5758_offset_offset_load_2e_i1250_smear_ = __smear_float<__vec64_f>(m_load5758_offset_offset_load_2e_i1250_);
  __store<256>(element56_2e_i1248_, m_load5758_offset_offset_load_2e_i1250_smear_);
  m_load6263_offset_offset_load_2e_i1255_ = *((&constants_->field0.field0.array[((int64_t )0ull)].array[((int64_t )3ull)]));
  m_load6263_offset_offset_load_2e_i1255_smear_ = __smear_float<__vec64_f>(m_load6263_offset_offset_load_2e_i1255_);
  __store<256>(((&row3_2e_i1192_.field0)), m_load6263_offset_offset_load_2e_i1255_smear_);
  element66_2e_i1258_ = (&row3_2e_i1192_.field1);
  m_load6768_offset_offset_load_2e_i1260_ = *((&constants_->field0.field0.array[((int64_t )1ull)].array[((int64_t )3ull)]));
  m_load6768_offset_offset_load_2e_i1260_smear_ = __smear_float<__vec64_f>(m_load6768_offset_offset_load_2e_i1260_);
  __store<256>(element66_2e_i1258_, m_load6768_offset_offset_load_2e_i1260_smear_);
  element71_2e_i1263_ = (&row3_2e_i1192_.field2);
  m_load7273_offset_offset_load_2e_i1265_ = *((&constants_->field0.field0.array[((int64_t )2ull)].array[((int64_t )3ull)]));
  m_load7273_offset_offset_load_2e_i1265_smear_ = __smear_float<__vec64_f>(m_load7273_offset_offset_load_2e_i1265_);
  __store<256>(element71_2e_i1263_, m_load7273_offset_offset_load_2e_i1265_smear_);
  element76_2e_i1268_ = (&row3_2e_i1192_.field3);
  m_load7778_offset_offset_load_2e_i1270_ = *((&constants_->field0.field0.array[((int64_t )3ull)].array[((int64_t )3ull)]));
  m_load7778_offset_offset_load_2e_i1270_smear_ = __smear_float<__vec64_f>(m_load7778_offset_offset_load_2e_i1270_);
  __store<256>(element76_2e_i1268_, m_load7778_offset_offset_load_2e_i1270_smear_);
  ptr4862_masked_load_ = __masked_load_float((((uint8_t *)(&row0_2e_i1189_))), cmp152_);
  v_load_ptr2int_2e_i1276_2void_ = ((uint8_t *)(&wpos221_));
  ptr4883_masked_load_ = __masked_load_float(v_load_ptr2int_2e_i1276_2void_, cmp152_);
  ptr4905_masked_load_ = __masked_load_float((((uint8_t *)element6_2e_i1198_)), cmp152_);
  tmp__1_ = ((uint8_t *)element226_);
  ptr4927_masked_load_ = __masked_load_float(tmp__1_, cmp152_);
  ptr4949_masked_load_ = __masked_load_float((((uint8_t *)element11_2e_i1203_)), cmp152_);
  tmp__2_ = ((uint8_t *)element230_);
  ptr4971_masked_load_ = __masked_load_float(tmp__2_, cmp152_);
  ptr4993_masked_load_ = __masked_load_float((((uint8_t *)element16_2e_i1208_)), cmp152_);
  tmp__3_ = ((uint8_t *)element234_);
  ptr5015_masked_load_ = __masked_load_float(tmp__3_, cmp152_);
  ptr5036_masked_load_ = __masked_load_float((((uint8_t *)(&row1_2e_i1190_))), cmp152_);
  ptr5080_masked_load_ = __masked_load_float((((uint8_t *)element26_2e_i1218_)), cmp152_);
  ptr5124_masked_load_ = __masked_load_float((((uint8_t *)element31_2e_i1223_)), cmp152_);
  ptr5168_masked_load_ = __masked_load_float((((uint8_t *)element36_2e_i1228_)), cmp152_);
  ptr5211_masked_load_ = __masked_load_float((((uint8_t *)(&row2_2e_i1191_))), cmp152_);
  ptr5255_masked_load_ = __masked_load_float((((uint8_t *)element46_2e_i1238_)), cmp152_);
  ptr5299_masked_load_ = __masked_load_float((((uint8_t *)element51_2e_i1243_)), cmp152_);
  ptr5343_masked_load_ = __masked_load_float((((uint8_t *)element56_2e_i1248_)), cmp152_);
  ptr5386_masked_load_ = __masked_load_float((((uint8_t *)(&row3_2e_i1192_))), cmp152_);
  ptr5430_masked_load_ = __masked_load_float((((uint8_t *)element66_2e_i1258_)), cmp152_);
  ptr5474_masked_load_ = __masked_load_float((((uint8_t *)element71_2e_i1263_)), cmp152_);
  ptr5518_masked_load_ = __masked_load_float((((uint8_t *)element76_2e_i1268_)), cmp152_);
  oldret768_ = l_v64_varying_float4 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>());
  oldret768_.field0 = (__add((__add((__add((__mul(ptr4862_masked_load_, ptr4883_masked_load_)), (__mul(ptr4905_masked_load_, ptr4927_masked_load_)))), (__mul(ptr4949_masked_load_, ptr4971_masked_load_)))), (__mul(ptr4993_masked_load_, ptr5015_masked_load_))));
  oldret770_ = oldret768_;
  oldret770_.field1 = (__add((__add((__add((__mul(ptr5036_masked_load_, ptr4883_masked_load_)), (__mul(ptr5080_masked_load_, ptr4927_masked_load_)))), (__mul(ptr5124_masked_load_, ptr4971_masked_load_)))), (__mul(ptr5168_masked_load_, ptr5015_masked_load_))));
  oldret772_ = oldret770_;
  oldret772_.field2 = (__add((__add((__add((__mul(ptr5211_masked_load_, ptr4883_masked_load_)), (__mul(ptr5255_masked_load_, ptr4927_masked_load_)))), (__mul(ptr5299_masked_load_, ptr4971_masked_load_)))), (__mul(ptr5343_masked_load_, ptr5015_masked_load_))));
  oldret774_ = oldret772_;
  oldret774_.field3 = (__add((__add((__add((__mul(ptr5386_masked_load_, ptr4883_masked_load_)), (__mul(ptr5430_masked_load_, ptr4927_masked_load_)))), (__mul(ptr5474_masked_load_, ptr4971_masked_load_)))), (__mul(ptr5518_masked_load_, ptr5015_masked_load_))));
  *(&wpos221_) = oldret774_;
  m_load3_offset_offset_load_2e_i1390_ = *((&constants_->field1.field0.array[((int64_t )0ull)].array[((int64_t )0ull)]));
  m_load3_offset_offset_load_2e_i1390_smear_ = __smear_float<__vec64_f>(m_load3_offset_offset_load_2e_i1390_);
  __store<256>(((&row0_2e_i1384_.field0)), m_load3_offset_offset_load_2e_i1390_smear_);
  element6_2e_i1393_ = (&row0_2e_i1384_.field1);
  m_load78_offset_offset_load_2e_i1395_ = *((&constants_->field1.field0.array[((int64_t )1ull)].array[((int64_t )0ull)]));
  m_load78_offset_offset_load_2e_i1395_smear_ = __smear_float<__vec64_f>(m_load78_offset_offset_load_2e_i1395_);
  __store<256>(element6_2e_i1393_, m_load78_offset_offset_load_2e_i1395_smear_);
  element11_2e_i1398_ = (&row0_2e_i1384_.field2);
  m_load1213_offset_offset_load_2e_i1400_ = *((&constants_->field1.field0.array[((int64_t )2ull)].array[((int64_t )0ull)]));
  m_load1213_offset_offset_load_2e_i1400_smear_ = __smear_float<__vec64_f>(m_load1213_offset_offset_load_2e_i1400_);
  __store<256>(element11_2e_i1398_, m_load1213_offset_offset_load_2e_i1400_smear_);
  element16_2e_i1403_ = (&row0_2e_i1384_.field3);
  m_load1718_offset_offset_load_2e_i1405_ = *((&constants_->field1.field0.array[((int64_t )3ull)].array[((int64_t )0ull)]));
  m_load1718_offset_offset_load_2e_i1405_smear_ = __smear_float<__vec64_f>(m_load1718_offset_offset_load_2e_i1405_);
  __store<256>(element16_2e_i1403_, m_load1718_offset_offset_load_2e_i1405_smear_);
  m_load2223_offset_offset_load_2e_i1410_ = *((&constants_->field1.field0.array[((int64_t )0ull)].array[((int64_t )1ull)]));
  m_load2223_offset_offset_load_2e_i1410_smear_ = __smear_float<__vec64_f>(m_load2223_offset_offset_load_2e_i1410_);
  __store<256>(((&row1_2e_i1385_.field0)), m_load2223_offset_offset_load_2e_i1410_smear_);
  element26_2e_i1413_ = (&row1_2e_i1385_.field1);
  m_load2728_offset_offset_load_2e_i1415_ = *((&constants_->field1.field0.array[((int64_t )1ull)].array[((int64_t )1ull)]));
  m_load2728_offset_offset_load_2e_i1415_smear_ = __smear_float<__vec64_f>(m_load2728_offset_offset_load_2e_i1415_);
  __store<256>(element26_2e_i1413_, m_load2728_offset_offset_load_2e_i1415_smear_);
  element31_2e_i1418_ = (&row1_2e_i1385_.field2);
  m_load3233_offset_offset_load_2e_i1420_ = *((&constants_->field1.field0.array[((int64_t )2ull)].array[((int64_t )1ull)]));
  m_load3233_offset_offset_load_2e_i1420_smear_ = __smear_float<__vec64_f>(m_load3233_offset_offset_load_2e_i1420_);
  __store<256>(element31_2e_i1418_, m_load3233_offset_offset_load_2e_i1420_smear_);
  element36_2e_i1423_ = (&row1_2e_i1385_.field3);
  m_load3738_offset_offset_load_2e_i1425_ = *((&constants_->field1.field0.array[((int64_t )3ull)].array[((int64_t )1ull)]));
  m_load3738_offset_offset_load_2e_i1425_smear_ = __smear_float<__vec64_f>(m_load3738_offset_offset_load_2e_i1425_);
  __store<256>(element36_2e_i1423_, m_load3738_offset_offset_load_2e_i1425_smear_);
  m_load4243_offset_offset_load_2e_i1430_ = *((&constants_->field1.field0.array[((int64_t )0ull)].array[((int64_t )2ull)]));
  m_load4243_offset_offset_load_2e_i1430_smear_ = __smear_float<__vec64_f>(m_load4243_offset_offset_load_2e_i1430_);
  __store<256>(((&row2_2e_i1386_.field0)), m_load4243_offset_offset_load_2e_i1430_smear_);
  element46_2e_i1433_ = (&row2_2e_i1386_.field1);
  m_load4748_offset_offset_load_2e_i1435_ = *((&constants_->field1.field0.array[((int64_t )1ull)].array[((int64_t )2ull)]));
  m_load4748_offset_offset_load_2e_i1435_smear_ = __smear_float<__vec64_f>(m_load4748_offset_offset_load_2e_i1435_);
  __store<256>(element46_2e_i1433_, m_load4748_offset_offset_load_2e_i1435_smear_);
  element51_2e_i1438_ = (&row2_2e_i1386_.field2);
  m_load5253_offset_offset_load_2e_i1440_ = *((&constants_->field1.field0.array[((int64_t )2ull)].array[((int64_t )2ull)]));
  m_load5253_offset_offset_load_2e_i1440_smear_ = __smear_float<__vec64_f>(m_load5253_offset_offset_load_2e_i1440_);
  __store<256>(element51_2e_i1438_, m_load5253_offset_offset_load_2e_i1440_smear_);
  element56_2e_i1443_ = (&row2_2e_i1386_.field3);
  m_load5758_offset_offset_load_2e_i1445_ = *((&constants_->field1.field0.array[((int64_t )3ull)].array[((int64_t )2ull)]));
  m_load5758_offset_offset_load_2e_i1445_smear_ = __smear_float<__vec64_f>(m_load5758_offset_offset_load_2e_i1445_);
  __store<256>(element56_2e_i1443_, m_load5758_offset_offset_load_2e_i1445_smear_);
  m_load6263_offset_offset_load_2e_i1450_ = *((&constants_->field1.field0.array[((int64_t )0ull)].array[((int64_t )3ull)]));
  m_load6263_offset_offset_load_2e_i1450_smear_ = __smear_float<__vec64_f>(m_load6263_offset_offset_load_2e_i1450_);
  __store<256>(((&row3_2e_i1387_.field0)), m_load6263_offset_offset_load_2e_i1450_smear_);
  element66_2e_i1453_ = (&row3_2e_i1387_.field1);
  m_load6768_offset_offset_load_2e_i1455_ = *((&constants_->field1.field0.array[((int64_t )1ull)].array[((int64_t )3ull)]));
  m_load6768_offset_offset_load_2e_i1455_smear_ = __smear_float<__vec64_f>(m_load6768_offset_offset_load_2e_i1455_);
  __store<256>(element66_2e_i1453_, m_load6768_offset_offset_load_2e_i1455_smear_);
  element71_2e_i1458_ = (&row3_2e_i1387_.field2);
  m_load7273_offset_offset_load_2e_i1460_ = *((&constants_->field1.field0.array[((int64_t )2ull)].array[((int64_t )3ull)]));
  m_load7273_offset_offset_load_2e_i1460_smear_ = __smear_float<__vec64_f>(m_load7273_offset_offset_load_2e_i1460_);
  __store<256>(element71_2e_i1458_, m_load7273_offset_offset_load_2e_i1460_smear_);
  element76_2e_i1463_ = (&row3_2e_i1387_.field3);
  m_load7778_offset_offset_load_2e_i1465_ = *((&constants_->field1.field0.array[((int64_t )3ull)].array[((int64_t )3ull)]));
  m_load7778_offset_offset_load_2e_i1465_smear_ = __smear_float<__vec64_f>(m_load7778_offset_offset_load_2e_i1465_);
  __store<256>(element76_2e_i1463_, m_load7778_offset_offset_load_2e_i1465_smear_);
  ptr5561_masked_load_ = __masked_load_float((((uint8_t *)(&row0_2e_i1384_))), cmp152_);
  ptr5582_masked_load_ = __masked_load_float(v_load_ptr2int_2e_i1276_2void_, cmp152_);
  ptr5604_masked_load_ = __masked_load_float((((uint8_t *)element6_2e_i1393_)), cmp152_);
  ptr5626_masked_load_ = __masked_load_float(tmp__1_, cmp152_);
  ptr5648_masked_load_ = __masked_load_float((((uint8_t *)element11_2e_i1398_)), cmp152_);
  ptr5670_masked_load_ = __masked_load_float(tmp__2_, cmp152_);
  ptr5692_masked_load_ = __masked_load_float((((uint8_t *)element16_2e_i1403_)), cmp152_);
  ptr5714_masked_load_ = __masked_load_float(tmp__3_, cmp152_);
  ptr5735_masked_load_ = __masked_load_float((((uint8_t *)(&row1_2e_i1385_))), cmp152_);
  ptr5779_masked_load_ = __masked_load_float((((uint8_t *)element26_2e_i1413_)), cmp152_);
  ptr5823_masked_load_ = __masked_load_float((((uint8_t *)element31_2e_i1418_)), cmp152_);
  ptr5867_masked_load_ = __masked_load_float((((uint8_t *)element36_2e_i1423_)), cmp152_);
  ptr5910_masked_load_ = __masked_load_float((((uint8_t *)(&row2_2e_i1386_))), cmp152_);
  ptr5954_masked_load_ = __masked_load_float((((uint8_t *)element46_2e_i1433_)), cmp152_);
  ptr5998_masked_load_ = __masked_load_float((((uint8_t *)element51_2e_i1438_)), cmp152_);
  ptr6042_masked_load_ = __masked_load_float((((uint8_t *)element56_2e_i1443_)), cmp152_);
  ptr6085_masked_load_ = __masked_load_float((((uint8_t *)(&row3_2e_i1387_))), cmp152_);
  ptr6129_masked_load_ = __masked_load_float((((uint8_t *)element66_2e_i1453_)), cmp152_);
  ptr6173_masked_load_ = __masked_load_float((((uint8_t *)element71_2e_i1458_)), cmp152_);
  ptr6217_masked_load_ = __masked_load_float((((uint8_t *)element76_2e_i1463_)), cmp152_);
  oldret760_ = l_v64_varying_float4 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>());
  oldret760_.field0 = (__add((__add((__add((__mul(ptr5561_masked_load_, ptr5582_masked_load_)), (__mul(ptr5604_masked_load_, ptr5626_masked_load_)))), (__mul(ptr5648_masked_load_, ptr5670_masked_load_)))), (__mul(ptr5692_masked_load_, ptr5714_masked_load_))));
  oldret762_ = oldret760_;
  oldret762_.field1 = (__add((__add((__add((__mul(ptr5735_masked_load_, ptr5582_masked_load_)), (__mul(ptr5779_masked_load_, ptr5626_masked_load_)))), (__mul(ptr5823_masked_load_, ptr5670_masked_load_)))), (__mul(ptr5867_masked_load_, ptr5714_masked_load_))));
  oldret764_ = oldret762_;
  oldret764_.field2 = (__add((__add((__add((__mul(ptr5910_masked_load_, ptr5582_masked_load_)), (__mul(ptr5954_masked_load_, ptr5626_masked_load_)))), (__mul(ptr5998_masked_load_, ptr5670_masked_load_)))), (__mul(ptr6042_masked_load_, ptr5714_masked_load_))));
  oldret766_ = oldret764_;
  oldret766_.field3 = (__add((__add((__add((__mul(ptr6085_masked_load_, ptr5582_masked_load_)), (__mul(ptr6129_masked_load_, ptr5626_masked_load_)))), (__mul(ptr6173_masked_load_, ptr5670_masked_load_)))), (__mul(ptr6217_masked_load_, ptr5714_masked_load_))));
  *(&wpos221_) = oldret766_;
  m_load3_offset_offset_load_2e_i1585_ = *((&constants_->field2.field0.array[((int64_t )0ull)].array[((int64_t )0ull)]));
  m_load3_offset_offset_load_2e_i1585_smear_ = __smear_float<__vec64_f>(m_load3_offset_offset_load_2e_i1585_);
  __store<256>(((&row0_2e_i1579_.field0)), m_load3_offset_offset_load_2e_i1585_smear_);
  element6_2e_i1588_ = (&row0_2e_i1579_.field1);
  m_load78_offset_offset_load_2e_i1590_ = *((&constants_->field2.field0.array[((int64_t )1ull)].array[((int64_t )0ull)]));
  m_load78_offset_offset_load_2e_i1590_smear_ = __smear_float<__vec64_f>(m_load78_offset_offset_load_2e_i1590_);
  __store<256>(element6_2e_i1588_, m_load78_offset_offset_load_2e_i1590_smear_);
  element11_2e_i1593_ = (&row0_2e_i1579_.field2);
  m_load1213_offset_offset_load_2e_i1595_ = *((&constants_->field2.field0.array[((int64_t )2ull)].array[((int64_t )0ull)]));
  m_load1213_offset_offset_load_2e_i1595_smear_ = __smear_float<__vec64_f>(m_load1213_offset_offset_load_2e_i1595_);
  __store<256>(element11_2e_i1593_, m_load1213_offset_offset_load_2e_i1595_smear_);
  element16_2e_i1598_ = (&row0_2e_i1579_.field3);
  m_load1718_offset_offset_load_2e_i1600_ = *((&constants_->field2.field0.array[((int64_t )3ull)].array[((int64_t )0ull)]));
  m_load1718_offset_offset_load_2e_i1600_smear_ = __smear_float<__vec64_f>(m_load1718_offset_offset_load_2e_i1600_);
  __store<256>(element16_2e_i1598_, m_load1718_offset_offset_load_2e_i1600_smear_);
  m_load2223_offset_offset_load_2e_i1605_ = *((&constants_->field2.field0.array[((int64_t )0ull)].array[((int64_t )1ull)]));
  m_load2223_offset_offset_load_2e_i1605_smear_ = __smear_float<__vec64_f>(m_load2223_offset_offset_load_2e_i1605_);
  __store<256>(((&row1_2e_i1580_.field0)), m_load2223_offset_offset_load_2e_i1605_smear_);
  element26_2e_i1608_ = (&row1_2e_i1580_.field1);
  m_load2728_offset_offset_load_2e_i1610_ = *((&constants_->field2.field0.array[((int64_t )1ull)].array[((int64_t )1ull)]));
  m_load2728_offset_offset_load_2e_i1610_smear_ = __smear_float<__vec64_f>(m_load2728_offset_offset_load_2e_i1610_);
  __store<256>(element26_2e_i1608_, m_load2728_offset_offset_load_2e_i1610_smear_);
  element31_2e_i1613_ = (&row1_2e_i1580_.field2);
  m_load3233_offset_offset_load_2e_i1615_ = *((&constants_->field2.field0.array[((int64_t )2ull)].array[((int64_t )1ull)]));
  m_load3233_offset_offset_load_2e_i1615_smear_ = __smear_float<__vec64_f>(m_load3233_offset_offset_load_2e_i1615_);
  __store<256>(element31_2e_i1613_, m_load3233_offset_offset_load_2e_i1615_smear_);
  element36_2e_i1618_ = (&row1_2e_i1580_.field3);
  m_load3738_offset_offset_load_2e_i1620_ = *((&constants_->field2.field0.array[((int64_t )3ull)].array[((int64_t )1ull)]));
  m_load3738_offset_offset_load_2e_i1620_smear_ = __smear_float<__vec64_f>(m_load3738_offset_offset_load_2e_i1620_);
  __store<256>(element36_2e_i1618_, m_load3738_offset_offset_load_2e_i1620_smear_);
  m_load4243_offset_offset_load_2e_i1625_ = *((&constants_->field2.field0.array[((int64_t )0ull)].array[((int64_t )2ull)]));
  m_load4243_offset_offset_load_2e_i1625_smear_ = __smear_float<__vec64_f>(m_load4243_offset_offset_load_2e_i1625_);
  __store<256>(((&row2_2e_i1581_.field0)), m_load4243_offset_offset_load_2e_i1625_smear_);
  element46_2e_i1628_ = (&row2_2e_i1581_.field1);
  m_load4748_offset_offset_load_2e_i1630_ = *((&constants_->field2.field0.array[((int64_t )1ull)].array[((int64_t )2ull)]));
  m_load4748_offset_offset_load_2e_i1630_smear_ = __smear_float<__vec64_f>(m_load4748_offset_offset_load_2e_i1630_);
  __store<256>(element46_2e_i1628_, m_load4748_offset_offset_load_2e_i1630_smear_);
  element51_2e_i1633_ = (&row2_2e_i1581_.field2);
  m_load5253_offset_offset_load_2e_i1635_ = *((&constants_->field2.field0.array[((int64_t )2ull)].array[((int64_t )2ull)]));
  m_load5253_offset_offset_load_2e_i1635_smear_ = __smear_float<__vec64_f>(m_load5253_offset_offset_load_2e_i1635_);
  __store<256>(element51_2e_i1633_, m_load5253_offset_offset_load_2e_i1635_smear_);
  element56_2e_i1638_ = (&row2_2e_i1581_.field3);
  m_load5758_offset_offset_load_2e_i1640_ = *((&constants_->field2.field0.array[((int64_t )3ull)].array[((int64_t )2ull)]));
  m_load5758_offset_offset_load_2e_i1640_smear_ = __smear_float<__vec64_f>(m_load5758_offset_offset_load_2e_i1640_);
  __store<256>(element56_2e_i1638_, m_load5758_offset_offset_load_2e_i1640_smear_);
  m_load6263_offset_offset_load_2e_i1645_ = *((&constants_->field2.field0.array[((int64_t )0ull)].array[((int64_t )3ull)]));
  m_load6263_offset_offset_load_2e_i1645_smear_ = __smear_float<__vec64_f>(m_load6263_offset_offset_load_2e_i1645_);
  __store<256>(((&row3_2e_i1582_.field0)), m_load6263_offset_offset_load_2e_i1645_smear_);
  element66_2e_i1648_ = (&row3_2e_i1582_.field1);
  m_load6768_offset_offset_load_2e_i1650_ = *((&constants_->field2.field0.array[((int64_t )1ull)].array[((int64_t )3ull)]));
  m_load6768_offset_offset_load_2e_i1650_smear_ = __smear_float<__vec64_f>(m_load6768_offset_offset_load_2e_i1650_);
  __store<256>(element66_2e_i1648_, m_load6768_offset_offset_load_2e_i1650_smear_);
  element71_2e_i1653_ = (&row3_2e_i1582_.field2);
  m_load7273_offset_offset_load_2e_i1655_ = *((&constants_->field2.field0.array[((int64_t )2ull)].array[((int64_t )3ull)]));
  m_load7273_offset_offset_load_2e_i1655_smear_ = __smear_float<__vec64_f>(m_load7273_offset_offset_load_2e_i1655_);
  __store<256>(element71_2e_i1653_, m_load7273_offset_offset_load_2e_i1655_smear_);
  element76_2e_i1658_ = (&row3_2e_i1582_.field3);
  m_load7778_offset_offset_load_2e_i1660_ = *((&constants_->field2.field0.array[((int64_t )3ull)].array[((int64_t )3ull)]));
  m_load7778_offset_offset_load_2e_i1660_smear_ = __smear_float<__vec64_f>(m_load7778_offset_offset_load_2e_i1660_);
  __store<256>(element76_2e_i1658_, m_load7778_offset_offset_load_2e_i1660_smear_);
  ptr6260_masked_load_ = __masked_load_float((((uint8_t *)(&row0_2e_i1579_))), cmp152_);
  ptr6281_masked_load_ = __masked_load_float(v_load_ptr2int_2e_i1276_2void_, cmp152_);
  ptr6303_masked_load_ = __masked_load_float((((uint8_t *)element6_2e_i1588_)), cmp152_);
  ptr6325_masked_load_ = __masked_load_float(tmp__1_, cmp152_);
  ptr6347_masked_load_ = __masked_load_float((((uint8_t *)element11_2e_i1593_)), cmp152_);
  ptr6369_masked_load_ = __masked_load_float(tmp__2_, cmp152_);
  ptr6391_masked_load_ = __masked_load_float((((uint8_t *)element16_2e_i1598_)), cmp152_);
  ptr6413_masked_load_ = __masked_load_float(tmp__3_, cmp152_);
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i1691_ = __add((__add((__add((__mul(ptr6260_masked_load_, ptr6281_masked_load_)), (__mul(ptr6303_masked_load_, ptr6325_masked_load_)))), (__mul(ptr6347_masked_load_, ptr6369_masked_load_)))), (__mul(ptr6391_masked_load_, ptr6413_masked_load_)));
  ptr6434_masked_load_ = __masked_load_float((((uint8_t *)(&row1_2e_i1580_))), cmp152_);
  ptr6478_masked_load_ = __masked_load_float((((uint8_t *)element26_2e_i1608_)), cmp152_);
  ptr6522_masked_load_ = __masked_load_float((((uint8_t *)element31_2e_i1613_)), cmp152_);
  ptr6566_masked_load_ = __masked_load_float((((uint8_t *)element36_2e_i1618_)), cmp152_);
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i1717_ = __add((__add((__add((__mul(ptr6434_masked_load_, ptr6281_masked_load_)), (__mul(ptr6478_masked_load_, ptr6325_masked_load_)))), (__mul(ptr6522_masked_load_, ptr6369_masked_load_)))), (__mul(ptr6566_masked_load_, ptr6413_masked_load_)));
  ptr6609_masked_load_ = __masked_load_float((((uint8_t *)(&row2_2e_i1581_))), cmp152_);
  ptr6653_masked_load_ = __masked_load_float((((uint8_t *)element46_2e_i1628_)), cmp152_);
  ptr6697_masked_load_ = __masked_load_float((((uint8_t *)element51_2e_i1633_)), cmp152_);
  ptr6741_masked_load_ = __masked_load_float((((uint8_t *)element56_2e_i1638_)), cmp152_);
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i1743_ = __add((__add((__add((__mul(ptr6609_masked_load_, ptr6281_masked_load_)), (__mul(ptr6653_masked_load_, ptr6325_masked_load_)))), (__mul(ptr6697_masked_load_, ptr6369_masked_load_)))), (__mul(ptr6741_masked_load_, ptr6413_masked_load_)));
  ptr6784_masked_load_ = __masked_load_float((((uint8_t *)(&row3_2e_i1582_))), cmp152_);
  ptr6828_masked_load_ = __masked_load_float((((uint8_t *)element66_2e_i1648_)), cmp152_);
  ptr6872_masked_load_ = __masked_load_float((((uint8_t *)element71_2e_i1653_)), cmp152_);
  ptr6916_masked_load_ = __masked_load_float((((uint8_t *)element76_2e_i1658_)), cmp152_);
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i1769_ = __add((__add((__add((__mul(ptr6784_masked_load_, ptr6281_masked_load_)), (__mul(ptr6828_masked_load_, ptr6325_masked_load_)))), (__mul(ptr6872_masked_load_, ptr6369_masked_load_)))), (__mul(ptr6916_masked_load_, ptr6413_masked_load_)));
  oldret_ = l_v64_varying_float4 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>());
  oldret_.field0 = add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i1691_;
  oldret754_ = oldret_;
  oldret754_.field1 = add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i1717_;
  oldret756_ = oldret754_;
  oldret756_.field2 = add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i1743_;
  oldret758_ = oldret756_;
  oldret758_.field3 = add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i1769_;
  *(&wpos221_) = oldret758_;
  output_load251_ptr2int_2void_ = ((uint8_t *)output_);
  __scatter_base_offsets32_float(output_load251_ptr2int_2void_, 1u, mul__index_load158_, add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i1691_, cmp152_);
  __scatter_base_offsets32_float(output_load251_ptr2int_2void_, 1u, new_add515_, add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i1717_, cmp152_);
  __scatter_base_offsets32_float(output_load251_ptr2int_2void_, 1u, new_add523_, add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i1743_, cmp152_);
  __scatter_base_offsets32_float(output_load251_ptr2int_2void_, 1u, new_add532_, add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i1769_, cmp152_);
  v157271_Color_ = *((&v157_.field1));
  v157271_Color_extract_0_ = (v157271_Color_.field0);
  __scatter_base_offsets32_float(output_load251_ptr2int_2void_, 1u, new_add542_, v157271_Color_extract_0_, cmp152_);
  v157271_Color_extract_1_ = (v157271_Color_.field1);
  __scatter_base_offsets32_float(output_load251_ptr2int_2void_, 1u, new_add553_, v157271_Color_extract_1_, cmp152_);
  v157271_Color_extract_2_ = (v157271_Color_.field2);
  __scatter_base_offsets32_float(output_load251_ptr2int_2void_, 1u, new_add565_, v157271_Color_extract_2_, cmp152_);
  v157271_Color_extract_3_ = (v157271_Color_.field3);
  __scatter_base_offsets32_float(output_load251_ptr2int_2void_, 1u, new_add578_, v157271_Color_extract_3_, cmp152_);
  goto foreach_reset_label;

}
}


static const int32_t __attribute__ ((aligned(64))) VectorConstant2[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u, 16u, 17u, 18u, 19u, 20u, 21u, 22u, 23u, 24u, 25u, 26u, 27u, 28u, 29u, 30u, 31u, 32u, 33u, 34u, 35u, 36u, 37u, 38u, 39u, 40u, 41u, 42u, 43u, 44u, 45u, 46u, 47u, 48u, 49u, 50u, 51u, 52u, 53u, 54u, 55u, 56u, 57u, 58u, 59u, 60u, 61u, 62u, 63u,  };
static const int32_t __attribute__ ((aligned(64))) VectorConstant3[] = { 0u, 1u, 2u, 3u, 4u, 5u, 6u, 7u, 8u, 9u, 10u, 11u, 12u, 13u, 14u, 15u, 16u, 17u, 18u, 19u, 20u, 21u, 22u, 23u, 24u, 25u, 26u, 27u, 28u, 29u, 30u, 31u, 32u, 33u, 34u, 35u, 36u, 37u, 38u, 39u, 40u, 41u, 42u, 43u, 44u, 45u, 46u, 47u, 48u, 49u, 50u, 51u, 52u, 53u, 54u, 55u, 56u, 57u, 58u, 59u, 60u, 61u, 62u, 63u,  };

void vertex_shader(l_v64_uniform_VertexInput *input_, l_v64_uniform_VertexOutput *output_, uint32_t count_, l_v64_uniform_Constants *constants_) {
  l_v64_varying_float4 row0_2e_i1579_;    /* Address-exposed local */
  l_v64_varying_float4 row1_2e_i1580_;    /* Address-exposed local */
  l_v64_varying_float4 row2_2e_i1581_;    /* Address-exposed local */
  l_v64_varying_float4 row3_2e_i1582_;    /* Address-exposed local */
  l_v64_varying_float4 row0_2e_i1384_;    /* Address-exposed local */
  l_v64_varying_float4 row1_2e_i1385_;    /* Address-exposed local */
  l_v64_varying_float4 row2_2e_i1386_;    /* Address-exposed local */
  l_v64_varying_float4 row3_2e_i1387_;    /* Address-exposed local */
  l_v64_varying_float4 row0_2e_i1189_;    /* Address-exposed local */
  l_v64_varying_float4 row1_2e_i1190_;    /* Address-exposed local */
  l_v64_varying_float4 row2_2e_i1191_;    /* Address-exposed local */
  l_v64_varying_float4 row3_2e_i1192_;    /* Address-exposed local */
  l_v64_varying_VertexInput v_;    /* Address-exposed local */
  l_v64_varying_VertexInput v157_;    /* Address-exposed local */
  l_v64_varying_float4 wpos221_;    /* Address-exposed local */
  uint32_t aligned_end_;
  uint8_t *input_load_ptr2int_2void_;
  __vec64_f (*v8384_);
  __vec64_f (*v8788_);
  __vec64_f (*v9192_);
  float *m_load3_offset_offset_2e_i_;
  float *m_load78_offset_offset_2e_i_;
  float *m_load1213_offset_offset_2e_i_;
  float *m_load1718_offset_offset_2e_i_;
  float *m_load2223_offset_offset_2e_i_;
  float *m_load2728_offset_offset_2e_i_;
  float *m_load3233_offset_offset_2e_i_;
  float *m_load3738_offset_offset_2e_i_;
  float *m_load4243_offset_offset_2e_i_;
  float *m_load4748_offset_offset_2e_i_;
  float *m_load5253_offset_offset_2e_i_;
  float *m_load5758_offset_offset_2e_i_;
  float *m_load6263_offset_offset_2e_i_;
  float *m_load6768_offset_offset_2e_i_;
  float *m_load7273_offset_offset_2e_i_;
  float *m_load7778_offset_offset_2e_i_;
  float *m_load3_offset_offset_2e_i804_;
  float *m_load78_offset_offset_2e_i809_;
  float *m_load1213_offset_offset_2e_i814_;
  float *m_load1718_offset_offset_2e_i819_;
  float *m_load2223_offset_offset_2e_i824_;
  float *m_load2728_offset_offset_2e_i829_;
  float *m_load3233_offset_offset_2e_i834_;
  float *m_load3738_offset_offset_2e_i839_;
  float *m_load4243_offset_offset_2e_i844_;
  float *m_load4748_offset_offset_2e_i849_;
  float *m_load5253_offset_offset_2e_i854_;
  float *m_load5758_offset_offset_2e_i859_;
  float *m_load6263_offset_offset_2e_i864_;
  float *m_load6768_offset_offset_2e_i869_;
  float *m_load7273_offset_offset_2e_i874_;
  float *m_load7778_offset_offset_2e_i879_;
  float *m_load3_offset_offset_2e_i999_;
  float *m_load78_offset_offset_2e_i1004_;
  float *m_load1213_offset_offset_2e_i1009_;
  float *m_load1718_offset_offset_2e_i1014_;
  float *m_load2223_offset_offset_2e_i1019_;
  float *m_load2728_offset_offset_2e_i1024_;
  float *m_load3233_offset_offset_2e_i1029_;
  float *m_load3738_offset_offset_2e_i1034_;
  float *m_load4243_offset_offset_2e_i1039_;
  float *m_load4748_offset_offset_2e_i1044_;
  float *m_load5253_offset_offset_2e_i1049_;
  float *m_load5758_offset_offset_2e_i1054_;
  float *m_load6263_offset_offset_2e_i1059_;
  float *m_load6768_offset_offset_2e_i1064_;
  float *m_load7273_offset_offset_2e_i1069_;
  float *m_load7778_offset_offset_2e_i1074_;
  uint8_t *output_load_ptr2int_2void_;
  l_v64_varying_float3 *v127_;
  uint32_t counter_2e_16999_;
  uint32_t counter_2e_16999___PHI;
  __vec64_i32 counter_2e_16999_smear_;
  __vec64_i32 mul__index_load24_;
  __vec64_f input_load_offset_load296_;
  l_v64_varying_float3 set_value_;
  __vec64_i32 new_add_;
  __vec64_f input_load_offset_load39301_;
  l_v64_varying_float3 set_value40_;
  __vec64_i32 new_add308_;
  __vec64_f input_load_offset_load45309_;
  l_v64_varying_float3 set_value46_;
  __vec64_i32 new_add317_;
  __vec64_f input_load_offset_load51318_;
  l_v64_varying_float3 set_value52_;
  l_v64_varying_VertexInput set_value53_;
  __vec64_i32 new_add327_;
  __vec64_f input_load_offset_load62328_;
  l_v64_varying_float3 set_value63_;
  __vec64_i32 new_add338_;
  __vec64_f input_load_offset_load68339_;
  l_v64_varying_float3 set_value69_;
  __vec64_i32 new_add350_;
  __vec64_f input_load_offset_load74351_;
  l_v64_varying_float3 set_value75_;
  __vec64_i32 new_add363_;
  __vec64_f input_load_offset_load80364_;
  l_v64_varying_float3 set_value81_;
  l_v64_varying_VertexInput set_value82_;
  __vec64_f v8384_x_;
  __vec64_f v8788_y_;
  __vec64_f v9192_z_;
  float m_load3_offset_offset_load_2e_i_;
  __vec64_f m_load3_offset_offset_load_2e_i_smear_;
  float m_load78_offset_offset_load_2e_i_;
  __vec64_f m_load78_offset_offset_load_2e_i_smear_;
  float m_load1213_offset_offset_load_2e_i_;
  __vec64_f m_load1213_offset_offset_load_2e_i_smear_;
  float m_load1718_offset_offset_load_2e_i_;
  __vec64_f m_load1718_offset_offset_load_2e_i_smear_;
  float m_load2223_offset_offset_load_2e_i_;
  __vec64_f m_load2223_offset_offset_load_2e_i_smear_;
  float m_load2728_offset_offset_load_2e_i_;
  __vec64_f m_load2728_offset_offset_load_2e_i_smear_;
  float m_load3233_offset_offset_load_2e_i_;
  __vec64_f m_load3233_offset_offset_load_2e_i_smear_;
  float m_load3738_offset_offset_load_2e_i_;
  __vec64_f m_load3738_offset_offset_load_2e_i_smear_;
  float m_load4243_offset_offset_load_2e_i_;
  __vec64_f m_load4243_offset_offset_load_2e_i_smear_;
  float m_load4748_offset_offset_load_2e_i_;
  __vec64_f m_load4748_offset_offset_load_2e_i_smear_;
  float m_load5253_offset_offset_load_2e_i_;
  __vec64_f m_load5253_offset_offset_load_2e_i_smear_;
  float m_load5758_offset_offset_load_2e_i_;
  __vec64_f m_load5758_offset_offset_load_2e_i_smear_;
  float m_load6263_offset_offset_load_2e_i_;
  __vec64_f m_load6263_offset_offset_load_2e_i_smear_;
  float m_load6768_offset_offset_load_2e_i_;
  __vec64_f m_load6768_offset_offset_load_2e_i_smear_;
  float m_load7273_offset_offset_load_2e_i_;
  __vec64_f m_load7273_offset_offset_load_2e_i_smear_;
  float m_load7778_offset_offset_load_2e_i_;
  __vec64_f m_load7778_offset_offset_load_2e_i_smear_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i_;
  float m_load3_offset_offset_load_2e_i805_;
  __vec64_f m_load3_offset_offset_load_2e_i805_smear_;
  float m_load78_offset_offset_load_2e_i810_;
  __vec64_f m_load78_offset_offset_load_2e_i810_smear_;
  float m_load1213_offset_offset_load_2e_i815_;
  __vec64_f m_load1213_offset_offset_load_2e_i815_smear_;
  float m_load1718_offset_offset_load_2e_i820_;
  __vec64_f m_load1718_offset_offset_load_2e_i820_smear_;
  float m_load2223_offset_offset_load_2e_i825_;
  __vec64_f m_load2223_offset_offset_load_2e_i825_smear_;
  float m_load2728_offset_offset_load_2e_i830_;
  __vec64_f m_load2728_offset_offset_load_2e_i830_smear_;
  float m_load3233_offset_offset_load_2e_i835_;
  __vec64_f m_load3233_offset_offset_load_2e_i835_smear_;
  float m_load3738_offset_offset_load_2e_i840_;
  __vec64_f m_load3738_offset_offset_load_2e_i840_smear_;
  float m_load4243_offset_offset_load_2e_i845_;
  __vec64_f m_load4243_offset_offset_load_2e_i845_smear_;
  float m_load4748_offset_offset_load_2e_i850_;
  __vec64_f m_load4748_offset_offset_load_2e_i850_smear_;
  float m_load5253_offset_offset_load_2e_i855_;
  __vec64_f m_load5253_offset_offset_load_2e_i855_smear_;
  float m_load5758_offset_offset_load_2e_i860_;
  __vec64_f m_load5758_offset_offset_load_2e_i860_smear_;
  float m_load6263_offset_offset_load_2e_i865_;
  __vec64_f m_load6263_offset_offset_load_2e_i865_smear_;
  float m_load6768_offset_offset_load_2e_i870_;
  __vec64_f m_load6768_offset_offset_load_2e_i870_smear_;
  float m_load7273_offset_offset_load_2e_i875_;
  __vec64_f m_load7273_offset_offset_load_2e_i875_smear_;
  float m_load7778_offset_offset_load_2e_i880_;
  __vec64_f m_load7778_offset_offset_load_2e_i880_smear_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i911_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i937_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i963_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i989_;
  float m_load3_offset_offset_load_2e_i1000_;
  __vec64_f m_load3_offset_offset_load_2e_i1000_smear_;
  float m_load78_offset_offset_load_2e_i1005_;
  __vec64_f m_load78_offset_offset_load_2e_i1005_smear_;
  float m_load1213_offset_offset_load_2e_i1010_;
  __vec64_f m_load1213_offset_offset_load_2e_i1010_smear_;
  float m_load1718_offset_offset_load_2e_i1015_;
  __vec64_f m_load1718_offset_offset_load_2e_i1015_smear_;
  float m_load2223_offset_offset_load_2e_i1020_;
  __vec64_f m_load2223_offset_offset_load_2e_i1020_smear_;
  float m_load2728_offset_offset_load_2e_i1025_;
  __vec64_f m_load2728_offset_offset_load_2e_i1025_smear_;
  float m_load3233_offset_offset_load_2e_i1030_;
  __vec64_f m_load3233_offset_offset_load_2e_i1030_smear_;
  float m_load3738_offset_offset_load_2e_i1035_;
  __vec64_f m_load3738_offset_offset_load_2e_i1035_smear_;
  float m_load4243_offset_offset_load_2e_i1040_;
  __vec64_f m_load4243_offset_offset_load_2e_i1040_smear_;
  float m_load4748_offset_offset_load_2e_i1045_;
  __vec64_f m_load4748_offset_offset_load_2e_i1045_smear_;
  float m_load5253_offset_offset_load_2e_i1050_;
  __vec64_f m_load5253_offset_offset_load_2e_i1050_smear_;
  float m_load5758_offset_offset_load_2e_i1055_;
  __vec64_f m_load5758_offset_offset_load_2e_i1055_smear_;
  float m_load6263_offset_offset_load_2e_i1060_;
  __vec64_f m_load6263_offset_offset_load_2e_i1060_smear_;
  float m_load6768_offset_offset_load_2e_i1065_;
  __vec64_f m_load6768_offset_offset_load_2e_i1065_smear_;
  float m_load7273_offset_offset_load_2e_i1070_;
  __vec64_f m_load7273_offset_offset_load_2e_i1070_smear_;
  float m_load7778_offset_offset_load_2e_i1075_;
  __vec64_f m_load7778_offset_offset_load_2e_i1075_smear_;
  l_v64_varying_float3 v127_Color_;
  __vec64_f v127_Color_extract_0_;
  __vec64_f v127_Color_extract_1_;
  __vec64_f v127_Color_extract_2_;
  __vec64_f v127_Color_extract_3_;
  uint32_t new_counter_;
  uint32_t counter_2e_1_2e_lcssa_;
  uint32_t counter_2e_1_2e_lcssa___PHI;
  __vec64_i32 counter_2e_1_2e_lcssa_smear_;
  __vec64_i32 iter_val149_;
  __vec64_i32 count_smear_;
  __vec64_i1 cmp152_;
  __vec64_i32 mul__index_load158_;
  uint8_t *input_load159_ptr2int_2void_;
  __vec64_f input_load159_offset_load510_;
  l_v64_varying_float3 set_value172_;
  __vec64_i32 new_add515_;
  __vec64_f input_load159_offset_load177516_;
  l_v64_varying_float3 set_value178_;
  __vec64_i32 new_add523_;
  __vec64_f input_load159_offset_load183524_;
  l_v64_varying_float3 set_value184_;
  __vec64_i32 new_add532_;
  __vec64_f input_load159_offset_load189533_;
  l_v64_varying_float3 set_value190_;
  l_v64_varying_VertexInput set_value191_;
  __vec64_i32 new_add542_;
  __vec64_f input_load159_offset_load200543_;
  l_v64_varying_float3 set_value201_;
  __vec64_i32 new_add553_;
  __vec64_f input_load159_offset_load206554_;
  l_v64_varying_float3 set_value207_;
  __vec64_i32 new_add565_;
  __vec64_f input_load159_offset_load212566_;
  l_v64_varying_float3 set_value213_;
  __vec64_i32 new_add578_;
  __vec64_f input_load159_offset_load218579_;
  l_v64_varying_float3 set_value219_;
  l_v64_varying_VertexInput set_value220_;
  __vec64_f v157223224_x_;
  __vec64_f (*element226_);
  __vec64_f v157227228_y_;
  __vec64_f (*element230_);
  __vec64_f v157231232_z_;
  __vec64_f (*element234_);
  float m_load3_offset_offset_load_2e_i1195_;
  __vec64_f m_load3_offset_offset_load_2e_i1195_smear_;
  __vec64_f (*element6_2e_i1198_);
  float m_load78_offset_offset_load_2e_i1200_;
  __vec64_f m_load78_offset_offset_load_2e_i1200_smear_;
  __vec64_f (*element11_2e_i1203_);
  float m_load1213_offset_offset_load_2e_i1205_;
  __vec64_f m_load1213_offset_offset_load_2e_i1205_smear_;
  __vec64_f (*element16_2e_i1208_);
  float m_load1718_offset_offset_load_2e_i1210_;
  __vec64_f m_load1718_offset_offset_load_2e_i1210_smear_;
  float m_load2223_offset_offset_load_2e_i1215_;
  __vec64_f m_load2223_offset_offset_load_2e_i1215_smear_;
  __vec64_f (*element26_2e_i1218_);
  float m_load2728_offset_offset_load_2e_i1220_;
  __vec64_f m_load2728_offset_offset_load_2e_i1220_smear_;
  __vec64_f (*element31_2e_i1223_);
  float m_load3233_offset_offset_load_2e_i1225_;
  __vec64_f m_load3233_offset_offset_load_2e_i1225_smear_;
  __vec64_f (*element36_2e_i1228_);
  float m_load3738_offset_offset_load_2e_i1230_;
  __vec64_f m_load3738_offset_offset_load_2e_i1230_smear_;
  float m_load4243_offset_offset_load_2e_i1235_;
  __vec64_f m_load4243_offset_offset_load_2e_i1235_smear_;
  __vec64_f (*element46_2e_i1238_);
  float m_load4748_offset_offset_load_2e_i1240_;
  __vec64_f m_load4748_offset_offset_load_2e_i1240_smear_;
  __vec64_f (*element51_2e_i1243_);
  float m_load5253_offset_offset_load_2e_i1245_;
  __vec64_f m_load5253_offset_offset_load_2e_i1245_smear_;
  __vec64_f (*element56_2e_i1248_);
  float m_load5758_offset_offset_load_2e_i1250_;
  __vec64_f m_load5758_offset_offset_load_2e_i1250_smear_;
  float m_load6263_offset_offset_load_2e_i1255_;
  __vec64_f m_load6263_offset_offset_load_2e_i1255_smear_;
  __vec64_f (*element66_2e_i1258_);
  float m_load6768_offset_offset_load_2e_i1260_;
  __vec64_f m_load6768_offset_offset_load_2e_i1260_smear_;
  __vec64_f (*element71_2e_i1263_);
  float m_load7273_offset_offset_load_2e_i1265_;
  __vec64_f m_load7273_offset_offset_load_2e_i1265_smear_;
  __vec64_f (*element76_2e_i1268_);
  float m_load7778_offset_offset_load_2e_i1270_;
  __vec64_f m_load7778_offset_offset_load_2e_i1270_smear_;
  __vec64_f ptr4862_masked_load_;
  uint8_t *v_load_ptr2int_2e_i1276_2void_;
  __vec64_f ptr4883_masked_load_;
  __vec64_f ptr4905_masked_load_;
  uint8_t *tmp__4_;
  __vec64_f ptr4927_masked_load_;
  __vec64_f ptr4949_masked_load_;
  uint8_t *tmp__5_;
  __vec64_f ptr4971_masked_load_;
  __vec64_f ptr4993_masked_load_;
  uint8_t *tmp__6_;
  __vec64_f ptr5015_masked_load_;
  __vec64_f ptr5036_masked_load_;
  __vec64_f ptr5080_masked_load_;
  __vec64_f ptr5124_masked_load_;
  __vec64_f ptr5168_masked_load_;
  __vec64_f ptr5211_masked_load_;
  __vec64_f ptr5255_masked_load_;
  __vec64_f ptr5299_masked_load_;
  __vec64_f ptr5343_masked_load_;
  __vec64_f ptr5386_masked_load_;
  __vec64_f ptr5430_masked_load_;
  __vec64_f ptr5474_masked_load_;
  __vec64_f ptr5518_masked_load_;
  l_v64_varying_float4 oldret768_;
  l_v64_varying_float4 oldret770_;
  l_v64_varying_float4 oldret772_;
  l_v64_varying_float4 oldret774_;
  float m_load3_offset_offset_load_2e_i1390_;
  __vec64_f m_load3_offset_offset_load_2e_i1390_smear_;
  __vec64_f (*element6_2e_i1393_);
  float m_load78_offset_offset_load_2e_i1395_;
  __vec64_f m_load78_offset_offset_load_2e_i1395_smear_;
  __vec64_f (*element11_2e_i1398_);
  float m_load1213_offset_offset_load_2e_i1400_;
  __vec64_f m_load1213_offset_offset_load_2e_i1400_smear_;
  __vec64_f (*element16_2e_i1403_);
  float m_load1718_offset_offset_load_2e_i1405_;
  __vec64_f m_load1718_offset_offset_load_2e_i1405_smear_;
  float m_load2223_offset_offset_load_2e_i1410_;
  __vec64_f m_load2223_offset_offset_load_2e_i1410_smear_;
  __vec64_f (*element26_2e_i1413_);
  float m_load2728_offset_offset_load_2e_i1415_;
  __vec64_f m_load2728_offset_offset_load_2e_i1415_smear_;
  __vec64_f (*element31_2e_i1418_);
  float m_load3233_offset_offset_load_2e_i1420_;
  __vec64_f m_load3233_offset_offset_load_2e_i1420_smear_;
  __vec64_f (*element36_2e_i1423_);
  float m_load3738_offset_offset_load_2e_i1425_;
  __vec64_f m_load3738_offset_offset_load_2e_i1425_smear_;
  float m_load4243_offset_offset_load_2e_i1430_;
  __vec64_f m_load4243_offset_offset_load_2e_i1430_smear_;
  __vec64_f (*element46_2e_i1433_);
  float m_load4748_offset_offset_load_2e_i1435_;
  __vec64_f m_load4748_offset_offset_load_2e_i1435_smear_;
  __vec64_f (*element51_2e_i1438_);
  float m_load5253_offset_offset_load_2e_i1440_;
  __vec64_f m_load5253_offset_offset_load_2e_i1440_smear_;
  __vec64_f (*element56_2e_i1443_);
  float m_load5758_offset_offset_load_2e_i1445_;
  __vec64_f m_load5758_offset_offset_load_2e_i1445_smear_;
  float m_load6263_offset_offset_load_2e_i1450_;
  __vec64_f m_load6263_offset_offset_load_2e_i1450_smear_;
  __vec64_f (*element66_2e_i1453_);
  float m_load6768_offset_offset_load_2e_i1455_;
  __vec64_f m_load6768_offset_offset_load_2e_i1455_smear_;
  __vec64_f (*element71_2e_i1458_);
  float m_load7273_offset_offset_load_2e_i1460_;
  __vec64_f m_load7273_offset_offset_load_2e_i1460_smear_;
  __vec64_f (*element76_2e_i1463_);
  float m_load7778_offset_offset_load_2e_i1465_;
  __vec64_f m_load7778_offset_offset_load_2e_i1465_smear_;
  __vec64_f ptr5561_masked_load_;
  __vec64_f ptr5582_masked_load_;
  __vec64_f ptr5604_masked_load_;
  __vec64_f ptr5626_masked_load_;
  __vec64_f ptr5648_masked_load_;
  __vec64_f ptr5670_masked_load_;
  __vec64_f ptr5692_masked_load_;
  __vec64_f ptr5714_masked_load_;
  __vec64_f ptr5735_masked_load_;
  __vec64_f ptr5779_masked_load_;
  __vec64_f ptr5823_masked_load_;
  __vec64_f ptr5867_masked_load_;
  __vec64_f ptr5910_masked_load_;
  __vec64_f ptr5954_masked_load_;
  __vec64_f ptr5998_masked_load_;
  __vec64_f ptr6042_masked_load_;
  __vec64_f ptr6085_masked_load_;
  __vec64_f ptr6129_masked_load_;
  __vec64_f ptr6173_masked_load_;
  __vec64_f ptr6217_masked_load_;
  l_v64_varying_float4 oldret760_;
  l_v64_varying_float4 oldret762_;
  l_v64_varying_float4 oldret764_;
  l_v64_varying_float4 oldret766_;
  float m_load3_offset_offset_load_2e_i1585_;
  __vec64_f m_load3_offset_offset_load_2e_i1585_smear_;
  __vec64_f (*element6_2e_i1588_);
  float m_load78_offset_offset_load_2e_i1590_;
  __vec64_f m_load78_offset_offset_load_2e_i1590_smear_;
  __vec64_f (*element11_2e_i1593_);
  float m_load1213_offset_offset_load_2e_i1595_;
  __vec64_f m_load1213_offset_offset_load_2e_i1595_smear_;
  __vec64_f (*element16_2e_i1598_);
  float m_load1718_offset_offset_load_2e_i1600_;
  __vec64_f m_load1718_offset_offset_load_2e_i1600_smear_;
  float m_load2223_offset_offset_load_2e_i1605_;
  __vec64_f m_load2223_offset_offset_load_2e_i1605_smear_;
  __vec64_f (*element26_2e_i1608_);
  float m_load2728_offset_offset_load_2e_i1610_;
  __vec64_f m_load2728_offset_offset_load_2e_i1610_smear_;
  __vec64_f (*element31_2e_i1613_);
  float m_load3233_offset_offset_load_2e_i1615_;
  __vec64_f m_load3233_offset_offset_load_2e_i1615_smear_;
  __vec64_f (*element36_2e_i1618_);
  float m_load3738_offset_offset_load_2e_i1620_;
  __vec64_f m_load3738_offset_offset_load_2e_i1620_smear_;
  float m_load4243_offset_offset_load_2e_i1625_;
  __vec64_f m_load4243_offset_offset_load_2e_i1625_smear_;
  __vec64_f (*element46_2e_i1628_);
  float m_load4748_offset_offset_load_2e_i1630_;
  __vec64_f m_load4748_offset_offset_load_2e_i1630_smear_;
  __vec64_f (*element51_2e_i1633_);
  float m_load5253_offset_offset_load_2e_i1635_;
  __vec64_f m_load5253_offset_offset_load_2e_i1635_smear_;
  __vec64_f (*element56_2e_i1638_);
  float m_load5758_offset_offset_load_2e_i1640_;
  __vec64_f m_load5758_offset_offset_load_2e_i1640_smear_;
  float m_load6263_offset_offset_load_2e_i1645_;
  __vec64_f m_load6263_offset_offset_load_2e_i1645_smear_;
  __vec64_f (*element66_2e_i1648_);
  float m_load6768_offset_offset_load_2e_i1650_;
  __vec64_f m_load6768_offset_offset_load_2e_i1650_smear_;
  __vec64_f (*element71_2e_i1653_);
  float m_load7273_offset_offset_load_2e_i1655_;
  __vec64_f m_load7273_offset_offset_load_2e_i1655_smear_;
  __vec64_f (*element76_2e_i1658_);
  float m_load7778_offset_offset_load_2e_i1660_;
  __vec64_f m_load7778_offset_offset_load_2e_i1660_smear_;
  __vec64_f ptr6260_masked_load_;
  __vec64_f ptr6281_masked_load_;
  __vec64_f ptr6303_masked_load_;
  __vec64_f ptr6325_masked_load_;
  __vec64_f ptr6347_masked_load_;
  __vec64_f ptr6369_masked_load_;
  __vec64_f ptr6391_masked_load_;
  __vec64_f ptr6413_masked_load_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i1691_;
  __vec64_f ptr6434_masked_load_;
  __vec64_f ptr6478_masked_load_;
  __vec64_f ptr6522_masked_load_;
  __vec64_f ptr6566_masked_load_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i1717_;
  __vec64_f ptr6609_masked_load_;
  __vec64_f ptr6653_masked_load_;
  __vec64_f ptr6697_masked_load_;
  __vec64_f ptr6741_masked_load_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i1743_;
  __vec64_f ptr6784_masked_load_;
  __vec64_f ptr6828_masked_load_;
  __vec64_f ptr6872_masked_load_;
  __vec64_f ptr6916_masked_load_;
  __vec64_f add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i1769_;
  l_v64_varying_float4 oldret_;
  l_v64_varying_float4 oldret754_;
  l_v64_varying_float4 oldret756_;
  l_v64_varying_float4 oldret758_;
  uint8_t *output_load251_ptr2int_2void_;
  l_v64_varying_float3 v157271_Color_;
  __vec64_f v157271_Color_extract_0_;
  __vec64_f v157271_Color_extract_1_;
  __vec64_f v157271_Color_extract_2_;
  __vec64_f v157271_Color_extract_3_;

  aligned_end_ = ((uint32_t )(((uint32_t )count_) - ((uint32_t )(((int32_t )(((int32_t )count_) % ((int32_t )64u)))))));
  if ((((int32_t )aligned_end_) > ((int32_t )0u))) {
    goto foreach_full_body_2e_lr_2e_ph_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = 0u;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

foreach_full_body_2e_lr_2e_ph_label: {
  input_load_ptr2int_2void_ = ((uint8_t *)input_);
  v8384_ = (&v_.field0.field0);
  v8788_ = (&v_.field0.field1);
  v9192_ = (&v_.field0.field2);
  m_load3_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )0ull)].array[((int64_t )0ull)]);
  m_load78_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )1ull)].array[((int64_t )0ull)]);
  m_load1213_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )2ull)].array[((int64_t )0ull)]);
  m_load1718_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )3ull)].array[((int64_t )0ull)]);
  m_load2223_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )0ull)].array[((int64_t )1ull)]);
  m_load2728_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )1ull)].array[((int64_t )1ull)]);
  m_load3233_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )2ull)].array[((int64_t )1ull)]);
  m_load3738_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )3ull)].array[((int64_t )1ull)]);
  m_load4243_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )0ull)].array[((int64_t )2ull)]);
  m_load4748_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )1ull)].array[((int64_t )2ull)]);
  m_load5253_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )2ull)].array[((int64_t )2ull)]);
  m_load5758_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )3ull)].array[((int64_t )2ull)]);
  m_load6263_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )0ull)].array[((int64_t )3ull)]);
  m_load6768_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )1ull)].array[((int64_t )3ull)]);
  m_load7273_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )2ull)].array[((int64_t )3ull)]);
  m_load7778_offset_offset_2e_i_ = (&constants_->field0.field0.array[((int64_t )3ull)].array[((int64_t )3ull)]);
  m_load3_offset_offset_2e_i804_ = (&constants_->field1.field0.array[((int64_t )0ull)].array[((int64_t )0ull)]);
  m_load78_offset_offset_2e_i809_ = (&constants_->field1.field0.array[((int64_t )1ull)].array[((int64_t )0ull)]);
  m_load1213_offset_offset_2e_i814_ = (&constants_->field1.field0.array[((int64_t )2ull)].array[((int64_t )0ull)]);
  m_load1718_offset_offset_2e_i819_ = (&constants_->field1.field0.array[((int64_t )3ull)].array[((int64_t )0ull)]);
  m_load2223_offset_offset_2e_i824_ = (&constants_->field1.field0.array[((int64_t )0ull)].array[((int64_t )1ull)]);
  m_load2728_offset_offset_2e_i829_ = (&constants_->field1.field0.array[((int64_t )1ull)].array[((int64_t )1ull)]);
  m_load3233_offset_offset_2e_i834_ = (&constants_->field1.field0.array[((int64_t )2ull)].array[((int64_t )1ull)]);
  m_load3738_offset_offset_2e_i839_ = (&constants_->field1.field0.array[((int64_t )3ull)].array[((int64_t )1ull)]);
  m_load4243_offset_offset_2e_i844_ = (&constants_->field1.field0.array[((int64_t )0ull)].array[((int64_t )2ull)]);
  m_load4748_offset_offset_2e_i849_ = (&constants_->field1.field0.array[((int64_t )1ull)].array[((int64_t )2ull)]);
  m_load5253_offset_offset_2e_i854_ = (&constants_->field1.field0.array[((int64_t )2ull)].array[((int64_t )2ull)]);
  m_load5758_offset_offset_2e_i859_ = (&constants_->field1.field0.array[((int64_t )3ull)].array[((int64_t )2ull)]);
  m_load6263_offset_offset_2e_i864_ = (&constants_->field1.field0.array[((int64_t )0ull)].array[((int64_t )3ull)]);
  m_load6768_offset_offset_2e_i869_ = (&constants_->field1.field0.array[((int64_t )1ull)].array[((int64_t )3ull)]);
  m_load7273_offset_offset_2e_i874_ = (&constants_->field1.field0.array[((int64_t )2ull)].array[((int64_t )3ull)]);
  m_load7778_offset_offset_2e_i879_ = (&constants_->field1.field0.array[((int64_t )3ull)].array[((int64_t )3ull)]);
  m_load3_offset_offset_2e_i999_ = (&constants_->field2.field0.array[((int64_t )0ull)].array[((int64_t )0ull)]);
  m_load78_offset_offset_2e_i1004_ = (&constants_->field2.field0.array[((int64_t )1ull)].array[((int64_t )0ull)]);
  m_load1213_offset_offset_2e_i1009_ = (&constants_->field2.field0.array[((int64_t )2ull)].array[((int64_t )0ull)]);
  m_load1718_offset_offset_2e_i1014_ = (&constants_->field2.field0.array[((int64_t )3ull)].array[((int64_t )0ull)]);
  m_load2223_offset_offset_2e_i1019_ = (&constants_->field2.field0.array[((int64_t )0ull)].array[((int64_t )1ull)]);
  m_load2728_offset_offset_2e_i1024_ = (&constants_->field2.field0.array[((int64_t )1ull)].array[((int64_t )1ull)]);
  m_load3233_offset_offset_2e_i1029_ = (&constants_->field2.field0.array[((int64_t )2ull)].array[((int64_t )1ull)]);
  m_load3738_offset_offset_2e_i1034_ = (&constants_->field2.field0.array[((int64_t )3ull)].array[((int64_t )1ull)]);
  m_load4243_offset_offset_2e_i1039_ = (&constants_->field2.field0.array[((int64_t )0ull)].array[((int64_t )2ull)]);
  m_load4748_offset_offset_2e_i1044_ = (&constants_->field2.field0.array[((int64_t )1ull)].array[((int64_t )2ull)]);
  m_load5253_offset_offset_2e_i1049_ = (&constants_->field2.field0.array[((int64_t )2ull)].array[((int64_t )2ull)]);
  m_load5758_offset_offset_2e_i1054_ = (&constants_->field2.field0.array[((int64_t )3ull)].array[((int64_t )2ull)]);
  m_load6263_offset_offset_2e_i1059_ = (&constants_->field2.field0.array[((int64_t )0ull)].array[((int64_t )3ull)]);
  m_load6768_offset_offset_2e_i1064_ = (&constants_->field2.field0.array[((int64_t )1ull)].array[((int64_t )3ull)]);
  m_load7273_offset_offset_2e_i1069_ = (&constants_->field2.field0.array[((int64_t )2ull)].array[((int64_t )3ull)]);
  m_load7778_offset_offset_2e_i1074_ = (&constants_->field2.field0.array[((int64_t )3ull)].array[((int64_t )3ull)]);
  output_load_ptr2int_2void_ = ((uint8_t *)output_);
  v127_ = (&v_.field1);
  counter_2e_16999___PHI = 0u;   /* for PHI node */
  goto foreach_full_body_label;

}
  do {     /* Syntactic loop 'foreach_full_body' to make GCC happy */
foreach_full_body_label: {
  counter_2e_16999_ = counter_2e_16999___PHI;
  counter_2e_16999_smear_ = __smear_i32<__vec64_i32>(counter_2e_16999_);
  mul__index_load24_ = __shl((__add(counter_2e_16999_smear_, __load<64>((const __vec64_i32  *)(VectorConstant3)))), 5u);
  input_load_offset_load296_ = __gather_base_offsets32_float(input_load_ptr2int_2void_, 1u, mul__index_load24_, __smear_i1<__vec64_i1>(1));
  set_value_ = l_v64_varying_float3 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>());
  set_value_.field0 = input_load_offset_load296_;
  new_add_ = __add(mul__index_load24_, __smear_i32<__vec64_i32>(4u));
  input_load_offset_load39301_ = __gather_base_offsets32_float(input_load_ptr2int_2void_, 1u, new_add_, __smear_i1<__vec64_i1>(1));
  set_value40_ = set_value_;
  set_value40_.field1 = input_load_offset_load39301_;
  new_add308_ = __add(mul__index_load24_, __smear_i32<__vec64_i32>(8u));
  input_load_offset_load45309_ = __gather_base_offsets32_float(input_load_ptr2int_2void_, 1u, new_add308_, __smear_i1<__vec64_i1>(1));
  set_value46_ = set_value40_;
  set_value46_.field2 = input_load_offset_load45309_;
  new_add317_ = __add(mul__index_load24_, __smear_i32<__vec64_i32>(12u));
  input_load_offset_load51318_ = __gather_base_offsets32_float(input_load_ptr2int_2void_, 1u, new_add317_, __smear_i1<__vec64_i1>(1));
  set_value52_ = set_value46_;
  set_value52_.field3 = input_load_offset_load51318_;
  set_value53_ = l_v64_varying_VertexInput ::init( l_v64_varying_float3 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>()), l_v64_varying_float3 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>()));
  set_value53_.field0 = set_value52_;
  new_add327_ = __add(mul__index_load24_, __smear_i32<__vec64_i32>(16u));
  input_load_offset_load62328_ = __gather_base_offsets32_float(input_load_ptr2int_2void_, 1u, new_add327_, __smear_i1<__vec64_i1>(1));
  set_value63_ = l_v64_varying_float3 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>());
  set_value63_.field0 = input_load_offset_load62328_;
  new_add338_ = __add(mul__index_load24_, __smear_i32<__vec64_i32>(20u));
  input_load_offset_load68339_ = __gather_base_offsets32_float(input_load_ptr2int_2void_, 1u, new_add338_, __smear_i1<__vec64_i1>(1));
  set_value69_ = set_value63_;
  set_value69_.field1 = input_load_offset_load68339_;
  new_add350_ = __add(mul__index_load24_, __smear_i32<__vec64_i32>(24u));
  input_load_offset_load74351_ = __gather_base_offsets32_float(input_load_ptr2int_2void_, 1u, new_add350_, __smear_i1<__vec64_i1>(1));
  set_value75_ = set_value69_;
  set_value75_.field2 = input_load_offset_load74351_;
  new_add363_ = __add(mul__index_load24_, __smear_i32<__vec64_i32>(28u));
  input_load_offset_load80364_ = __gather_base_offsets32_float(input_load_ptr2int_2void_, 1u, new_add363_, __smear_i1<__vec64_i1>(1));
  set_value81_ = set_value75_;
  set_value81_.field3 = input_load_offset_load80364_;
  set_value82_ = set_value53_;
  set_value82_.field1 = set_value81_;
  *(&v_) = set_value82_;
  v8384_x_ = __load<256>(v8384_);
  v8788_y_ = __load<256>(v8788_);
  v9192_z_ = __load<256>(v9192_);
  m_load3_offset_offset_load_2e_i_ = *m_load3_offset_offset_2e_i_;
  m_load3_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load3_offset_offset_load_2e_i_);
  m_load78_offset_offset_load_2e_i_ = *m_load78_offset_offset_2e_i_;
  m_load78_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load78_offset_offset_load_2e_i_);
  m_load1213_offset_offset_load_2e_i_ = *m_load1213_offset_offset_2e_i_;
  m_load1213_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load1213_offset_offset_load_2e_i_);
  m_load1718_offset_offset_load_2e_i_ = *m_load1718_offset_offset_2e_i_;
  m_load1718_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load1718_offset_offset_load_2e_i_);
  m_load2223_offset_offset_load_2e_i_ = *m_load2223_offset_offset_2e_i_;
  m_load2223_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load2223_offset_offset_load_2e_i_);
  m_load2728_offset_offset_load_2e_i_ = *m_load2728_offset_offset_2e_i_;
  m_load2728_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load2728_offset_offset_load_2e_i_);
  m_load3233_offset_offset_load_2e_i_ = *m_load3233_offset_offset_2e_i_;
  m_load3233_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load3233_offset_offset_load_2e_i_);
  m_load3738_offset_offset_load_2e_i_ = *m_load3738_offset_offset_2e_i_;
  m_load3738_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load3738_offset_offset_load_2e_i_);
  m_load4243_offset_offset_load_2e_i_ = *m_load4243_offset_offset_2e_i_;
  m_load4243_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load4243_offset_offset_load_2e_i_);
  m_load4748_offset_offset_load_2e_i_ = *m_load4748_offset_offset_2e_i_;
  m_load4748_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load4748_offset_offset_load_2e_i_);
  m_load5253_offset_offset_load_2e_i_ = *m_load5253_offset_offset_2e_i_;
  m_load5253_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load5253_offset_offset_load_2e_i_);
  m_load5758_offset_offset_load_2e_i_ = *m_load5758_offset_offset_2e_i_;
  m_load5758_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load5758_offset_offset_load_2e_i_);
  m_load6263_offset_offset_load_2e_i_ = *m_load6263_offset_offset_2e_i_;
  m_load6263_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load6263_offset_offset_load_2e_i_);
  m_load6768_offset_offset_load_2e_i_ = *m_load6768_offset_offset_2e_i_;
  m_load6768_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load6768_offset_offset_load_2e_i_);
  m_load7273_offset_offset_load_2e_i_ = *m_load7273_offset_offset_2e_i_;
  m_load7273_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load7273_offset_offset_load_2e_i_);
  m_load7778_offset_offset_load_2e_i_ = *m_load7778_offset_offset_2e_i_;
  m_load7778_offset_offset_load_2e_i_smear_ = __smear_float<__vec64_f>(m_load7778_offset_offset_load_2e_i_);
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i_ = __add(m_load1718_offset_offset_load_2e_i_smear_, (__add((__add((__mul(v8384_x_, m_load3_offset_offset_load_2e_i_smear_)), (__mul(v8788_y_, m_load78_offset_offset_load_2e_i_smear_)))), (__mul(v9192_z_, m_load1213_offset_offset_load_2e_i_smear_)))));
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i_ = __add(m_load3738_offset_offset_load_2e_i_smear_, (__add((__add((__mul(v8384_x_, m_load2223_offset_offset_load_2e_i_smear_)), (__mul(v8788_y_, m_load2728_offset_offset_load_2e_i_smear_)))), (__mul(v9192_z_, m_load3233_offset_offset_load_2e_i_smear_)))));
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i_ = __add(m_load5758_offset_offset_load_2e_i_smear_, (__add((__add((__mul(v8384_x_, m_load4243_offset_offset_load_2e_i_smear_)), (__mul(v8788_y_, m_load4748_offset_offset_load_2e_i_smear_)))), (__mul(v9192_z_, m_load5253_offset_offset_load_2e_i_smear_)))));
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i_ = __add(m_load7778_offset_offset_load_2e_i_smear_, (__add((__add((__mul(v8384_x_, m_load6263_offset_offset_load_2e_i_smear_)), (__mul(v8788_y_, m_load6768_offset_offset_load_2e_i_smear_)))), (__mul(v9192_z_, m_load7273_offset_offset_load_2e_i_smear_)))));
  m_load3_offset_offset_load_2e_i805_ = *m_load3_offset_offset_2e_i804_;
  m_load3_offset_offset_load_2e_i805_smear_ = __smear_float<__vec64_f>(m_load3_offset_offset_load_2e_i805_);
  m_load78_offset_offset_load_2e_i810_ = *m_load78_offset_offset_2e_i809_;
  m_load78_offset_offset_load_2e_i810_smear_ = __smear_float<__vec64_f>(m_load78_offset_offset_load_2e_i810_);
  m_load1213_offset_offset_load_2e_i815_ = *m_load1213_offset_offset_2e_i814_;
  m_load1213_offset_offset_load_2e_i815_smear_ = __smear_float<__vec64_f>(m_load1213_offset_offset_load_2e_i815_);
  m_load1718_offset_offset_load_2e_i820_ = *m_load1718_offset_offset_2e_i819_;
  m_load1718_offset_offset_load_2e_i820_smear_ = __smear_float<__vec64_f>(m_load1718_offset_offset_load_2e_i820_);
  m_load2223_offset_offset_load_2e_i825_ = *m_load2223_offset_offset_2e_i824_;
  m_load2223_offset_offset_load_2e_i825_smear_ = __smear_float<__vec64_f>(m_load2223_offset_offset_load_2e_i825_);
  m_load2728_offset_offset_load_2e_i830_ = *m_load2728_offset_offset_2e_i829_;
  m_load2728_offset_offset_load_2e_i830_smear_ = __smear_float<__vec64_f>(m_load2728_offset_offset_load_2e_i830_);
  m_load3233_offset_offset_load_2e_i835_ = *m_load3233_offset_offset_2e_i834_;
  m_load3233_offset_offset_load_2e_i835_smear_ = __smear_float<__vec64_f>(m_load3233_offset_offset_load_2e_i835_);
  m_load3738_offset_offset_load_2e_i840_ = *m_load3738_offset_offset_2e_i839_;
  m_load3738_offset_offset_load_2e_i840_smear_ = __smear_float<__vec64_f>(m_load3738_offset_offset_load_2e_i840_);
  m_load4243_offset_offset_load_2e_i845_ = *m_load4243_offset_offset_2e_i844_;
  m_load4243_offset_offset_load_2e_i845_smear_ = __smear_float<__vec64_f>(m_load4243_offset_offset_load_2e_i845_);
  m_load4748_offset_offset_load_2e_i850_ = *m_load4748_offset_offset_2e_i849_;
  m_load4748_offset_offset_load_2e_i850_smear_ = __smear_float<__vec64_f>(m_load4748_offset_offset_load_2e_i850_);
  m_load5253_offset_offset_load_2e_i855_ = *m_load5253_offset_offset_2e_i854_;
  m_load5253_offset_offset_load_2e_i855_smear_ = __smear_float<__vec64_f>(m_load5253_offset_offset_load_2e_i855_);
  m_load5758_offset_offset_load_2e_i860_ = *m_load5758_offset_offset_2e_i859_;
  m_load5758_offset_offset_load_2e_i860_smear_ = __smear_float<__vec64_f>(m_load5758_offset_offset_load_2e_i860_);
  m_load6263_offset_offset_load_2e_i865_ = *m_load6263_offset_offset_2e_i864_;
  m_load6263_offset_offset_load_2e_i865_smear_ = __smear_float<__vec64_f>(m_load6263_offset_offset_load_2e_i865_);
  m_load6768_offset_offset_load_2e_i870_ = *m_load6768_offset_offset_2e_i869_;
  m_load6768_offset_offset_load_2e_i870_smear_ = __smear_float<__vec64_f>(m_load6768_offset_offset_load_2e_i870_);
  m_load7273_offset_offset_load_2e_i875_ = *m_load7273_offset_offset_2e_i874_;
  m_load7273_offset_offset_load_2e_i875_smear_ = __smear_float<__vec64_f>(m_load7273_offset_offset_load_2e_i875_);
  m_load7778_offset_offset_load_2e_i880_ = *m_load7778_offset_offset_2e_i879_;
  m_load7778_offset_offset_load_2e_i880_smear_ = __smear_float<__vec64_f>(m_load7778_offset_offset_load_2e_i880_);
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i911_ = __add((__add((__add((__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i_, m_load3_offset_offset_load_2e_i805_smear_)), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i_, m_load78_offset_offset_load_2e_i810_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i_, m_load1213_offset_offset_load_2e_i815_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i_, m_load1718_offset_offset_load_2e_i820_smear_)));
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i937_ = __add((__add((__add((__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i_, m_load2223_offset_offset_load_2e_i825_smear_)), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i_, m_load2728_offset_offset_load_2e_i830_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i_, m_load3233_offset_offset_load_2e_i835_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i_, m_load3738_offset_offset_load_2e_i840_smear_)));
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i963_ = __add((__add((__add((__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i_, m_load4243_offset_offset_load_2e_i845_smear_)), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i_, m_load4748_offset_offset_load_2e_i850_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i_, m_load5253_offset_offset_load_2e_i855_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i_, m_load5758_offset_offset_load_2e_i860_smear_)));
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i989_ = __add((__add((__add((__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i_, m_load6263_offset_offset_load_2e_i865_smear_)), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i_, m_load6768_offset_offset_load_2e_i870_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i_, m_load7273_offset_offset_load_2e_i875_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i_, m_load7778_offset_offset_load_2e_i880_smear_)));
  m_load3_offset_offset_load_2e_i1000_ = *m_load3_offset_offset_2e_i999_;
  m_load3_offset_offset_load_2e_i1000_smear_ = __smear_float<__vec64_f>(m_load3_offset_offset_load_2e_i1000_);
  m_load78_offset_offset_load_2e_i1005_ = *m_load78_offset_offset_2e_i1004_;
  m_load78_offset_offset_load_2e_i1005_smear_ = __smear_float<__vec64_f>(m_load78_offset_offset_load_2e_i1005_);
  m_load1213_offset_offset_load_2e_i1010_ = *m_load1213_offset_offset_2e_i1009_;
  m_load1213_offset_offset_load_2e_i1010_smear_ = __smear_float<__vec64_f>(m_load1213_offset_offset_load_2e_i1010_);
  m_load1718_offset_offset_load_2e_i1015_ = *m_load1718_offset_offset_2e_i1014_;
  m_load1718_offset_offset_load_2e_i1015_smear_ = __smear_float<__vec64_f>(m_load1718_offset_offset_load_2e_i1015_);
  m_load2223_offset_offset_load_2e_i1020_ = *m_load2223_offset_offset_2e_i1019_;
  m_load2223_offset_offset_load_2e_i1020_smear_ = __smear_float<__vec64_f>(m_load2223_offset_offset_load_2e_i1020_);
  m_load2728_offset_offset_load_2e_i1025_ = *m_load2728_offset_offset_2e_i1024_;
  m_load2728_offset_offset_load_2e_i1025_smear_ = __smear_float<__vec64_f>(m_load2728_offset_offset_load_2e_i1025_);
  m_load3233_offset_offset_load_2e_i1030_ = *m_load3233_offset_offset_2e_i1029_;
  m_load3233_offset_offset_load_2e_i1030_smear_ = __smear_float<__vec64_f>(m_load3233_offset_offset_load_2e_i1030_);
  m_load3738_offset_offset_load_2e_i1035_ = *m_load3738_offset_offset_2e_i1034_;
  m_load3738_offset_offset_load_2e_i1035_smear_ = __smear_float<__vec64_f>(m_load3738_offset_offset_load_2e_i1035_);
  m_load4243_offset_offset_load_2e_i1040_ = *m_load4243_offset_offset_2e_i1039_;
  m_load4243_offset_offset_load_2e_i1040_smear_ = __smear_float<__vec64_f>(m_load4243_offset_offset_load_2e_i1040_);
  m_load4748_offset_offset_load_2e_i1045_ = *m_load4748_offset_offset_2e_i1044_;
  m_load4748_offset_offset_load_2e_i1045_smear_ = __smear_float<__vec64_f>(m_load4748_offset_offset_load_2e_i1045_);
  m_load5253_offset_offset_load_2e_i1050_ = *m_load5253_offset_offset_2e_i1049_;
  m_load5253_offset_offset_load_2e_i1050_smear_ = __smear_float<__vec64_f>(m_load5253_offset_offset_load_2e_i1050_);
  m_load5758_offset_offset_load_2e_i1055_ = *m_load5758_offset_offset_2e_i1054_;
  m_load5758_offset_offset_load_2e_i1055_smear_ = __smear_float<__vec64_f>(m_load5758_offset_offset_load_2e_i1055_);
  m_load6263_offset_offset_load_2e_i1060_ = *m_load6263_offset_offset_2e_i1059_;
  m_load6263_offset_offset_load_2e_i1060_smear_ = __smear_float<__vec64_f>(m_load6263_offset_offset_load_2e_i1060_);
  m_load6768_offset_offset_load_2e_i1065_ = *m_load6768_offset_offset_2e_i1064_;
  m_load6768_offset_offset_load_2e_i1065_smear_ = __smear_float<__vec64_f>(m_load6768_offset_offset_load_2e_i1065_);
  m_load7273_offset_offset_load_2e_i1070_ = *m_load7273_offset_offset_2e_i1069_;
  m_load7273_offset_offset_load_2e_i1070_smear_ = __smear_float<__vec64_f>(m_load7273_offset_offset_load_2e_i1070_);
  m_load7778_offset_offset_load_2e_i1075_ = *m_load7778_offset_offset_2e_i1074_;
  m_load7778_offset_offset_load_2e_i1075_smear_ = __smear_float<__vec64_f>(m_load7778_offset_offset_load_2e_i1075_);
  __scatter_base_offsets32_float(output_load_ptr2int_2void_, 1u, mul__index_load24_, (__add((__add((__add((__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i911_, m_load3_offset_offset_load_2e_i1000_smear_)), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i937_, m_load78_offset_offset_load_2e_i1005_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i963_, m_load1213_offset_offset_load_2e_i1010_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i989_, m_load1718_offset_offset_load_2e_i1015_smear_)))), __smear_i1<__vec64_i1>(1));
  __scatter_base_offsets32_float(output_load_ptr2int_2void_, 1u, new_add_, (__add((__add((__add((__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i911_, m_load2223_offset_offset_load_2e_i1020_smear_)), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i937_, m_load2728_offset_offset_load_2e_i1025_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i963_, m_load3233_offset_offset_load_2e_i1030_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i989_, m_load3738_offset_offset_load_2e_i1035_smear_)))), __smear_i1<__vec64_i1>(1));
  __scatter_base_offsets32_float(output_load_ptr2int_2void_, 1u, new_add308_, (__add((__add((__add((__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i911_, m_load4243_offset_offset_load_2e_i1040_smear_)), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i937_, m_load4748_offset_offset_load_2e_i1045_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i963_, m_load5253_offset_offset_load_2e_i1050_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i989_, m_load5758_offset_offset_load_2e_i1055_smear_)))), __smear_i1<__vec64_i1>(1));
  __scatter_base_offsets32_float(output_load_ptr2int_2void_, 1u, new_add317_, (__add((__add((__add((__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i911_, m_load6263_offset_offset_load_2e_i1060_smear_)), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i937_, m_load6768_offset_offset_load_2e_i1065_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i963_, m_load7273_offset_offset_load_2e_i1070_smear_)))), (__mul(add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i989_, m_load7778_offset_offset_load_2e_i1075_smear_)))), __smear_i1<__vec64_i1>(1));
  v127_Color_ = *v127_;
  v127_Color_extract_0_ = (v127_Color_.field0);
  __scatter_base_offsets32_float(output_load_ptr2int_2void_, 1u, new_add327_, v127_Color_extract_0_, __smear_i1<__vec64_i1>(1));
  v127_Color_extract_1_ = (v127_Color_.field1);
  __scatter_base_offsets32_float(output_load_ptr2int_2void_, 1u, new_add338_, v127_Color_extract_1_, __smear_i1<__vec64_i1>(1));
  v127_Color_extract_2_ = (v127_Color_.field2);
  __scatter_base_offsets32_float(output_load_ptr2int_2void_, 1u, new_add350_, v127_Color_extract_2_, __smear_i1<__vec64_i1>(1));
  v127_Color_extract_3_ = (v127_Color_.field3);
  __scatter_base_offsets32_float(output_load_ptr2int_2void_, 1u, new_add363_, v127_Color_extract_3_, __smear_i1<__vec64_i1>(1));
  new_counter_ = ((uint32_t )(((uint32_t )counter_2e_16999_) + ((uint32_t )64u)));
  if ((((int32_t )new_counter_) < ((int32_t )aligned_end_))) {
    counter_2e_16999___PHI = new_counter_;   /* for PHI node */
    goto foreach_full_body_label;
  } else {
    counter_2e_1_2e_lcssa___PHI = new_counter_;   /* for PHI node */
    goto partial_inner_all_outer_label;
  }

}
  } while (1); /* end of syntactic loop 'foreach_full_body' */
foreach_reset_label: {
  return;
}
partial_inner_all_outer_label: {
  counter_2e_1_2e_lcssa_ = counter_2e_1_2e_lcssa___PHI;
  if ((((int32_t )counter_2e_1_2e_lcssa_) < ((int32_t )count_))) {
    goto partial_inner_only_label;
  } else {
    goto foreach_reset_label;
  }

}
partial_inner_only_label: {
  counter_2e_1_2e_lcssa_smear_ = __smear_i32<__vec64_i32>(counter_2e_1_2e_lcssa_);
  iter_val149_ = __add(counter_2e_1_2e_lcssa_smear_, __load<64>((const __vec64_i32  *)(VectorConstant3)));
  count_smear_ = __smear_i32<__vec64_i32>(count_);
  cmp152_ = __signed_less_than_i32(iter_val149_, count_smear_);
  mul__index_load158_ = __shl(iter_val149_, 5u);
  input_load159_ptr2int_2void_ = ((uint8_t *)input_);
  input_load159_offset_load510_ = __gather_base_offsets32_float(input_load159_ptr2int_2void_, 1u, mul__index_load158_, cmp152_);
  set_value172_ = l_v64_varying_float3 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>());
  set_value172_.field0 = input_load159_offset_load510_;
  new_add515_ = __add(mul__index_load158_, __smear_i32<__vec64_i32>(4u));
  input_load159_offset_load177516_ = __gather_base_offsets32_float(input_load159_ptr2int_2void_, 1u, new_add515_, cmp152_);
  set_value178_ = set_value172_;
  set_value178_.field1 = input_load159_offset_load177516_;
  new_add523_ = __add(mul__index_load158_, __smear_i32<__vec64_i32>(8u));
  input_load159_offset_load183524_ = __gather_base_offsets32_float(input_load159_ptr2int_2void_, 1u, new_add523_, cmp152_);
  set_value184_ = set_value178_;
  set_value184_.field2 = input_load159_offset_load183524_;
  new_add532_ = __add(mul__index_load158_, __smear_i32<__vec64_i32>(12u));
  input_load159_offset_load189533_ = __gather_base_offsets32_float(input_load159_ptr2int_2void_, 1u, new_add532_, cmp152_);
  set_value190_ = set_value184_;
  set_value190_.field3 = input_load159_offset_load189533_;
  set_value191_ = l_v64_varying_VertexInput ::init( l_v64_varying_float3 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>()), l_v64_varying_float3 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>()));
  set_value191_.field0 = set_value190_;
  new_add542_ = __add(mul__index_load158_, __smear_i32<__vec64_i32>(16u));
  input_load159_offset_load200543_ = __gather_base_offsets32_float(input_load159_ptr2int_2void_, 1u, new_add542_, cmp152_);
  set_value201_ = l_v64_varying_float3 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>());
  set_value201_.field0 = input_load159_offset_load200543_;
  new_add553_ = __add(mul__index_load158_, __smear_i32<__vec64_i32>(20u));
  input_load159_offset_load206554_ = __gather_base_offsets32_float(input_load159_ptr2int_2void_, 1u, new_add553_, cmp152_);
  set_value207_ = set_value201_;
  set_value207_.field1 = input_load159_offset_load206554_;
  new_add565_ = __add(mul__index_load158_, __smear_i32<__vec64_i32>(24u));
  input_load159_offset_load212566_ = __gather_base_offsets32_float(input_load159_ptr2int_2void_, 1u, new_add565_, cmp152_);
  set_value213_ = set_value207_;
  set_value213_.field2 = input_load159_offset_load212566_;
  new_add578_ = __add(mul__index_load158_, __smear_i32<__vec64_i32>(28u));
  input_load159_offset_load218579_ = __gather_base_offsets32_float(input_load159_ptr2int_2void_, 1u, new_add578_, cmp152_);
  set_value219_ = set_value213_;
  set_value219_.field3 = input_load159_offset_load218579_;
  set_value220_ = set_value191_;
  set_value220_.field1 = set_value219_;
  *(&v157_) = set_value220_;
  v157223224_x_ = __load<256>(((&v157_.field0.field0)));
  __store<256>(((&wpos221_.field0)), v157223224_x_);
  element226_ = (&wpos221_.field1);
  v157227228_y_ = __load<256>(((&v157_.field0.field1)));
  __store<256>(element226_, v157227228_y_);
  element230_ = (&wpos221_.field2);
  v157231232_z_ = __load<256>(((&v157_.field0.field2)));
  __store<256>(element230_, v157231232_z_);
  element234_ = (&wpos221_.field3);
  __store<256>(element234_, __smear_float<__vec64_f>(1.000000e+00));
  m_load3_offset_offset_load_2e_i1195_ = *((&constants_->field0.field0.array[((int64_t )0ull)].array[((int64_t )0ull)]));
  m_load3_offset_offset_load_2e_i1195_smear_ = __smear_float<__vec64_f>(m_load3_offset_offset_load_2e_i1195_);
  __store<256>(((&row0_2e_i1189_.field0)), m_load3_offset_offset_load_2e_i1195_smear_);
  element6_2e_i1198_ = (&row0_2e_i1189_.field1);
  m_load78_offset_offset_load_2e_i1200_ = *((&constants_->field0.field0.array[((int64_t )1ull)].array[((int64_t )0ull)]));
  m_load78_offset_offset_load_2e_i1200_smear_ = __smear_float<__vec64_f>(m_load78_offset_offset_load_2e_i1200_);
  __store<256>(element6_2e_i1198_, m_load78_offset_offset_load_2e_i1200_smear_);
  element11_2e_i1203_ = (&row0_2e_i1189_.field2);
  m_load1213_offset_offset_load_2e_i1205_ = *((&constants_->field0.field0.array[((int64_t )2ull)].array[((int64_t )0ull)]));
  m_load1213_offset_offset_load_2e_i1205_smear_ = __smear_float<__vec64_f>(m_load1213_offset_offset_load_2e_i1205_);
  __store<256>(element11_2e_i1203_, m_load1213_offset_offset_load_2e_i1205_smear_);
  element16_2e_i1208_ = (&row0_2e_i1189_.field3);
  m_load1718_offset_offset_load_2e_i1210_ = *((&constants_->field0.field0.array[((int64_t )3ull)].array[((int64_t )0ull)]));
  m_load1718_offset_offset_load_2e_i1210_smear_ = __smear_float<__vec64_f>(m_load1718_offset_offset_load_2e_i1210_);
  __store<256>(element16_2e_i1208_, m_load1718_offset_offset_load_2e_i1210_smear_);
  m_load2223_offset_offset_load_2e_i1215_ = *((&constants_->field0.field0.array[((int64_t )0ull)].array[((int64_t )1ull)]));
  m_load2223_offset_offset_load_2e_i1215_smear_ = __smear_float<__vec64_f>(m_load2223_offset_offset_load_2e_i1215_);
  __store<256>(((&row1_2e_i1190_.field0)), m_load2223_offset_offset_load_2e_i1215_smear_);
  element26_2e_i1218_ = (&row1_2e_i1190_.field1);
  m_load2728_offset_offset_load_2e_i1220_ = *((&constants_->field0.field0.array[((int64_t )1ull)].array[((int64_t )1ull)]));
  m_load2728_offset_offset_load_2e_i1220_smear_ = __smear_float<__vec64_f>(m_load2728_offset_offset_load_2e_i1220_);
  __store<256>(element26_2e_i1218_, m_load2728_offset_offset_load_2e_i1220_smear_);
  element31_2e_i1223_ = (&row1_2e_i1190_.field2);
  m_load3233_offset_offset_load_2e_i1225_ = *((&constants_->field0.field0.array[((int64_t )2ull)].array[((int64_t )1ull)]));
  m_load3233_offset_offset_load_2e_i1225_smear_ = __smear_float<__vec64_f>(m_load3233_offset_offset_load_2e_i1225_);
  __store<256>(element31_2e_i1223_, m_load3233_offset_offset_load_2e_i1225_smear_);
  element36_2e_i1228_ = (&row1_2e_i1190_.field3);
  m_load3738_offset_offset_load_2e_i1230_ = *((&constants_->field0.field0.array[((int64_t )3ull)].array[((int64_t )1ull)]));
  m_load3738_offset_offset_load_2e_i1230_smear_ = __smear_float<__vec64_f>(m_load3738_offset_offset_load_2e_i1230_);
  __store<256>(element36_2e_i1228_, m_load3738_offset_offset_load_2e_i1230_smear_);
  m_load4243_offset_offset_load_2e_i1235_ = *((&constants_->field0.field0.array[((int64_t )0ull)].array[((int64_t )2ull)]));
  m_load4243_offset_offset_load_2e_i1235_smear_ = __smear_float<__vec64_f>(m_load4243_offset_offset_load_2e_i1235_);
  __store<256>(((&row2_2e_i1191_.field0)), m_load4243_offset_offset_load_2e_i1235_smear_);
  element46_2e_i1238_ = (&row2_2e_i1191_.field1);
  m_load4748_offset_offset_load_2e_i1240_ = *((&constants_->field0.field0.array[((int64_t )1ull)].array[((int64_t )2ull)]));
  m_load4748_offset_offset_load_2e_i1240_smear_ = __smear_float<__vec64_f>(m_load4748_offset_offset_load_2e_i1240_);
  __store<256>(element46_2e_i1238_, m_load4748_offset_offset_load_2e_i1240_smear_);
  element51_2e_i1243_ = (&row2_2e_i1191_.field2);
  m_load5253_offset_offset_load_2e_i1245_ = *((&constants_->field0.field0.array[((int64_t )2ull)].array[((int64_t )2ull)]));
  m_load5253_offset_offset_load_2e_i1245_smear_ = __smear_float<__vec64_f>(m_load5253_offset_offset_load_2e_i1245_);
  __store<256>(element51_2e_i1243_, m_load5253_offset_offset_load_2e_i1245_smear_);
  element56_2e_i1248_ = (&row2_2e_i1191_.field3);
  m_load5758_offset_offset_load_2e_i1250_ = *((&constants_->field0.field0.array[((int64_t )3ull)].array[((int64_t )2ull)]));
  m_load5758_offset_offset_load_2e_i1250_smear_ = __smear_float<__vec64_f>(m_load5758_offset_offset_load_2e_i1250_);
  __store<256>(element56_2e_i1248_, m_load5758_offset_offset_load_2e_i1250_smear_);
  m_load6263_offset_offset_load_2e_i1255_ = *((&constants_->field0.field0.array[((int64_t )0ull)].array[((int64_t )3ull)]));
  m_load6263_offset_offset_load_2e_i1255_smear_ = __smear_float<__vec64_f>(m_load6263_offset_offset_load_2e_i1255_);
  __store<256>(((&row3_2e_i1192_.field0)), m_load6263_offset_offset_load_2e_i1255_smear_);
  element66_2e_i1258_ = (&row3_2e_i1192_.field1);
  m_load6768_offset_offset_load_2e_i1260_ = *((&constants_->field0.field0.array[((int64_t )1ull)].array[((int64_t )3ull)]));
  m_load6768_offset_offset_load_2e_i1260_smear_ = __smear_float<__vec64_f>(m_load6768_offset_offset_load_2e_i1260_);
  __store<256>(element66_2e_i1258_, m_load6768_offset_offset_load_2e_i1260_smear_);
  element71_2e_i1263_ = (&row3_2e_i1192_.field2);
  m_load7273_offset_offset_load_2e_i1265_ = *((&constants_->field0.field0.array[((int64_t )2ull)].array[((int64_t )3ull)]));
  m_load7273_offset_offset_load_2e_i1265_smear_ = __smear_float<__vec64_f>(m_load7273_offset_offset_load_2e_i1265_);
  __store<256>(element71_2e_i1263_, m_load7273_offset_offset_load_2e_i1265_smear_);
  element76_2e_i1268_ = (&row3_2e_i1192_.field3);
  m_load7778_offset_offset_load_2e_i1270_ = *((&constants_->field0.field0.array[((int64_t )3ull)].array[((int64_t )3ull)]));
  m_load7778_offset_offset_load_2e_i1270_smear_ = __smear_float<__vec64_f>(m_load7778_offset_offset_load_2e_i1270_);
  __store<256>(element76_2e_i1268_, m_load7778_offset_offset_load_2e_i1270_smear_);
  ptr4862_masked_load_ = __masked_load_float((((uint8_t *)(&row0_2e_i1189_))), cmp152_);
  v_load_ptr2int_2e_i1276_2void_ = ((uint8_t *)(&wpos221_));
  ptr4883_masked_load_ = __masked_load_float(v_load_ptr2int_2e_i1276_2void_, cmp152_);
  ptr4905_masked_load_ = __masked_load_float((((uint8_t *)element6_2e_i1198_)), cmp152_);
  tmp__4_ = ((uint8_t *)element226_);
  ptr4927_masked_load_ = __masked_load_float(tmp__4_, cmp152_);
  ptr4949_masked_load_ = __masked_load_float((((uint8_t *)element11_2e_i1203_)), cmp152_);
  tmp__5_ = ((uint8_t *)element230_);
  ptr4971_masked_load_ = __masked_load_float(tmp__5_, cmp152_);
  ptr4993_masked_load_ = __masked_load_float((((uint8_t *)element16_2e_i1208_)), cmp152_);
  tmp__6_ = ((uint8_t *)element234_);
  ptr5015_masked_load_ = __masked_load_float(tmp__6_, cmp152_);
  ptr5036_masked_load_ = __masked_load_float((((uint8_t *)(&row1_2e_i1190_))), cmp152_);
  ptr5080_masked_load_ = __masked_load_float((((uint8_t *)element26_2e_i1218_)), cmp152_);
  ptr5124_masked_load_ = __masked_load_float((((uint8_t *)element31_2e_i1223_)), cmp152_);
  ptr5168_masked_load_ = __masked_load_float((((uint8_t *)element36_2e_i1228_)), cmp152_);
  ptr5211_masked_load_ = __masked_load_float((((uint8_t *)(&row2_2e_i1191_))), cmp152_);
  ptr5255_masked_load_ = __masked_load_float((((uint8_t *)element46_2e_i1238_)), cmp152_);
  ptr5299_masked_load_ = __masked_load_float((((uint8_t *)element51_2e_i1243_)), cmp152_);
  ptr5343_masked_load_ = __masked_load_float((((uint8_t *)element56_2e_i1248_)), cmp152_);
  ptr5386_masked_load_ = __masked_load_float((((uint8_t *)(&row3_2e_i1192_))), cmp152_);
  ptr5430_masked_load_ = __masked_load_float((((uint8_t *)element66_2e_i1258_)), cmp152_);
  ptr5474_masked_load_ = __masked_load_float((((uint8_t *)element71_2e_i1263_)), cmp152_);
  ptr5518_masked_load_ = __masked_load_float((((uint8_t *)element76_2e_i1268_)), cmp152_);
  oldret768_ = l_v64_varying_float4 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>());
  oldret768_.field0 = (__add((__add((__add((__mul(ptr4862_masked_load_, ptr4883_masked_load_)), (__mul(ptr4905_masked_load_, ptr4927_masked_load_)))), (__mul(ptr4949_masked_load_, ptr4971_masked_load_)))), (__mul(ptr4993_masked_load_, ptr5015_masked_load_))));
  oldret770_ = oldret768_;
  oldret770_.field1 = (__add((__add((__add((__mul(ptr5036_masked_load_, ptr4883_masked_load_)), (__mul(ptr5080_masked_load_, ptr4927_masked_load_)))), (__mul(ptr5124_masked_load_, ptr4971_masked_load_)))), (__mul(ptr5168_masked_load_, ptr5015_masked_load_))));
  oldret772_ = oldret770_;
  oldret772_.field2 = (__add((__add((__add((__mul(ptr5211_masked_load_, ptr4883_masked_load_)), (__mul(ptr5255_masked_load_, ptr4927_masked_load_)))), (__mul(ptr5299_masked_load_, ptr4971_masked_load_)))), (__mul(ptr5343_masked_load_, ptr5015_masked_load_))));
  oldret774_ = oldret772_;
  oldret774_.field3 = (__add((__add((__add((__mul(ptr5386_masked_load_, ptr4883_masked_load_)), (__mul(ptr5430_masked_load_, ptr4927_masked_load_)))), (__mul(ptr5474_masked_load_, ptr4971_masked_load_)))), (__mul(ptr5518_masked_load_, ptr5015_masked_load_))));
  *(&wpos221_) = oldret774_;
  m_load3_offset_offset_load_2e_i1390_ = *((&constants_->field1.field0.array[((int64_t )0ull)].array[((int64_t )0ull)]));
  m_load3_offset_offset_load_2e_i1390_smear_ = __smear_float<__vec64_f>(m_load3_offset_offset_load_2e_i1390_);
  __store<256>(((&row0_2e_i1384_.field0)), m_load3_offset_offset_load_2e_i1390_smear_);
  element6_2e_i1393_ = (&row0_2e_i1384_.field1);
  m_load78_offset_offset_load_2e_i1395_ = *((&constants_->field1.field0.array[((int64_t )1ull)].array[((int64_t )0ull)]));
  m_load78_offset_offset_load_2e_i1395_smear_ = __smear_float<__vec64_f>(m_load78_offset_offset_load_2e_i1395_);
  __store<256>(element6_2e_i1393_, m_load78_offset_offset_load_2e_i1395_smear_);
  element11_2e_i1398_ = (&row0_2e_i1384_.field2);
  m_load1213_offset_offset_load_2e_i1400_ = *((&constants_->field1.field0.array[((int64_t )2ull)].array[((int64_t )0ull)]));
  m_load1213_offset_offset_load_2e_i1400_smear_ = __smear_float<__vec64_f>(m_load1213_offset_offset_load_2e_i1400_);
  __store<256>(element11_2e_i1398_, m_load1213_offset_offset_load_2e_i1400_smear_);
  element16_2e_i1403_ = (&row0_2e_i1384_.field3);
  m_load1718_offset_offset_load_2e_i1405_ = *((&constants_->field1.field0.array[((int64_t )3ull)].array[((int64_t )0ull)]));
  m_load1718_offset_offset_load_2e_i1405_smear_ = __smear_float<__vec64_f>(m_load1718_offset_offset_load_2e_i1405_);
  __store<256>(element16_2e_i1403_, m_load1718_offset_offset_load_2e_i1405_smear_);
  m_load2223_offset_offset_load_2e_i1410_ = *((&constants_->field1.field0.array[((int64_t )0ull)].array[((int64_t )1ull)]));
  m_load2223_offset_offset_load_2e_i1410_smear_ = __smear_float<__vec64_f>(m_load2223_offset_offset_load_2e_i1410_);
  __store<256>(((&row1_2e_i1385_.field0)), m_load2223_offset_offset_load_2e_i1410_smear_);
  element26_2e_i1413_ = (&row1_2e_i1385_.field1);
  m_load2728_offset_offset_load_2e_i1415_ = *((&constants_->field1.field0.array[((int64_t )1ull)].array[((int64_t )1ull)]));
  m_load2728_offset_offset_load_2e_i1415_smear_ = __smear_float<__vec64_f>(m_load2728_offset_offset_load_2e_i1415_);
  __store<256>(element26_2e_i1413_, m_load2728_offset_offset_load_2e_i1415_smear_);
  element31_2e_i1418_ = (&row1_2e_i1385_.field2);
  m_load3233_offset_offset_load_2e_i1420_ = *((&constants_->field1.field0.array[((int64_t )2ull)].array[((int64_t )1ull)]));
  m_load3233_offset_offset_load_2e_i1420_smear_ = __smear_float<__vec64_f>(m_load3233_offset_offset_load_2e_i1420_);
  __store<256>(element31_2e_i1418_, m_load3233_offset_offset_load_2e_i1420_smear_);
  element36_2e_i1423_ = (&row1_2e_i1385_.field3);
  m_load3738_offset_offset_load_2e_i1425_ = *((&constants_->field1.field0.array[((int64_t )3ull)].array[((int64_t )1ull)]));
  m_load3738_offset_offset_load_2e_i1425_smear_ = __smear_float<__vec64_f>(m_load3738_offset_offset_load_2e_i1425_);
  __store<256>(element36_2e_i1423_, m_load3738_offset_offset_load_2e_i1425_smear_);
  m_load4243_offset_offset_load_2e_i1430_ = *((&constants_->field1.field0.array[((int64_t )0ull)].array[((int64_t )2ull)]));
  m_load4243_offset_offset_load_2e_i1430_smear_ = __smear_float<__vec64_f>(m_load4243_offset_offset_load_2e_i1430_);
  __store<256>(((&row2_2e_i1386_.field0)), m_load4243_offset_offset_load_2e_i1430_smear_);
  element46_2e_i1433_ = (&row2_2e_i1386_.field1);
  m_load4748_offset_offset_load_2e_i1435_ = *((&constants_->field1.field0.array[((int64_t )1ull)].array[((int64_t )2ull)]));
  m_load4748_offset_offset_load_2e_i1435_smear_ = __smear_float<__vec64_f>(m_load4748_offset_offset_load_2e_i1435_);
  __store<256>(element46_2e_i1433_, m_load4748_offset_offset_load_2e_i1435_smear_);
  element51_2e_i1438_ = (&row2_2e_i1386_.field2);
  m_load5253_offset_offset_load_2e_i1440_ = *((&constants_->field1.field0.array[((int64_t )2ull)].array[((int64_t )2ull)]));
  m_load5253_offset_offset_load_2e_i1440_smear_ = __smear_float<__vec64_f>(m_load5253_offset_offset_load_2e_i1440_);
  __store<256>(element51_2e_i1438_, m_load5253_offset_offset_load_2e_i1440_smear_);
  element56_2e_i1443_ = (&row2_2e_i1386_.field3);
  m_load5758_offset_offset_load_2e_i1445_ = *((&constants_->field1.field0.array[((int64_t )3ull)].array[((int64_t )2ull)]));
  m_load5758_offset_offset_load_2e_i1445_smear_ = __smear_float<__vec64_f>(m_load5758_offset_offset_load_2e_i1445_);
  __store<256>(element56_2e_i1443_, m_load5758_offset_offset_load_2e_i1445_smear_);
  m_load6263_offset_offset_load_2e_i1450_ = *((&constants_->field1.field0.array[((int64_t )0ull)].array[((int64_t )3ull)]));
  m_load6263_offset_offset_load_2e_i1450_smear_ = __smear_float<__vec64_f>(m_load6263_offset_offset_load_2e_i1450_);
  __store<256>(((&row3_2e_i1387_.field0)), m_load6263_offset_offset_load_2e_i1450_smear_);
  element66_2e_i1453_ = (&row3_2e_i1387_.field1);
  m_load6768_offset_offset_load_2e_i1455_ = *((&constants_->field1.field0.array[((int64_t )1ull)].array[((int64_t )3ull)]));
  m_load6768_offset_offset_load_2e_i1455_smear_ = __smear_float<__vec64_f>(m_load6768_offset_offset_load_2e_i1455_);
  __store<256>(element66_2e_i1453_, m_load6768_offset_offset_load_2e_i1455_smear_);
  element71_2e_i1458_ = (&row3_2e_i1387_.field2);
  m_load7273_offset_offset_load_2e_i1460_ = *((&constants_->field1.field0.array[((int64_t )2ull)].array[((int64_t )3ull)]));
  m_load7273_offset_offset_load_2e_i1460_smear_ = __smear_float<__vec64_f>(m_load7273_offset_offset_load_2e_i1460_);
  __store<256>(element71_2e_i1458_, m_load7273_offset_offset_load_2e_i1460_smear_);
  element76_2e_i1463_ = (&row3_2e_i1387_.field3);
  m_load7778_offset_offset_load_2e_i1465_ = *((&constants_->field1.field0.array[((int64_t )3ull)].array[((int64_t )3ull)]));
  m_load7778_offset_offset_load_2e_i1465_smear_ = __smear_float<__vec64_f>(m_load7778_offset_offset_load_2e_i1465_);
  __store<256>(element76_2e_i1463_, m_load7778_offset_offset_load_2e_i1465_smear_);
  ptr5561_masked_load_ = __masked_load_float((((uint8_t *)(&row0_2e_i1384_))), cmp152_);
  ptr5582_masked_load_ = __masked_load_float(v_load_ptr2int_2e_i1276_2void_, cmp152_);
  ptr5604_masked_load_ = __masked_load_float((((uint8_t *)element6_2e_i1393_)), cmp152_);
  ptr5626_masked_load_ = __masked_load_float(tmp__4_, cmp152_);
  ptr5648_masked_load_ = __masked_load_float((((uint8_t *)element11_2e_i1398_)), cmp152_);
  ptr5670_masked_load_ = __masked_load_float(tmp__5_, cmp152_);
  ptr5692_masked_load_ = __masked_load_float((((uint8_t *)element16_2e_i1403_)), cmp152_);
  ptr5714_masked_load_ = __masked_load_float(tmp__6_, cmp152_);
  ptr5735_masked_load_ = __masked_load_float((((uint8_t *)(&row1_2e_i1385_))), cmp152_);
  ptr5779_masked_load_ = __masked_load_float((((uint8_t *)element26_2e_i1413_)), cmp152_);
  ptr5823_masked_load_ = __masked_load_float((((uint8_t *)element31_2e_i1418_)), cmp152_);
  ptr5867_masked_load_ = __masked_load_float((((uint8_t *)element36_2e_i1423_)), cmp152_);
  ptr5910_masked_load_ = __masked_load_float((((uint8_t *)(&row2_2e_i1386_))), cmp152_);
  ptr5954_masked_load_ = __masked_load_float((((uint8_t *)element46_2e_i1433_)), cmp152_);
  ptr5998_masked_load_ = __masked_load_float((((uint8_t *)element51_2e_i1438_)), cmp152_);
  ptr6042_masked_load_ = __masked_load_float((((uint8_t *)element56_2e_i1443_)), cmp152_);
  ptr6085_masked_load_ = __masked_load_float((((uint8_t *)(&row3_2e_i1387_))), cmp152_);
  ptr6129_masked_load_ = __masked_load_float((((uint8_t *)element66_2e_i1453_)), cmp152_);
  ptr6173_masked_load_ = __masked_load_float((((uint8_t *)element71_2e_i1458_)), cmp152_);
  ptr6217_masked_load_ = __masked_load_float((((uint8_t *)element76_2e_i1463_)), cmp152_);
  oldret760_ = l_v64_varying_float4 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>());
  oldret760_.field0 = (__add((__add((__add((__mul(ptr5561_masked_load_, ptr5582_masked_load_)), (__mul(ptr5604_masked_load_, ptr5626_masked_load_)))), (__mul(ptr5648_masked_load_, ptr5670_masked_load_)))), (__mul(ptr5692_masked_load_, ptr5714_masked_load_))));
  oldret762_ = oldret760_;
  oldret762_.field1 = (__add((__add((__add((__mul(ptr5735_masked_load_, ptr5582_masked_load_)), (__mul(ptr5779_masked_load_, ptr5626_masked_load_)))), (__mul(ptr5823_masked_load_, ptr5670_masked_load_)))), (__mul(ptr5867_masked_load_, ptr5714_masked_load_))));
  oldret764_ = oldret762_;
  oldret764_.field2 = (__add((__add((__add((__mul(ptr5910_masked_load_, ptr5582_masked_load_)), (__mul(ptr5954_masked_load_, ptr5626_masked_load_)))), (__mul(ptr5998_masked_load_, ptr5670_masked_load_)))), (__mul(ptr6042_masked_load_, ptr5714_masked_load_))));
  oldret766_ = oldret764_;
  oldret766_.field3 = (__add((__add((__add((__mul(ptr6085_masked_load_, ptr5582_masked_load_)), (__mul(ptr6129_masked_load_, ptr5626_masked_load_)))), (__mul(ptr6173_masked_load_, ptr5670_masked_load_)))), (__mul(ptr6217_masked_load_, ptr5714_masked_load_))));
  *(&wpos221_) = oldret766_;
  m_load3_offset_offset_load_2e_i1585_ = *((&constants_->field2.field0.array[((int64_t )0ull)].array[((int64_t )0ull)]));
  m_load3_offset_offset_load_2e_i1585_smear_ = __smear_float<__vec64_f>(m_load3_offset_offset_load_2e_i1585_);
  __store<256>(((&row0_2e_i1579_.field0)), m_load3_offset_offset_load_2e_i1585_smear_);
  element6_2e_i1588_ = (&row0_2e_i1579_.field1);
  m_load78_offset_offset_load_2e_i1590_ = *((&constants_->field2.field0.array[((int64_t )1ull)].array[((int64_t )0ull)]));
  m_load78_offset_offset_load_2e_i1590_smear_ = __smear_float<__vec64_f>(m_load78_offset_offset_load_2e_i1590_);
  __store<256>(element6_2e_i1588_, m_load78_offset_offset_load_2e_i1590_smear_);
  element11_2e_i1593_ = (&row0_2e_i1579_.field2);
  m_load1213_offset_offset_load_2e_i1595_ = *((&constants_->field2.field0.array[((int64_t )2ull)].array[((int64_t )0ull)]));
  m_load1213_offset_offset_load_2e_i1595_smear_ = __smear_float<__vec64_f>(m_load1213_offset_offset_load_2e_i1595_);
  __store<256>(element11_2e_i1593_, m_load1213_offset_offset_load_2e_i1595_smear_);
  element16_2e_i1598_ = (&row0_2e_i1579_.field3);
  m_load1718_offset_offset_load_2e_i1600_ = *((&constants_->field2.field0.array[((int64_t )3ull)].array[((int64_t )0ull)]));
  m_load1718_offset_offset_load_2e_i1600_smear_ = __smear_float<__vec64_f>(m_load1718_offset_offset_load_2e_i1600_);
  __store<256>(element16_2e_i1598_, m_load1718_offset_offset_load_2e_i1600_smear_);
  m_load2223_offset_offset_load_2e_i1605_ = *((&constants_->field2.field0.array[((int64_t )0ull)].array[((int64_t )1ull)]));
  m_load2223_offset_offset_load_2e_i1605_smear_ = __smear_float<__vec64_f>(m_load2223_offset_offset_load_2e_i1605_);
  __store<256>(((&row1_2e_i1580_.field0)), m_load2223_offset_offset_load_2e_i1605_smear_);
  element26_2e_i1608_ = (&row1_2e_i1580_.field1);
  m_load2728_offset_offset_load_2e_i1610_ = *((&constants_->field2.field0.array[((int64_t )1ull)].array[((int64_t )1ull)]));
  m_load2728_offset_offset_load_2e_i1610_smear_ = __smear_float<__vec64_f>(m_load2728_offset_offset_load_2e_i1610_);
  __store<256>(element26_2e_i1608_, m_load2728_offset_offset_load_2e_i1610_smear_);
  element31_2e_i1613_ = (&row1_2e_i1580_.field2);
  m_load3233_offset_offset_load_2e_i1615_ = *((&constants_->field2.field0.array[((int64_t )2ull)].array[((int64_t )1ull)]));
  m_load3233_offset_offset_load_2e_i1615_smear_ = __smear_float<__vec64_f>(m_load3233_offset_offset_load_2e_i1615_);
  __store<256>(element31_2e_i1613_, m_load3233_offset_offset_load_2e_i1615_smear_);
  element36_2e_i1618_ = (&row1_2e_i1580_.field3);
  m_load3738_offset_offset_load_2e_i1620_ = *((&constants_->field2.field0.array[((int64_t )3ull)].array[((int64_t )1ull)]));
  m_load3738_offset_offset_load_2e_i1620_smear_ = __smear_float<__vec64_f>(m_load3738_offset_offset_load_2e_i1620_);
  __store<256>(element36_2e_i1618_, m_load3738_offset_offset_load_2e_i1620_smear_);
  m_load4243_offset_offset_load_2e_i1625_ = *((&constants_->field2.field0.array[((int64_t )0ull)].array[((int64_t )2ull)]));
  m_load4243_offset_offset_load_2e_i1625_smear_ = __smear_float<__vec64_f>(m_load4243_offset_offset_load_2e_i1625_);
  __store<256>(((&row2_2e_i1581_.field0)), m_load4243_offset_offset_load_2e_i1625_smear_);
  element46_2e_i1628_ = (&row2_2e_i1581_.field1);
  m_load4748_offset_offset_load_2e_i1630_ = *((&constants_->field2.field0.array[((int64_t )1ull)].array[((int64_t )2ull)]));
  m_load4748_offset_offset_load_2e_i1630_smear_ = __smear_float<__vec64_f>(m_load4748_offset_offset_load_2e_i1630_);
  __store<256>(element46_2e_i1628_, m_load4748_offset_offset_load_2e_i1630_smear_);
  element51_2e_i1633_ = (&row2_2e_i1581_.field2);
  m_load5253_offset_offset_load_2e_i1635_ = *((&constants_->field2.field0.array[((int64_t )2ull)].array[((int64_t )2ull)]));
  m_load5253_offset_offset_load_2e_i1635_smear_ = __smear_float<__vec64_f>(m_load5253_offset_offset_load_2e_i1635_);
  __store<256>(element51_2e_i1633_, m_load5253_offset_offset_load_2e_i1635_smear_);
  element56_2e_i1638_ = (&row2_2e_i1581_.field3);
  m_load5758_offset_offset_load_2e_i1640_ = *((&constants_->field2.field0.array[((int64_t )3ull)].array[((int64_t )2ull)]));
  m_load5758_offset_offset_load_2e_i1640_smear_ = __smear_float<__vec64_f>(m_load5758_offset_offset_load_2e_i1640_);
  __store<256>(element56_2e_i1638_, m_load5758_offset_offset_load_2e_i1640_smear_);
  m_load6263_offset_offset_load_2e_i1645_ = *((&constants_->field2.field0.array[((int64_t )0ull)].array[((int64_t )3ull)]));
  m_load6263_offset_offset_load_2e_i1645_smear_ = __smear_float<__vec64_f>(m_load6263_offset_offset_load_2e_i1645_);
  __store<256>(((&row3_2e_i1582_.field0)), m_load6263_offset_offset_load_2e_i1645_smear_);
  element66_2e_i1648_ = (&row3_2e_i1582_.field1);
  m_load6768_offset_offset_load_2e_i1650_ = *((&constants_->field2.field0.array[((int64_t )1ull)].array[((int64_t )3ull)]));
  m_load6768_offset_offset_load_2e_i1650_smear_ = __smear_float<__vec64_f>(m_load6768_offset_offset_load_2e_i1650_);
  __store<256>(element66_2e_i1648_, m_load6768_offset_offset_load_2e_i1650_smear_);
  element71_2e_i1653_ = (&row3_2e_i1582_.field2);
  m_load7273_offset_offset_load_2e_i1655_ = *((&constants_->field2.field0.array[((int64_t )2ull)].array[((int64_t )3ull)]));
  m_load7273_offset_offset_load_2e_i1655_smear_ = __smear_float<__vec64_f>(m_load7273_offset_offset_load_2e_i1655_);
  __store<256>(element71_2e_i1653_, m_load7273_offset_offset_load_2e_i1655_smear_);
  element76_2e_i1658_ = (&row3_2e_i1582_.field3);
  m_load7778_offset_offset_load_2e_i1660_ = *((&constants_->field2.field0.array[((int64_t )3ull)].array[((int64_t )3ull)]));
  m_load7778_offset_offset_load_2e_i1660_smear_ = __smear_float<__vec64_f>(m_load7778_offset_offset_load_2e_i1660_);
  __store<256>(element76_2e_i1658_, m_load7778_offset_offset_load_2e_i1660_smear_);
  ptr6260_masked_load_ = __masked_load_float((((uint8_t *)(&row0_2e_i1579_))), cmp152_);
  ptr6281_masked_load_ = __masked_load_float(v_load_ptr2int_2e_i1276_2void_, cmp152_);
  ptr6303_masked_load_ = __masked_load_float((((uint8_t *)element6_2e_i1588_)), cmp152_);
  ptr6325_masked_load_ = __masked_load_float(tmp__4_, cmp152_);
  ptr6347_masked_load_ = __masked_load_float((((uint8_t *)element11_2e_i1593_)), cmp152_);
  ptr6369_masked_load_ = __masked_load_float(tmp__5_, cmp152_);
  ptr6391_masked_load_ = __masked_load_float((((uint8_t *)element16_2e_i1598_)), cmp152_);
  ptr6413_masked_load_ = __masked_load_float(tmp__6_, cmp152_);
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i1691_ = __add((__add((__add((__mul(ptr6260_masked_load_, ptr6281_masked_load_)), (__mul(ptr6303_masked_load_, ptr6325_masked_load_)))), (__mul(ptr6347_masked_load_, ptr6369_masked_load_)))), (__mul(ptr6391_masked_load_, ptr6413_masked_load_)));
  ptr6434_masked_load_ = __masked_load_float((((uint8_t *)(&row1_2e_i1580_))), cmp152_);
  ptr6478_masked_load_ = __masked_load_float((((uint8_t *)element26_2e_i1608_)), cmp152_);
  ptr6522_masked_load_ = __masked_load_float((((uint8_t *)element31_2e_i1613_)), cmp152_);
  ptr6566_masked_load_ = __masked_load_float((((uint8_t *)element36_2e_i1618_)), cmp152_);
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i1717_ = __add((__add((__add((__mul(ptr6434_masked_load_, ptr6281_masked_load_)), (__mul(ptr6478_masked_load_, ptr6325_masked_load_)))), (__mul(ptr6522_masked_load_, ptr6369_masked_load_)))), (__mul(ptr6566_masked_load_, ptr6413_masked_load_)));
  ptr6609_masked_load_ = __masked_load_float((((uint8_t *)(&row2_2e_i1581_))), cmp152_);
  ptr6653_masked_load_ = __masked_load_float((((uint8_t *)element46_2e_i1628_)), cmp152_);
  ptr6697_masked_load_ = __masked_load_float((((uint8_t *)element51_2e_i1633_)), cmp152_);
  ptr6741_masked_load_ = __masked_load_float((((uint8_t *)element56_2e_i1638_)), cmp152_);
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i1743_ = __add((__add((__add((__mul(ptr6609_masked_load_, ptr6281_masked_load_)), (__mul(ptr6653_masked_load_, ptr6325_masked_load_)))), (__mul(ptr6697_masked_load_, ptr6369_masked_load_)))), (__mul(ptr6741_masked_load_, ptr6413_masked_load_)));
  ptr6784_masked_load_ = __masked_load_float((((uint8_t *)(&row3_2e_i1582_))), cmp152_);
  ptr6828_masked_load_ = __masked_load_float((((uint8_t *)element66_2e_i1648_)), cmp152_);
  ptr6872_masked_load_ = __masked_load_float((((uint8_t *)element71_2e_i1653_)), cmp152_);
  ptr6916_masked_load_ = __masked_load_float((((uint8_t *)element76_2e_i1658_)), cmp152_);
  add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i1769_ = __add((__add((__add((__mul(ptr6784_masked_load_, ptr6281_masked_load_)), (__mul(ptr6828_masked_load_, ptr6325_masked_load_)))), (__mul(ptr6872_masked_load_, ptr6369_masked_load_)))), (__mul(ptr6916_masked_load_, ptr6413_masked_load_)));
  oldret_ = l_v64_varying_float4 ::init( __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>(), __setzero_float<__vec64_f>());
  oldret_.field0 = add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i1691_;
  oldret754_ = oldret_;
  oldret754_.field1 = add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i1717_;
  oldret756_ = oldret754_;
  oldret756_.field2 = add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i1743_;
  oldret758_ = oldret756_;
  oldret758_.field3 = add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i1769_;
  *(&wpos221_) = oldret758_;
  output_load251_ptr2int_2void_ = ((uint8_t *)output_);
  __scatter_base_offsets32_float(output_load251_ptr2int_2void_, 1u, mul__index_load158_, add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i_2e_i1691_, cmp152_);
  __scatter_base_offsets32_float(output_load251_ptr2int_2void_, 1u, new_add515_, add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i29_2e_i1717_, cmp152_);
  __scatter_base_offsets32_float(output_load251_ptr2int_2void_, 1u, new_add523_, add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i52_2e_i1743_, cmp152_);
  __scatter_base_offsets32_float(output_load251_ptr2int_2void_, 1u, new_add532_, add_add_add_mul_struct_ptr_offset_offset_x_struct_ptr_offset12_offset_x_mul_struct_ptr_offset24_offset_y_struct_ptr_offset36_offset_y_mul_struct_ptr_offset48_offset_z_struct_ptr_offset60_offset_z_mul_struct_ptr_offset72_offset_w_struct_ptr_offset84_offset_w_2e_i75_2e_i1769_, cmp152_);
  v157271_Color_ = *((&v157_.field1));
  v157271_Color_extract_0_ = (v157271_Color_.field0);
  __scatter_base_offsets32_float(output_load251_ptr2int_2void_, 1u, new_add542_, v157271_Color_extract_0_, cmp152_);
  v157271_Color_extract_1_ = (v157271_Color_.field1);
  __scatter_base_offsets32_float(output_load251_ptr2int_2void_, 1u, new_add553_, v157271_Color_extract_1_, cmp152_);
  v157271_Color_extract_2_ = (v157271_Color_.field2);
  __scatter_base_offsets32_float(output_load251_ptr2int_2void_, 1u, new_add565_, v157271_Color_extract_2_, cmp152_);
  v157271_Color_extract_3_ = (v157271_Color_.field3);
  __scatter_base_offsets32_float(output_load251_ptr2int_2void_, 1u, new_add578_, v157271_Color_extract_3_, cmp152_);
  goto foreach_reset_label;

}
}

